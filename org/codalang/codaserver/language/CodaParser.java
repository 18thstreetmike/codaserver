// $ANTLR 3.0.1 /Users/michaelarace/CodaServer_Src/Coda.g 2008-12-11 03:02:06

	package org.codalang.codaserver.language;
	
	import org.codalang.codaserver.language.objects.*;
	import org.codalang.codaserver.*;
	import org.codalang.codaserver.database.*;
	import java.util.Iterator;
	import java.util.Vector;
	import java.util.Hashtable;


import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import org.antlr.stringtemplate.*;
import org.antlr.stringtemplate.language.*;
import java.util.HashMap;
public class CodaParser extends Parser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "ObjectName", "Integer", "UnicodeStringLiteral", "ASCIIStringLiteral", "WS", "OTHER_CHARS", "'ADDRESS'", "'ALT_PHONE'", "'APPLICATIONS'", "'CITY'", "'CONNECT'", "'COUNTRY'", "'CRONS'", "'DEV'", "'DEVELOPER'", "'DRIVER'", "'EMAIL'", "'FIELDS'", "'FIRST_NAME'", "'FORMAT'", "'FORMS'", "'GROUPS'", "'HOSTNAME'", "'ID'", "'INDEXES'", "'LAST_NAME'", "'MANAGE_APPLICATIONS'", "'MANAGE_DATASOURCES'", "'MANAGE_DEVELOPMENT'", "'MANAGE_GROUPS'", "'MANAGE_PRODUCTION'", "'MANAGE_SESSIONS'", "'MANAGE_TESTING'", "'MANAGE_TYPES'", "'MANAGE_USER_DATA'", "'MANAGE_USERS'", "'MIDDLE_NAME'", "'OPTIONS'", "'ORGANIZATION'", "'PARAMETERS'", "'PASSWORD'", "'PERMISSIONS'", "'PHONE'", "'POSTAL_CODE'", "'PREFIX'", "'PROCEDURES'", "'PROD'", "'QUERY_SYSTEM_TABLES'", "'RELATIONSHIPS'", "'ROLES'", "'ROOT'", "'SAVE_MASK'", "'SCHEMA'", "'SESSIONS'", "'STATE_PROV'", "'STATUSES'", "'TABLES'", "'TEST'", "'TRIGGERS'", "'TYPES'", "'USERNAME'", "'USERS'", "'VALIDATION_MASK'", "'MANAGE_ROLES'", "'MANAGE_CRONS'", "'INSERT'", "'UPDATE'", "'DELETE'", "'COMMIT'", "'ROLLBACK'", "':'", "'TO'", "'APPLICATION'", "'.'", "'IN'", "'GROUP'", "'DISCONNECT'", "'SET'", "'CREATE'", "'DATASOURCE'", "'('", "','", "')'", "'WITH'", "'USING'", "'ADMIN'", "'ALTER'", "'OPTION'", "'DROP'", "'ON'", "'USER'", "'IDENTIFIED'", "'BY'", "'AS'", "'ROBOT'", "'='", "'ADD'", "'REMOVE'", "'TYPE'", "'FOR'", "'CODA'", "'REVISION'", "'PROMOTE'", "'GRANT'", "'ROLE'", "'TABLE'", "'FORM'", "'PROCEDURE'", "'REVOKE'", "'FROM'", "'PERMISSION'", "'REF'", "'SUBTABLE'", "'OF'", "'SOFT'", "'COLUMN'", "'IDENTITY'", "'SUBFORM'", "'FIELD'", "'STATUS'", "'ORDER'", "'INDEX'", "'UNIQUE'", "'CRON'", "'IS'", "'SELECTOBJECT'", "'WHERE'", "'GREEDY'", "'RAW'", "'SQL'", "'SELECT'", "'REPLACE'", "'TRIGGER'", "'BEFORE'", "'AFTER'", "'ENDTRIGGER'", "'RETURNS'", "'ARRAY'", "'ENDPROCEDURE'", "'EXEC'", "'SHOW'", "'DATASOURCES'", "'SERVER'", "'SYS'", "'INFO'", "'APP'", "'DESCRIBE'", "'COLUMNS'", "'REFERENCE'", "'NULL'", "'NOT'", "'DEFAULT'", "'LEADS'", "'NOTHING'", "'INITIAL'", "'DISPLAY'", "'RENAME'", "'['", "']'", "'DISPLAYED'", "'INTO'", "'VALUES'", "'NEW'", "'INNER'", "'LEFT'", "'RIGHT'", "'FULL'", "'OUTER'", "'JOIN'", "'TOP'", "'STARTING'", "'AT'", "'DISTINCT'", "'SYSSELECT'", "'*'", "'AND'", "'OR'", "'LIKE'", "'CONTAINS'", "'<>'", "'<='", "'!='", "'<'", "'>='", "'>'", "'ALL'", "'+'", "'-'", "'~'", "'/'", "'%'", "'CURRENT_TIMESTAMP'", "'CURRENT_USER_ID'", "'CURRENT_GROUP_NAME'", "'CURRENT_USERNAME'", "'ASC'", "'DESC'", "'HAVING'", "'VIEW'", "'CALL'", "'EXECUTE'", "'?'"
    };
    public static final int OTHER_CHARS=9;
    public static final int WS=8;
    public static final int EOF=-1;
    public static final int ObjectName=4;
    public static final int UnicodeStringLiteral=6;
    public static final int Integer=5;
    public static final int ASCIIStringLiteral=7;

        public CodaParser(TokenStream input) {
            super(input);
            ruleMemo = new HashMap[660+1];
         }
        
    protected StringTemplateGroup templateLib =
      new StringTemplateGroup("CodaParserTemplates", AngleBracketTemplateLexer.class);

    public void setTemplateLib(StringTemplateGroup templateLib) {
      this.templateLib = templateLib;
    }
    public StringTemplateGroup getTemplateLib() {
      return templateLib;
    }
    /** allows convenient multi-value initialization:
     *  "new STAttrMap().put(...).put(...)"
     */
    public static class STAttrMap extends HashMap {
      public STAttrMap put(String attrName, Object value) {
        super.put(attrName, value);
        return this;
      }
      public STAttrMap put(String attrName, int value) {
        super.put(attrName, new Integer(value));
        return this;
      }
    }

    public String[] getTokenNames() { return tokenNames; }
    public String getGrammarFileName() { return "/Users/michaelarace/CodaServer_Src/Coda.g"; }


    	CodaServer server;
    	String sessionKey;
    	CodaDatabase database;
    	
    	public CodaParser(TokenStream input, CodaServer server, String sessionKey, CodaDatabase database) {
    		this(input);
    		this.server = server;
    		this.sessionKey = sessionKey;
    		this.database = database;
    	}
    	
    	public CodaDatabase getDatabase() {
    		return database;
    	}
    	
    	public void logTransaction(String codaStatement, String applicationName, String tableName) {
    		if (database == null) {
    			if (applicationName == null) {
    				applicationName = server.getSessionApplication(sessionKey);
    			}
    			if (applicationName != null) {
    				CodaConnection serverConnection = server.getDatabase().getConnection();
    				long applicationId = server.getIdForObjectName(serverConnection, applicationName, CodaServer.OBJECT_TYPE_APPLICATION);
    				long userId = server.getSessionUserId(sessionKey);
    				server.logTransaction(serverConnection, applicationId, codaStatement, server.isRefTable(applicationName, tableName), userId);
    			}
    		} 
    	}

    	public void logTransaction(String codaStatement, String applicationName, boolean refTable) {
    		if (database == null) {
    			if (applicationName == null) {
    				applicationName = server.getSessionApplication(sessionKey);
    			}
    			if (applicationName != null) {
    				CodaConnection serverConnection = server.getDatabase().getConnection();
    				long applicationId = server.getIdForObjectName(serverConnection, applicationName, CodaServer.OBJECT_TYPE_APPLICATION);
    				long userId = server.getSessionUserId(sessionKey);
    				server.logTransaction(serverConnection, applicationId, codaStatement, refTable, userId);
    			}
    		} 
    	}



    public static class stat_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start stat
    // /Users/michaelarace/CodaServer_Src/Coda.g:82:1: stat returns [CodaResponse response] : (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback ) ;
    public final stat_return stat() throws RecognitionException {
        stat_return retval = new stat_return();
        retval.start = input.LT(1);
        int stat_StartIndex = input.index();
        connect_return connectResp = null;

        disconnect_return disconnectResp = null;

        setApplication_return setApplicationResp = null;

        createDatasource_return createDatasourceResp = null;

        alterDatasource_return alterDatasourceResp = null;

        dropDatasource_return dropDatasourceResp = null;

        formatDatasource_return formatDatasourceResp = null;

        promoteApplication_return promoteApplicationResp = null;

        createApplication_return createApplicationResp = null;

        alterApplication_return alterApplicationResp = null;

        dropApplication_return dropApplicationResp = null;

        createUser_return createUserResp = null;

        alterUser_return alterUserResp = null;

        dropUser_return dropUserResp = null;

        createGroup_return createGroupResp = null;

        alterGroup_return alterGroupResp = null;

        dropGroup_return dropGroupResp = null;

        createType_return createTypeResp = null;

        alterType_return alterTypeResp = null;

        dropType_return dropTypeResp = null;

        grant_return grantResp = null;

        revoke_return revokeResp = null;

        createRole_return createRoleResp = null;

        alterRole_return alterRoleResp = null;

        dropRole_return dropRoleResp = null;

        createPermission_return createPermissionResp = null;

        alterPermission_return alterPermissionResp = null;

        dropPermission_return dropPermissionResp = null;

        createTable_return createTableResp = null;

        alterTable_return alterTableResp = null;

        dropTable_return dropTableResp = null;

        createForm_return createFormResp = null;

        alterForm_return alterFormResp = null;

        dropForm_return dropFormResp = null;

        createIndex_return createIndexResp = null;

        dropIndex_return dropIndexResp = null;

        createTrigger_return createTriggerResp = null;

        dropTrigger_return dropTriggerResp = null;

        createProcedure_return createProcedureResp = null;

        alterProcedure_return alterProcedureResp = null;

        dropProcedure_return dropProcedureResp = null;

        insert_return insertResp = null;

        update_return updateResp = null;

        delete_return deleteResp = null;

        formUpdate_return formUpdateResp = null;

        execProcedure_return execProcedureResp = null;

        cron_return cronResp = null;

        dropCron_return dropCronResp = null;

        selectObject_return selectObjectResp = null;

        select_return selectResp = null;

        rawSQL_return rawSQLResp = null;

        rawSelect_return rawSelectResp = null;

        sysSelect_return sysSelectResp = null;

        show_return showResp = null;

        describe_return describeResp = null;

        commit_return commitResp = null;

        rollback_return rollbackResp = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 1) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:82:37: ( (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )
            int alt1=57;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==14) ) {
                int LA1_1 = input.LA(2);

                if ( (LA1_1==ObjectName) ) {
                    int LA1_27 = input.LA(3);

                    if ( (synpred1()) ) {
                        alt1=1;
                    }
                    else if ( (synpred45()) ) {
                        alt1=45;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )", 1, 27, input);

                        throw nvae;
                    }
                }
                else if ( ((LA1_1>=10 && LA1_1<=66)) ) {
                    int LA1_28 = input.LA(3);

                    if ( (synpred1()) ) {
                        alt1=1;
                    }
                    else if ( (synpred45()) ) {
                        alt1=45;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )", 1, 28, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )", 1, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA1_0==80) ) {
                alt1=2;
            }
            else if ( (LA1_0==81) ) {
                alt1=3;
            }
            else if ( (LA1_0==82) ) {
                switch ( input.LA(2) ) {
                case 108:
                    {
                    alt1=23;
                    }
                    break;
                case 114:
                    {
                    alt1=26;
                    }
                    break;
                case 94:
                    {
                    alt1=12;
                    }
                    break;
                case 136:
                    {
                    alt1=37;
                    }
                    break;
                case 125:
                    {
                    alt1=35;
                    }
                    break;
                case 111:
                    {
                    alt1=39;
                    }
                    break;
                case 102:
                    {
                    alt1=18;
                    }
                    break;
                case 83:
                    {
                    alt1=4;
                    }
                    break;
                case 79:
                    {
                    int LA1_37 = input.LA(3);

                    if ( (synpred9()) ) {
                        alt1=9;
                    }
                    else if ( (synpred15()) ) {
                        alt1=15;
                    }
                    else if ( (synpred29()) ) {
                        alt1=29;
                    }
                    else if ( (synpred32()) ) {
                        alt1=32;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )", 1, 37, input);

                        throw nvae;
                    }
                    }
                    break;
                case 110:
                case 121:
                    {
                    alt1=32;
                    }
                    break;
                case 76:
                    {
                    alt1=9;
                    }
                    break;
                case 109:
                case 115:
                case 116:
                    {
                    alt1=29;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )", 1, 4, input);

                    throw nvae;
                }

            }
            else if ( (LA1_0==90) ) {
                switch ( input.LA(2) ) {
                case 111:
                    {
                    alt1=40;
                    }
                    break;
                case 83:
                    {
                    alt1=5;
                    }
                    break;
                case 94:
                    {
                    alt1=13;
                    }
                    break;
                case 102:
                    {
                    alt1=19;
                    }
                    break;
                case 110:
                    {
                    alt1=33;
                    }
                    break;
                case 109:
                    {
                    alt1=30;
                    }
                    break;
                case 79:
                    {
                    alt1=16;
                    }
                    break;
                case 114:
                    {
                    alt1=27;
                    }
                    break;
                case 76:
                    {
                    alt1=10;
                    }
                    break;
                case 108:
                    {
                    alt1=24;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )", 1, 5, input);

                    throw nvae;
                }

            }
            else if ( (LA1_0==92) ) {
                switch ( input.LA(2) ) {
                case 76:
                    {
                    alt1=11;
                    }
                    break;
                case 114:
                    {
                    alt1=28;
                    }
                    break;
                case 125:
                    {
                    alt1=36;
                    }
                    break;
                case 102:
                    {
                    alt1=20;
                    }
                    break;
                case 83:
                    {
                    alt1=6;
                    }
                    break;
                case 108:
                    {
                    alt1=25;
                    }
                    break;
                case 111:
                    {
                    alt1=41;
                    }
                    break;
                case 110:
                    {
                    alt1=34;
                    }
                    break;
                case 109:
                    {
                    alt1=31;
                    }
                    break;
                case 79:
                    {
                    alt1=17;
                    }
                    break;
                case 136:
                    {
                    alt1=38;
                    }
                    break;
                case 94:
                    {
                    alt1=14;
                    }
                    break;
                case 127:
                    {
                    alt1=48;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )", 1, 6, input);

                    throw nvae;
                }

            }
            else if ( (LA1_0==23) ) {
                int LA1_7 = input.LA(2);

                if ( (LA1_7==83) ) {
                    alt1=7;
                }
                else if ( (LA1_7==ObjectName||(LA1_7>=10 && LA1_7<=66)) ) {
                    alt1=45;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )", 1, 7, input);

                    throw nvae;
                }
            }
            else if ( (LA1_0==106) ) {
                alt1=8;
            }
            else if ( (LA1_0==107) ) {
                alt1=21;
            }
            else if ( (LA1_0==112) ) {
                alt1=22;
            }
            else if ( (LA1_0==135) ) {
                int LA1_11 = input.LA(2);

                if ( (LA1_11==136) ) {
                    alt1=37;
                }
                else if ( (LA1_11==111) ) {
                    alt1=39;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )", 1, 11, input);

                    throw nvae;
                }
            }
            else if ( (LA1_0==69) && (synpred42())) {
                alt1=42;
            }
            else if ( (LA1_0==70) && (synpred43())) {
                alt1=43;
            }
            else if ( (LA1_0==71) && (synpred44())) {
                alt1=44;
            }
            else if ( (LA1_0==ObjectName||(LA1_0>=10 && LA1_0<=13)||(LA1_0>=15 && LA1_0<=22)||(LA1_0>=24 && LA1_0<=66)) ) {
                alt1=45;
            }
            else if ( (LA1_0==143) ) {
                alt1=46;
            }
            else if ( (LA1_0==127) ) {
                alt1=47;
            }
            else if ( (LA1_0==129) ) {
                alt1=49;
            }
            else if ( (LA1_0==134) ) {
                alt1=50;
            }
            else if ( (LA1_0==132) ) {
                int LA1_21 = input.LA(2);

                if ( (LA1_21==133) ) {
                    alt1=51;
                }
                else if ( (LA1_21==134) ) {
                    alt1=52;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )", 1, 21, input);

                    throw nvae;
                }
            }
            else if ( (LA1_0==177) ) {
                alt1=53;
            }
            else if ( (LA1_0==144) ) {
                alt1=54;
            }
            else if ( (LA1_0==150) ) {
                alt1=55;
            }
            else if ( (LA1_0==72) ) {
                alt1=56;
            }
            else if ( (LA1_0==73) ) {
                alt1=57;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("83:2: (connectResp= connect | disconnectResp= disconnect | setApplicationResp= setApplication | createDatasourceResp= createDatasource | alterDatasourceResp= alterDatasource | dropDatasourceResp= dropDatasource | formatDatasourceResp= formatDatasource | promoteApplicationResp= promoteApplication | createApplicationResp= createApplication | alterApplicationResp= alterApplication | dropApplicationResp= dropApplication | createUserResp= createUser | alterUserResp= alterUser | dropUserResp= dropUser | createGroupResp= createGroup | alterGroupResp= alterGroup | dropGroupResp= dropGroup | createTypeResp= createType | alterTypeResp= alterType | dropTypeResp= dropType | grantResp= grant | revokeResp= revoke | createRoleResp= createRole | alterRoleResp= alterRole | dropRoleResp= dropRole | createPermissionResp= createPermission | alterPermissionResp= alterPermission | dropPermissionResp= dropPermission | createTableResp= createTable | alterTableResp= alterTable | dropTableResp= dropTable | createFormResp= createForm | alterFormResp= alterForm | dropFormResp= dropForm | createIndexResp= createIndex | dropIndexResp= dropIndex | createTriggerResp= createTrigger | dropTriggerResp= dropTrigger | createProcedureResp= createProcedure | alterProcedureResp= alterProcedure | dropProcedureResp= dropProcedure | ( insert )=>insertResp= insert | ( update )=>updateResp= update | ( delete )=>deleteResp= delete | formUpdateResp= formUpdate | execProcedureResp= execProcedure | cronResp= cron | dropCronResp= dropCron | selectObjectResp= selectObject | selectResp= select | rawSQLResp= rawSQL | rawSelectResp= rawSelect | sysSelectResp= sysSelect | showResp= show | describeResp= describe | commitResp= commit | rollbackResp= rollback )", 1, 0, input);

                throw nvae;
            }
            switch (alt1) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:83:4: connectResp= connect
                    {
                    pushFollow(FOLLOW_connect_in_stat85);
                    connectResp=connect();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:84:4: disconnectResp= disconnect
                    {
                    pushFollow(FOLLOW_disconnect_in_stat93);
                    disconnectResp=disconnect();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:85:4: setApplicationResp= setApplication
                    {
                    pushFollow(FOLLOW_setApplication_in_stat101);
                    setApplicationResp=setApplication();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:86:4: createDatasourceResp= createDatasource
                    {
                    pushFollow(FOLLOW_createDatasource_in_stat108);
                    createDatasourceResp=createDatasource();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 5 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:87:4: alterDatasourceResp= alterDatasource
                    {
                    pushFollow(FOLLOW_alterDatasource_in_stat115);
                    alterDatasourceResp=alterDatasource();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 6 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:88:4: dropDatasourceResp= dropDatasource
                    {
                    pushFollow(FOLLOW_dropDatasource_in_stat122);
                    dropDatasourceResp=dropDatasource();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 7 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:89:4: formatDatasourceResp= formatDatasource
                    {
                    pushFollow(FOLLOW_formatDatasource_in_stat129);
                    formatDatasourceResp=formatDatasource();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 8 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:90:4: promoteApplicationResp= promoteApplication
                    {
                    pushFollow(FOLLOW_promoteApplication_in_stat136);
                    promoteApplicationResp=promoteApplication();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 9 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:91:4: createApplicationResp= createApplication
                    {
                    pushFollow(FOLLOW_createApplication_in_stat143);
                    createApplicationResp=createApplication();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 10 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:92:4: alterApplicationResp= alterApplication
                    {
                    pushFollow(FOLLOW_alterApplication_in_stat150);
                    alterApplicationResp=alterApplication();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 11 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:93:4: dropApplicationResp= dropApplication
                    {
                    pushFollow(FOLLOW_dropApplication_in_stat157);
                    dropApplicationResp=dropApplication();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 12 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:94:4: createUserResp= createUser
                    {
                    pushFollow(FOLLOW_createUser_in_stat164);
                    createUserResp=createUser();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 13 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:95:4: alterUserResp= alterUser
                    {
                    pushFollow(FOLLOW_alterUser_in_stat171);
                    alterUserResp=alterUser();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 14 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:96:4: dropUserResp= dropUser
                    {
                    pushFollow(FOLLOW_dropUser_in_stat178);
                    dropUserResp=dropUser();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 15 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:97:4: createGroupResp= createGroup
                    {
                    pushFollow(FOLLOW_createGroup_in_stat185);
                    createGroupResp=createGroup();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 16 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:98:4: alterGroupResp= alterGroup
                    {
                    pushFollow(FOLLOW_alterGroup_in_stat192);
                    alterGroupResp=alterGroup();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 17 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:99:4: dropGroupResp= dropGroup
                    {
                    pushFollow(FOLLOW_dropGroup_in_stat199);
                    dropGroupResp=dropGroup();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 18 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:100:4: createTypeResp= createType
                    {
                    pushFollow(FOLLOW_createType_in_stat206);
                    createTypeResp=createType();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 19 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:101:4: alterTypeResp= alterType
                    {
                    pushFollow(FOLLOW_alterType_in_stat213);
                    alterTypeResp=alterType();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 20 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:102:4: dropTypeResp= dropType
                    {
                    pushFollow(FOLLOW_dropType_in_stat220);
                    dropTypeResp=dropType();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 21 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:103:4: grantResp= grant
                    {
                    pushFollow(FOLLOW_grant_in_stat227);
                    grantResp=grant();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 22 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:104:4: revokeResp= revoke
                    {
                    pushFollow(FOLLOW_revoke_in_stat234);
                    revokeResp=revoke();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 23 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:105:4: createRoleResp= createRole
                    {
                    pushFollow(FOLLOW_createRole_in_stat241);
                    createRoleResp=createRole();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 24 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:106:4: alterRoleResp= alterRole
                    {
                    pushFollow(FOLLOW_alterRole_in_stat248);
                    alterRoleResp=alterRole();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 25 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:107:4: dropRoleResp= dropRole
                    {
                    pushFollow(FOLLOW_dropRole_in_stat255);
                    dropRoleResp=dropRole();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 26 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:108:4: createPermissionResp= createPermission
                    {
                    pushFollow(FOLLOW_createPermission_in_stat262);
                    createPermissionResp=createPermission();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 27 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:109:4: alterPermissionResp= alterPermission
                    {
                    pushFollow(FOLLOW_alterPermission_in_stat269);
                    alterPermissionResp=alterPermission();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 28 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:110:4: dropPermissionResp= dropPermission
                    {
                    pushFollow(FOLLOW_dropPermission_in_stat276);
                    dropPermissionResp=dropPermission();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 29 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:111:4: createTableResp= createTable
                    {
                    pushFollow(FOLLOW_createTable_in_stat283);
                    createTableResp=createTable();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 30 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:112:4: alterTableResp= alterTable
                    {
                    pushFollow(FOLLOW_alterTable_in_stat290);
                    alterTableResp=alterTable();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 31 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:113:4: dropTableResp= dropTable
                    {
                    pushFollow(FOLLOW_dropTable_in_stat297);
                    dropTableResp=dropTable();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 32 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:114:4: createFormResp= createForm
                    {
                    pushFollow(FOLLOW_createForm_in_stat304);
                    createFormResp=createForm();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 33 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:115:4: alterFormResp= alterForm
                    {
                    pushFollow(FOLLOW_alterForm_in_stat311);
                    alterFormResp=alterForm();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 34 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:116:4: dropFormResp= dropForm
                    {
                    pushFollow(FOLLOW_dropForm_in_stat318);
                    dropFormResp=dropForm();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 35 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:117:4: createIndexResp= createIndex
                    {
                    pushFollow(FOLLOW_createIndex_in_stat325);
                    createIndexResp=createIndex();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 36 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:118:4: dropIndexResp= dropIndex
                    {
                    pushFollow(FOLLOW_dropIndex_in_stat332);
                    dropIndexResp=dropIndex();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 37 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:119:4: createTriggerResp= createTrigger
                    {
                    pushFollow(FOLLOW_createTrigger_in_stat339);
                    createTriggerResp=createTrigger();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 38 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:120:4: dropTriggerResp= dropTrigger
                    {
                    pushFollow(FOLLOW_dropTrigger_in_stat346);
                    dropTriggerResp=dropTrigger();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 39 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:121:4: createProcedureResp= createProcedure
                    {
                    pushFollow(FOLLOW_createProcedure_in_stat353);
                    createProcedureResp=createProcedure();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 40 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:122:4: alterProcedureResp= alterProcedure
                    {
                    pushFollow(FOLLOW_alterProcedure_in_stat360);
                    alterProcedureResp=alterProcedure();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 41 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:123:4: dropProcedureResp= dropProcedure
                    {
                    pushFollow(FOLLOW_dropProcedure_in_stat367);
                    dropProcedureResp=dropProcedure();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 42 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:124:4: ( insert )=>insertResp= insert
                    {
                    pushFollow(FOLLOW_insert_in_stat380);
                    insertResp=insert();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 43 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:125:4: ( update )=>updateResp= update
                    {
                    pushFollow(FOLLOW_update_in_stat393);
                    updateResp=update();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 44 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:126:4: ( delete )=>deleteResp= delete
                    {
                    pushFollow(FOLLOW_delete_in_stat406);
                    deleteResp=delete();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 45 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:127:4: formUpdateResp= formUpdate
                    {
                    pushFollow(FOLLOW_formUpdate_in_stat413);
                    formUpdateResp=formUpdate();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 46 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:128:4: execProcedureResp= execProcedure
                    {
                    pushFollow(FOLLOW_execProcedure_in_stat420);
                    execProcedureResp=execProcedure();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 47 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:129:4: cronResp= cron
                    {
                    pushFollow(FOLLOW_cron_in_stat427);
                    cronResp=cron();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 48 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:130:4: dropCronResp= dropCron
                    {
                    pushFollow(FOLLOW_dropCron_in_stat434);
                    dropCronResp=dropCron();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 49 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:131:4: selectObjectResp= selectObject
                    {
                    pushFollow(FOLLOW_selectObject_in_stat441);
                    selectObjectResp=selectObject();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 50 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:132:4: selectResp= select
                    {
                    pushFollow(FOLLOW_select_in_stat450);
                    selectResp=select();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 51 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:133:4: rawSQLResp= rawSQL
                    {
                    pushFollow(FOLLOW_rawSQL_in_stat457);
                    rawSQLResp=rawSQL();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 52 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:134:4: rawSelectResp= rawSelect
                    {
                    pushFollow(FOLLOW_rawSelect_in_stat464);
                    rawSelectResp=rawSelect();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 53 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:135:4: sysSelectResp= sysSelect
                    {
                    pushFollow(FOLLOW_sysSelect_in_stat471);
                    sysSelectResp=sysSelect();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 54 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:136:4: showResp= show
                    {
                    pushFollow(FOLLOW_show_in_stat478);
                    showResp=show();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 55 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:137:4: describeResp= describe
                    {
                    pushFollow(FOLLOW_describe_in_stat485);
                    describeResp=describe();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 56 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:138:4: commitResp= commit
                    {
                    pushFollow(FOLLOW_commit_in_stat492);
                    commitResp=commit();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 57 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:139:4: rollbackResp= rollback
                    {
                    pushFollow(FOLLOW_rollback_in_stat499);
                    rollbackResp=rollback();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              		CodaResponse returnResponse = new CodaResponse();
              		if (connectResp != null) {
              			returnResponse = connectResp.response;
              		} else if (disconnectResp != null) {
              			returnResponse = disconnectResp.response;
              		} else if (setApplicationResp != null) {
              			returnResponse = setApplicationResp.response;
              		} else if (createDatasourceResp != null) {
              			returnResponse = createDatasourceResp.response;
              		} else if (alterDatasourceResp != null) {
              			returnResponse = alterDatasourceResp.response;
              		} else if (dropDatasourceResp != null) {
              			returnResponse = dropDatasourceResp.response;
              		} else if (formatDatasourceResp != null) {
              			returnResponse = formatDatasourceResp.response;
              		} else if (promoteApplicationResp != null) {
              			returnResponse = promoteApplicationResp.response;
              		} else if (createApplicationResp != null) {
              			returnResponse = createApplicationResp.response;
              		} else if (alterApplicationResp != null) {
              			returnResponse = alterApplicationResp.response;
              		} else if (dropApplicationResp != null) {
              			returnResponse = dropApplicationResp.response;
              		} else if (createUserResp != null) {
              			returnResponse = createUserResp.response;
              		} else if (alterUserResp != null) {
              			returnResponse = alterUserResp.response;
              		} else if (dropUserResp != null) {
              			returnResponse = dropUserResp.response;
              		} else if (createGroupResp != null) {
              			returnResponse = createGroupResp.response;
              		} else if (alterGroupResp != null) {
              			returnResponse = alterGroupResp.response;
              		} else if (dropGroupResp != null) {
              			returnResponse = dropGroupResp.response;
              		} else if (createTypeResp != null) {
              			returnResponse = createTypeResp.response;
              		} else if (alterTypeResp != null) {
              			returnResponse = alterTypeResp.response;
              		} else if (dropTypeResp != null) {
              			returnResponse = dropTypeResp.response;
              		} else if (grantResp != null) {
              			returnResponse = grantResp.response;
              		} else if (revokeResp != null) {
              			returnResponse = revokeResp.response;
              		} else if (createRoleResp != null) {
              			returnResponse = createRoleResp.response;
              		} else if (alterRoleResp != null) {
              			returnResponse = alterRoleResp.response;
              		} else if (dropRoleResp != null) {
              			returnResponse = dropRoleResp.response;
              		} else if (createPermissionResp != null) {
              			returnResponse = createPermissionResp.response;
              		} else if (alterPermissionResp != null) {
              			returnResponse = alterPermissionResp.response;
              		} else if (dropPermissionResp != null) {
              			returnResponse = dropPermissionResp.response;
              		} else if (createTableResp != null) {
              			returnResponse = createTableResp.response;
              		} else if (alterTableResp != null) {
              			returnResponse = alterTableResp.response;
              		} else if (dropTableResp != null) {
              			returnResponse = dropTableResp.response;
              		} else if (createFormResp != null) {
              			returnResponse = createFormResp.response;
              		} else if (alterFormResp != null) {http://www.ubuntu.com/products/whatisubuntu/xubuntu
              			returnResponse = alterFormResp.response;
              		} else if (dropFormResp != null) {
              			returnResponse = dropFormResp.response;
              		} else if (createIndexResp != null) {
              			returnResponse = createIndexResp.response;
              		} else if (dropIndexResp != null) {
              			returnResponse = dropIndexResp.response;
              		} else if (createTriggerResp != null) {
              			returnResponse = createTriggerResp.response;
              		} else if (dropTriggerResp != null) {
              			returnResponse = dropTriggerResp.response;
              		} else if (createProcedureResp != null) {
              			returnResponse = createProcedureResp.response;
              		} else if (alterProcedureResp != null) {
              			returnResponse = alterProcedureResp.response;
              		} else if (dropProcedureResp != null) {
              			returnResponse = dropProcedureResp.response;
              		} else if (insertResp != null) {
              			returnResponse = insertResp.response;
              		} else if (updateResp != null) {
              			returnResponse = updateResp.response;
              		} else if (deleteResp != null) {
              			returnResponse = deleteResp.response;
              		} else if (formUpdateResp != null) {
              			returnResponse = formUpdateResp.response;
              		} else if (execProcedureResp != null) {
              			returnResponse = execProcedureResp.response;
              		} else if (cronResp != null) {
              			returnResponse = cronResp.response;
              		} else if (dropCronResp != null) {
              			returnResponse = dropCronResp.response;
              		} else if (selectObjectResp != null) {
              			returnResponse = selectObjectResp.response;
              		} else if (selectResp != null) {
              			returnResponse = selectResp.response;
              		} else if (rawSQLResp != null) {
              			returnResponse = rawSQLResp.response;
              		} else if (rawSelectResp != null) {
              			returnResponse = rawSelectResp.response;
              		} else if (sysSelectResp != null) {
              			returnResponse = sysSelectResp.response;
              		} else if (showResp != null) {
              			returnResponse = showResp.response;
              		} else if (describeResp != null) {
              			returnResponse = describeResp.response;
              		} else if (commitResp != null) {
              			returnResponse = commitResp.response;
              		} else if (rollbackResp != null) {
              			returnResponse = rollbackResp.response;
              		} 
              		retval.response = returnResponse;
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 1, stat_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end stat

    public static class query_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start query
    // /Users/michaelarace/CodaServer_Src/Coda.g:262:1: query[CodaConnection connection] returns [CodaResponse response] : (selectObjectResp= selectObjectNoCommit[connection] | selectResp= selectNoCommit[connection] | rawSelectResp= rawSelectNoCommit[connection] | sysSelectResp= sysSelect ) ;
    public final query_return query(CodaConnection connection) throws RecognitionException {
        query_return retval = new query_return();
        retval.start = input.LT(1);
        int query_StartIndex = input.index();
        selectObjectNoCommit_return selectObjectResp = null;

        selectNoCommit_return selectResp = null;

        rawSelectNoCommit_return rawSelectResp = null;

        sysSelect_return sysSelectResp = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 2) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:262:65: ( (selectObjectResp= selectObjectNoCommit[connection] | selectResp= selectNoCommit[connection] | rawSelectResp= rawSelectNoCommit[connection] | sysSelectResp= sysSelect ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:263:2: (selectObjectResp= selectObjectNoCommit[connection] | selectResp= selectNoCommit[connection] | rawSelectResp= rawSelectNoCommit[connection] | sysSelectResp= sysSelect )
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:263:2: (selectObjectResp= selectObjectNoCommit[connection] | selectResp= selectNoCommit[connection] | rawSelectResp= rawSelectNoCommit[connection] | sysSelectResp= sysSelect )
            int alt2=4;
            switch ( input.LA(1) ) {
            case 129:
                {
                alt2=1;
                }
                break;
            case 134:
                {
                alt2=2;
                }
                break;
            case 132:
                {
                alt2=3;
                }
                break;
            case 177:
                {
                alt2=4;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("263:2: (selectObjectResp= selectObjectNoCommit[connection] | selectResp= selectNoCommit[connection] | rawSelectResp= rawSelectNoCommit[connection] | sysSelectResp= sysSelect )", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:264:3: selectObjectResp= selectObjectNoCommit[connection]
                    {
                    pushFollow(FOLLOW_selectObjectNoCommit_in_query529);
                    selectObjectResp=selectObjectNoCommit(connection);
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:265:4: selectResp= selectNoCommit[connection]
                    {
                    pushFollow(FOLLOW_selectNoCommit_in_query539);
                    selectResp=selectNoCommit(connection);
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:266:4: rawSelectResp= rawSelectNoCommit[connection]
                    {
                    pushFollow(FOLLOW_rawSelectNoCommit_in_query547);
                    rawSelectResp=rawSelectNoCommit(connection);
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:267:4: sysSelectResp= sysSelect
                    {
                    pushFollow(FOLLOW_sysSelect_in_query555);
                    sysSelectResp=sysSelect();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              		CodaResponse returnResponse = new CodaResponse();
              		if (selectObjectResp != null) {
              			returnResponse = selectObjectResp.response;
              		} else if (selectResp != null) {
              			returnResponse = selectResp.response;
              		} else if (rawSelectResp != null) {
              			returnResponse = rawSelectResp.response;
              		} else if (sysSelectResp != null) {
              			returnResponse = sysSelectResp.response;
              		} 
              		retval.response = returnResponse;
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 2, query_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end query

    public static class dml_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dml
    // /Users/michaelarace/CodaServer_Src/Coda.g:284:1: dml[CodaConnection connection] returns [CodaResponse response] : (insertResp= insertNoCommit[connection] | updateResp= updateNoCommit[connection] | deleteResp= deleteNoCommit[connection] | formUpdateResp= formUpdateNoCommit[connection] | execProcedureResp= execProcedureNoCommit[connection] | rawSQLResp= rawSQLNoCommit[connection] ) ;
    public final dml_return dml(CodaConnection connection) throws RecognitionException {
        dml_return retval = new dml_return();
        retval.start = input.LT(1);
        int dml_StartIndex = input.index();
        insertNoCommit_return insertResp = null;

        updateNoCommit_return updateResp = null;

        deleteNoCommit_return deleteResp = null;

        formUpdateNoCommit_return formUpdateResp = null;

        execProcedureNoCommit_return execProcedureResp = null;

        rawSQLNoCommit_return rawSQLResp = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 3) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:284:63: ( (insertResp= insertNoCommit[connection] | updateResp= updateNoCommit[connection] | deleteResp= deleteNoCommit[connection] | formUpdateResp= formUpdateNoCommit[connection] | execProcedureResp= execProcedureNoCommit[connection] | rawSQLResp= rawSQLNoCommit[connection] ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:285:2: (insertResp= insertNoCommit[connection] | updateResp= updateNoCommit[connection] | deleteResp= deleteNoCommit[connection] | formUpdateResp= formUpdateNoCommit[connection] | execProcedureResp= execProcedureNoCommit[connection] | rawSQLResp= rawSQLNoCommit[connection] )
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:285:2: (insertResp= insertNoCommit[connection] | updateResp= updateNoCommit[connection] | deleteResp= deleteNoCommit[connection] | formUpdateResp= formUpdateNoCommit[connection] | execProcedureResp= execProcedureNoCommit[connection] | rawSQLResp= rawSQLNoCommit[connection] )
            int alt3=6;
            switch ( input.LA(1) ) {
            case 69:
                {
                alt3=1;
                }
                break;
            case 70:
                {
                alt3=2;
                }
                break;
            case 71:
                {
                alt3=3;
                }
                break;
            case ObjectName:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
                {
                alt3=4;
                }
                break;
            case 143:
                {
                alt3=5;
                }
                break;
            case 132:
                {
                alt3=6;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("285:2: (insertResp= insertNoCommit[connection] | updateResp= updateNoCommit[connection] | deleteResp= deleteNoCommit[connection] | formUpdateResp= formUpdateNoCommit[connection] | execProcedureResp= execProcedureNoCommit[connection] | rawSQLResp= rawSQLNoCommit[connection] )", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:286:3: insertResp= insertNoCommit[connection]
                    {
                    pushFollow(FOLLOW_insertNoCommit_in_dml585);
                    insertResp=insertNoCommit(connection);
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:287:4: updateResp= updateNoCommit[connection]
                    {
                    pushFollow(FOLLOW_updateNoCommit_in_dml593);
                    updateResp=updateNoCommit(connection);
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:288:4: deleteResp= deleteNoCommit[connection]
                    {
                    pushFollow(FOLLOW_deleteNoCommit_in_dml601);
                    deleteResp=deleteNoCommit(connection);
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:289:4: formUpdateResp= formUpdateNoCommit[connection]
                    {
                    pushFollow(FOLLOW_formUpdateNoCommit_in_dml609);
                    formUpdateResp=formUpdateNoCommit(connection);
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 5 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:290:4: execProcedureResp= execProcedureNoCommit[connection]
                    {
                    pushFollow(FOLLOW_execProcedureNoCommit_in_dml617);
                    execProcedureResp=execProcedureNoCommit(connection);
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 6 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:291:4: rawSQLResp= rawSQLNoCommit[connection]
                    {
                    pushFollow(FOLLOW_rawSQLNoCommit_in_dml625);
                    rawSQLResp=rawSQLNoCommit(connection);
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              		CodaResponse returnResponse = new CodaResponse();
              		if (insertResp != null) {
              			returnResponse = insertResp.response;
              		} else if (updateResp != null) {
              			returnResponse = updateResp.response;
              		} else if (deleteResp != null) {
              			returnResponse = deleteResp.response;
              		} else if (formUpdateResp != null) {
              			returnResponse = formUpdateResp.response;
              		} else if (execProcedureResp != null) {
              			returnResponse = execProcedureResp.response;
              		} else if (rawSQLResp != null) {
              			returnResponse = rawSQLResp.response;
              		} 
              		retval.response = returnResponse;
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 3, dml_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dml

    public static class objectName_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start objectName
    // /Users/michaelarace/CodaServer_Src/Coda.g:312:1: objectName : ( ObjectName | unreservedKeyword );
    public final objectName_return objectName() throws RecognitionException {
        objectName_return retval = new objectName_return();
        retval.start = input.LT(1);
        int objectName_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 4) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:313:2: ( ObjectName | unreservedKeyword )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==ObjectName) ) {
                alt4=1;
            }
            else if ( ((LA4_0>=10 && LA4_0<=66)) ) {
                alt4=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("312:1: objectName : ( ObjectName | unreservedKeyword );", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:313:4: ObjectName
                    {
                    match(input,ObjectName,FOLLOW_ObjectName_in_objectName645); if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:313:17: unreservedKeyword
                    {
                    pushFollow(FOLLOW_unreservedKeyword_in_objectName649);
                    unreservedKeyword();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }
            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 4, objectName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end objectName

    public static class unreservedKeyword_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start unreservedKeyword
    // /Users/michaelarace/CodaServer_Src/Coda.g:315:1: unreservedKeyword : ( 'ADDRESS' | 'ALT_PHONE' | 'APPLICATIONS' | 'CITY' | 'CONNECT' | 'COUNTRY' | 'CRONS' | 'DEV' | 'DEVELOPER' | 'DRIVER' | 'EMAIL' | 'FIELDS' | 'FIRST_NAME' | 'FORMAT' | 'FORMS' | 'GROUPS' | 'HOSTNAME' | 'ID' | 'INDEXES' | 'LAST_NAME' | 'MANAGE_APPLICATIONS' | 'MANAGE_DATASOURCES' | 'MANAGE_DEVELOPMENT' | 'MANAGE_GROUPS' | 'MANAGE_PRODUCTION' | 'MANAGE_SESSIONS' | 'MANAGE_TESTING' | 'MANAGE_TYPES' | 'MANAGE_USER_DATA' | 'MANAGE_USERS' | 'MIDDLE_NAME' | 'OPTIONS' | 'ORGANIZATION' | 'PARAMETERS' | 'PASSWORD' | 'PERMISSIONS' | 'PHONE' | 'POSTAL_CODE' | 'PREFIX' | 'PROCEDURES' | 'PROD' | 'QUERY_SYSTEM_TABLES' | 'RELATIONSHIPS' | 'ROLES' | 'ROOT' | 'SAVE_MASK' | 'SCHEMA' | 'SESSIONS' | 'STATE_PROV' | 'STATUSES' | 'TABLES' | 'TEST' | 'TRIGGERS' | 'TYPES' | 'USERNAME' | 'USERS' | 'VALIDATION_MASK' );
    public final unreservedKeyword_return unreservedKeyword() throws RecognitionException {
        unreservedKeyword_return retval = new unreservedKeyword_return();
        retval.start = input.LT(1);
        int unreservedKeyword_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 5) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:316:2: ( 'ADDRESS' | 'ALT_PHONE' | 'APPLICATIONS' | 'CITY' | 'CONNECT' | 'COUNTRY' | 'CRONS' | 'DEV' | 'DEVELOPER' | 'DRIVER' | 'EMAIL' | 'FIELDS' | 'FIRST_NAME' | 'FORMAT' | 'FORMS' | 'GROUPS' | 'HOSTNAME' | 'ID' | 'INDEXES' | 'LAST_NAME' | 'MANAGE_APPLICATIONS' | 'MANAGE_DATASOURCES' | 'MANAGE_DEVELOPMENT' | 'MANAGE_GROUPS' | 'MANAGE_PRODUCTION' | 'MANAGE_SESSIONS' | 'MANAGE_TESTING' | 'MANAGE_TYPES' | 'MANAGE_USER_DATA' | 'MANAGE_USERS' | 'MIDDLE_NAME' | 'OPTIONS' | 'ORGANIZATION' | 'PARAMETERS' | 'PASSWORD' | 'PERMISSIONS' | 'PHONE' | 'POSTAL_CODE' | 'PREFIX' | 'PROCEDURES' | 'PROD' | 'QUERY_SYSTEM_TABLES' | 'RELATIONSHIPS' | 'ROLES' | 'ROOT' | 'SAVE_MASK' | 'SCHEMA' | 'SESSIONS' | 'STATE_PROV' | 'STATUSES' | 'TABLES' | 'TEST' | 'TRIGGERS' | 'TYPES' | 'USERNAME' | 'USERS' | 'VALIDATION_MASK' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:
            {
            if ( (input.LA(1)>=10 && input.LA(1)<=66) ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_unreservedKeyword0);    throw mse;
            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 5, unreservedKeyword_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end unreservedKeyword

    public static class userProperty_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start userProperty
    // /Users/michaelarace/CodaServer_Src/Coda.g:324:1: userProperty : ( 'FIRST_NAME' | 'MIDDLE_NAME' | 'LAST_NAME' | 'ORGANIZATION' | 'ADDRESS' | 'CITY' | 'STATE_PROV' | 'POSTAL_CODE' | 'COUNTRY' | 'PHONE' | 'ALT_PHONE' | 'EMAIL' );
    public final userProperty_return userProperty() throws RecognitionException {
        userProperty_return retval = new userProperty_return();
        retval.start = input.LT(1);
        int userProperty_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 6) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:325:2: ( 'FIRST_NAME' | 'MIDDLE_NAME' | 'LAST_NAME' | 'ORGANIZATION' | 'ADDRESS' | 'CITY' | 'STATE_PROV' | 'POSTAL_CODE' | 'COUNTRY' | 'PHONE' | 'ALT_PHONE' | 'EMAIL' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:
            {
            if ( (input.LA(1)>=10 && input.LA(1)<=11)||input.LA(1)==13||input.LA(1)==15||input.LA(1)==20||input.LA(1)==22||input.LA(1)==29||input.LA(1)==40||input.LA(1)==42||(input.LA(1)>=46 && input.LA(1)<=47)||input.LA(1)==58 ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_userProperty0);    throw mse;
            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 6, userProperty_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end userProperty

    public static class serverPermission_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start serverPermission
    // /Users/michaelarace/CodaServer_Src/Coda.g:326:1: serverPermission : ( 'CONNECT' | 'MANAGE_USERS' | 'MANAGE_USER_DATA' | 'MANAGE_GROUPS' | 'MANAGE_TYPES' | 'MANAGE_APPLICATIONS' | 'MANAGE_DATASOURCES' | 'MANAGE_SESSIONS' | 'QUERY_SYSTEM_TABLES' );
    public final serverPermission_return serverPermission() throws RecognitionException {
        serverPermission_return retval = new serverPermission_return();
        retval.start = input.LT(1);
        int serverPermission_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 7) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:327:2: ( 'CONNECT' | 'MANAGE_USERS' | 'MANAGE_USER_DATA' | 'MANAGE_GROUPS' | 'MANAGE_TYPES' | 'MANAGE_APPLICATIONS' | 'MANAGE_DATASOURCES' | 'MANAGE_SESSIONS' | 'QUERY_SYSTEM_TABLES' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:
            {
            if ( input.LA(1)==14||(input.LA(1)>=30 && input.LA(1)<=31)||input.LA(1)==33||input.LA(1)==35||(input.LA(1)>=37 && input.LA(1)<=39)||input.LA(1)==51 ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_serverPermission0);    throw mse;
            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 7, serverPermission_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end serverPermission

    public static class applicationPermission_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start applicationPermission
    // /Users/michaelarace/CodaServer_Src/Coda.g:328:1: applicationPermission : ( 'CONNECT' | 'MANAGE_USERS' | 'DEVELOPER' | 'MANAGE_ROLES' | 'MANAGE_CRONS' );
    public final applicationPermission_return applicationPermission() throws RecognitionException {
        applicationPermission_return retval = new applicationPermission_return();
        retval.start = input.LT(1);
        int applicationPermission_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 8) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:329:2: ( 'CONNECT' | 'MANAGE_USERS' | 'DEVELOPER' | 'MANAGE_ROLES' | 'MANAGE_CRONS' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:
            {
            if ( input.LA(1)==14||input.LA(1)==18||input.LA(1)==39||(input.LA(1)>=67 && input.LA(1)<=68) ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_applicationPermission0);    throw mse;
            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 8, applicationPermission_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end applicationPermission

    public static class environmentName_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start environmentName
    // /Users/michaelarace/CodaServer_Src/Coda.g:330:1: environmentName : ( 'DEV' | 'TEST' | 'PROD' );
    public final environmentName_return environmentName() throws RecognitionException {
        environmentName_return retval = new environmentName_return();
        retval.start = input.LT(1);
        int environmentName_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 9) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:331:2: ( 'DEV' | 'TEST' | 'PROD' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:
            {
            if ( input.LA(1)==17||input.LA(1)==50||input.LA(1)==61 ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_environmentName0);    throw mse;
            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 9, environmentName_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end environmentName

    public static class datasourceProperty_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start datasourceProperty
    // /Users/michaelarace/CodaServer_Src/Coda.g:332:1: datasourceProperty : ( 'HOSTNAME' | 'USERNAME' | 'PASSWORD' | 'SCHEMA' | 'DRIVER' );
    public final datasourceProperty_return datasourceProperty() throws RecognitionException {
        datasourceProperty_return retval = new datasourceProperty_return();
        retval.start = input.LT(1);
        int datasourceProperty_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 10) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:333:2: ( 'HOSTNAME' | 'USERNAME' | 'PASSWORD' | 'SCHEMA' | 'DRIVER' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:
            {
            if ( input.LA(1)==19||input.LA(1)==26||input.LA(1)==44||input.LA(1)==56||input.LA(1)==64 ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_datasourceProperty0);    throw mse;
            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 10, datasourceProperty_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end datasourceProperty

    public static class typeProperty_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start typeProperty
    // /Users/michaelarace/CodaServer_Src/Coda.g:334:1: typeProperty : ( 'VALIDATION_MASK' | 'SAVE_MASK' );
    public final typeProperty_return typeProperty() throws RecognitionException {
        typeProperty_return retval = new typeProperty_return();
        retval.start = input.LT(1);
        int typeProperty_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 11) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:335:2: ( 'VALIDATION_MASK' | 'SAVE_MASK' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:
            {
            if ( input.LA(1)==55||input.LA(1)==66 ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_typeProperty0);    throw mse;
            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 11, typeProperty_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end typeProperty

    public static class tableOperation_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start tableOperation
    // /Users/michaelarace/CodaServer_Src/Coda.g:336:1: tableOperation : ( 'INSERT' | 'UPDATE' | 'DELETE' );
    public final tableOperation_return tableOperation() throws RecognitionException {
        tableOperation_return retval = new tableOperation_return();
        retval.start = input.LT(1);
        int tableOperation_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 12) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:337:2: ( 'INSERT' | 'UPDATE' | 'DELETE' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:
            {
            if ( (input.LA(1)>=69 && input.LA(1)<=71) ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_tableOperation0);    throw mse;
            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 12, tableOperation_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end tableOperation

    public static class commit_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start commit
    // /Users/michaelarace/CodaServer_Src/Coda.g:338:1: commit returns [CodaResponse response] : 'COMMIT' ;
    public final commit_return commit() throws RecognitionException {
        commit_return retval = new commit_return();
        retval.start = input.LT(1);
        int commit_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 13) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:339:2: ( 'COMMIT' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:339:4: 'COMMIT'
            {
            match(input,72,FOLLOW_72_in_commit1115); if (failed) return retval;
            if ( backtracking==0 ) {

              		retval.response =  server.commit(sessionKey);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 13, commit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end commit

    public static class rollback_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start rollback
    // /Users/michaelarace/CodaServer_Src/Coda.g:344:1: rollback returns [CodaResponse response] : 'ROLLBACK' ;
    public final rollback_return rollback() throws RecognitionException {
        rollback_return retval = new rollback_return();
        retval.start = input.LT(1);
        int rollback_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 14) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:345:2: ( 'ROLLBACK' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:345:4: 'ROLLBACK'
            {
            match(input,73,FOLLOW_73_in_rollback1132); if (failed) return retval;
            if ( backtracking==0 ) {

              		retval.response =  server.rollback(sessionKey);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 14, rollback_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end rollback

    public static class connect_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start connect
    // /Users/michaelarace/CodaServer_Src/Coda.g:351:1: connect returns [CodaResponse response] : 'CONNECT' user= objectName ':' pass= stringLiteral ( 'TO' 'APPLICATION' app= objectName '.' env= environmentName ( 'IN' 'GROUP' gn= objectName )? )? ;
    public final connect_return connect() throws RecognitionException {
        connect_return retval = new connect_return();
        retval.start = input.LT(1);
        int connect_StartIndex = input.index();
        objectName_return user = null;

        stringLiteral_return pass = null;

        objectName_return app = null;

        environmentName_return env = null;

        objectName_return gn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 15) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:352:2: ( 'CONNECT' user= objectName ':' pass= stringLiteral ( 'TO' 'APPLICATION' app= objectName '.' env= environmentName ( 'IN' 'GROUP' gn= objectName )? )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:352:4: 'CONNECT' user= objectName ':' pass= stringLiteral ( 'TO' 'APPLICATION' app= objectName '.' env= environmentName ( 'IN' 'GROUP' gn= objectName )? )?
            {
            match(input,14,FOLLOW_14_in_connect1150); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_connect1154);
            user=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,74,FOLLOW_74_in_connect1156); if (failed) return retval;
            pushFollow(FOLLOW_stringLiteral_in_connect1160);
            pass=stringLiteral();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:352:53: ( 'TO' 'APPLICATION' app= objectName '.' env= environmentName ( 'IN' 'GROUP' gn= objectName )? )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==75) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:352:54: 'TO' 'APPLICATION' app= objectName '.' env= environmentName ( 'IN' 'GROUP' gn= objectName )?
                    {
                    match(input,75,FOLLOW_75_in_connect1163); if (failed) return retval;
                    match(input,76,FOLLOW_76_in_connect1165); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_connect1169);
                    app=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,77,FOLLOW_77_in_connect1171); if (failed) return retval;
                    pushFollow(FOLLOW_environmentName_in_connect1175);
                    env=environmentName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:352:112: ( 'IN' 'GROUP' gn= objectName )?
                    int alt5=2;
                    int LA5_0 = input.LA(1);

                    if ( (LA5_0==78) ) {
                        alt5=1;
                    }
                    switch (alt5) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:352:113: 'IN' 'GROUP' gn= objectName
                            {
                            match(input,78,FOLLOW_78_in_connect1178); if (failed) return retval;
                            match(input,79,FOLLOW_79_in_connect1180); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_connect1184);
                            gn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( backtracking==0 ) {

              			String localSessionKey=server.login(input.toString(user.start,user.stop), pass.value); 
              			if(sessionKey==null) {
              				retval.response = new CodaResponse(true, null, 1001, "Invalid username/password");
              			} else {
              				if (app != null) {
              					int environment = -1;
              					if(input.toString(env.start,env.stop).equalsIgnoreCase("DEV")) {
              						environment = 1;
              					} else if (input.toString(env.start,env.stop).equalsIgnoreCase("TEST")) {
              						environment = 2;
              					} else if (input.toString(env.start,env.stop).equalsIgnoreCase("PROD")) {
              						environment = 3;
              					}
              					if (environment == -1) {
              						retval.response = new CodaResponse(true, null, 1002, "Invalid environment specified: " + input.toString(env.start,env.stop));
              					} else {
              						if (server.setSessionApplication(localSessionKey, input.toString(app.start,app.stop), environment, gn != null ? input.toString(gn.start,gn.stop) : null)) {
              							retval.response = new CodaResponse(false, localSessionKey, -1, null);
              						} else {
              							server.logout(localSessionKey);
              							retval.response = new CodaResponse(true, null, 1003, "User cannot connect to specified application/environment");
              						}
              					}
              				} else {
              					retval.response = new CodaResponse(false, localSessionKey, -1, null);
              				}
              			}
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 15, connect_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end connect

    public static class disconnect_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start disconnect
    // /Users/michaelarace/CodaServer_Src/Coda.g:384:1: disconnect returns [CodaResponse response] : 'DISCONNECT' ;
    public final disconnect_return disconnect() throws RecognitionException {
        disconnect_return retval = new disconnect_return();
        retval.start = input.LT(1);
        int disconnect_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 16) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:385:2: ( 'DISCONNECT' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:385:4: 'DISCONNECT'
            {
            match(input,80,FOLLOW_80_in_disconnect1208); if (failed) return retval;
            if ( backtracking==0 ) {

              			server.logout(this.sessionKey);
              			retval.response = new CodaResponse();
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 16, disconnect_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end disconnect

    public static class setApplication_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start setApplication
    // /Users/michaelarace/CodaServer_Src/Coda.g:392:1: setApplication returns [CodaResponse response] : 'SET' 'APPLICATION' app= objectName '.' env= environmentName ( 'IN' 'GROUP' gn= objectName )? ;
    public final setApplication_return setApplication() throws RecognitionException {
        setApplication_return retval = new setApplication_return();
        retval.start = input.LT(1);
        int setApplication_StartIndex = input.index();
        objectName_return app = null;

        environmentName_return env = null;

        objectName_return gn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 17) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:393:2: ( 'SET' 'APPLICATION' app= objectName '.' env= environmentName ( 'IN' 'GROUP' gn= objectName )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:393:4: 'SET' 'APPLICATION' app= objectName '.' env= environmentName ( 'IN' 'GROUP' gn= objectName )?
            {
            match(input,81,FOLLOW_81_in_setApplication1227); if (failed) return retval;
            match(input,76,FOLLOW_76_in_setApplication1229); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_setApplication1233);
            app=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,77,FOLLOW_77_in_setApplication1235); if (failed) return retval;
            pushFollow(FOLLOW_environmentName_in_setApplication1239);
            env=environmentName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:393:63: ( 'IN' 'GROUP' gn= objectName )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==78) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:393:64: 'IN' 'GROUP' gn= objectName
                    {
                    match(input,78,FOLLOW_78_in_setApplication1242); if (failed) return retval;
                    match(input,79,FOLLOW_79_in_setApplication1244); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_setApplication1248);
                    gn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			int environment = -1;
              			if(input.toString(env.start,env.stop).equalsIgnoreCase("DEV")) {
              				environment = 1;
              			} else if (input.toString(env.start,env.stop).equalsIgnoreCase("TEST")) {
              				environment = 2;
              			} else if (input.toString(env.start,env.stop).equalsIgnoreCase("PROD")) {
              				environment = 3;
              			}
              			if (server.setSessionApplication(this.sessionKey, input.toString(app.start,app.stop), environment, gn != null ? input.toString(gn.start,gn.stop) : null)) {
              				retval.response = new CodaResponse(false, "Success!", -1, null);
              			} else {
              				retval.response = new CodaResponse(true, null, 1003, "User cannot connect to specified application/environment");
              			}
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 17, setApplication_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end setApplication

    public static class createDatasource_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createDatasource
    // /Users/michaelarace/CodaServer_Src/Coda.g:412:1: createDatasource returns [CodaResponse response] : 'CREATE' 'DATASOURCE' dn= objectName (disp= displayedAs )? '(' prop= datasourceParameter ( ',' prop= datasourceParameter )+ ')' ( 'WITH' 'OPTIONS' '(' opt= propertyValuePair ( ',' opt= propertyValuePair )* ')' )? ( 'USING' 'ADMIN' user= stringLiteral ':' pass= stringLiteral )? ;
    public final createDatasource_return createDatasource() throws RecognitionException {
        createDatasource_return retval = new createDatasource_return();
        retval.start = input.LT(1);
        int createDatasource_StartIndex = input.index();
        objectName_return dn = null;

        displayedAs_return disp = null;

        datasourceParameter_return prop = null;

        propertyValuePair_return opt = null;

        stringLiteral_return user = null;

        stringLiteral_return pass = null;



        	Hashtable<String,String> properties = new Hashtable();
        	Hashtable<String,String> options = new Hashtable();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 18) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:417:2: ( 'CREATE' 'DATASOURCE' dn= objectName (disp= displayedAs )? '(' prop= datasourceParameter ( ',' prop= datasourceParameter )+ ')' ( 'WITH' 'OPTIONS' '(' opt= propertyValuePair ( ',' opt= propertyValuePair )* ')' )? ( 'USING' 'ADMIN' user= stringLiteral ':' pass= stringLiteral )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:417:4: 'CREATE' 'DATASOURCE' dn= objectName (disp= displayedAs )? '(' prop= datasourceParameter ( ',' prop= datasourceParameter )+ ')' ( 'WITH' 'OPTIONS' '(' opt= propertyValuePair ( ',' opt= propertyValuePair )* ')' )? ( 'USING' 'ADMIN' user= stringLiteral ':' pass= stringLiteral )?
            {
            match(input,82,FOLLOW_82_in_createDatasource1276); if (failed) return retval;
            match(input,83,FOLLOW_83_in_createDatasource1278); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createDatasource1282);
            dn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:417:40: (disp= displayedAs )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==163) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:417:41: disp= displayedAs
                    {
                    pushFollow(FOLLOW_displayedAs_in_createDatasource1287);
                    disp=displayedAs();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            match(input,84,FOLLOW_84_in_createDatasource1294); if (failed) return retval;
            pushFollow(FOLLOW_datasourceParameter_in_createDatasource1298);
            prop=datasourceParameter();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               properties.put(prop.property.toUpperCase(), prop.value); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:418:95: ( ',' prop= datasourceParameter )+
            int cnt9=0;
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==85) ) {
                    alt9=1;
                }


                switch (alt9) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:418:96: ',' prop= datasourceParameter
            	    {
            	    match(input,85,FOLLOW_85_in_createDatasource1303); if (failed) return retval;
            	    pushFollow(FOLLOW_datasourceParameter_in_createDatasource1307);
            	    prop=datasourceParameter();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       properties.put(prop.property.toUpperCase(), prop.value); 
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt9 >= 1 ) break loop9;
            	    if (backtracking>0) {failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(9, input);
                        throw eee;
                }
                cnt9++;
            } while (true);

            match(input,86,FOLLOW_86_in_createDatasource1313); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:419:3: ( 'WITH' 'OPTIONS' '(' opt= propertyValuePair ( ',' opt= propertyValuePair )* ')' )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==87) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:419:4: 'WITH' 'OPTIONS' '(' opt= propertyValuePair ( ',' opt= propertyValuePair )* ')'
                    {
                    match(input,87,FOLLOW_87_in_createDatasource1319); if (failed) return retval;
                    match(input,41,FOLLOW_41_in_createDatasource1321); if (failed) return retval;
                    match(input,84,FOLLOW_84_in_createDatasource1323); if (failed) return retval;
                    pushFollow(FOLLOW_propertyValuePair_in_createDatasource1327);
                    opt=propertyValuePair();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       options.put(opt.property.toUpperCase(), opt.value); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:419:105: ( ',' opt= propertyValuePair )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==85) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:419:106: ',' opt= propertyValuePair
                    	    {
                    	    match(input,85,FOLLOW_85_in_createDatasource1332); if (failed) return retval;
                    	    pushFollow(FOLLOW_propertyValuePair_in_createDatasource1336);
                    	    opt=propertyValuePair();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       options.put(opt.property.toUpperCase(), opt.value); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);

                    match(input,86,FOLLOW_86_in_createDatasource1343); if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:420:3: ( 'USING' 'ADMIN' user= stringLiteral ':' pass= stringLiteral )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==88) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:420:4: 'USING' 'ADMIN' user= stringLiteral ':' pass= stringLiteral
                    {
                    match(input,88,FOLLOW_88_in_createDatasource1351); if (failed) return retval;
                    match(input,89,FOLLOW_89_in_createDatasource1353); if (failed) return retval;
                    pushFollow(FOLLOW_stringLiteral_in_createDatasource1357);
                    user=stringLiteral();
                    _fsp--;
                    if (failed) return retval;
                    match(input,74,FOLLOW_74_in_createDatasource1359); if (failed) return retval;
                    pushFollow(FOLLOW_stringLiteral_in_createDatasource1363);
                    pass=stringLiteral();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			
              			retval.response =  server.createDatasource(sessionKey, input.toString(dn.start,dn.stop), (disp == null ? null : disp.displayName), properties, options, (user == null ? null : user.value), (pass == null ? null : pass.value));
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 18, createDatasource_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createDatasource

    public static class alterDatasource_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alterDatasource
    // /Users/michaelarace/CodaServer_Src/Coda.g:427:1: alterDatasource returns [CodaResponse response] : 'ALTER' 'DATASOURCE' dn= objectName (disp= setDisplay | ndn= renameTo | 'SET' prop= datasourceParameter ( ',' prop= datasourceParameter )* | 'SET' 'OPTION' opt= propertyValuePair ( ',' opt= propertyValuePair )* ) ;
    public final alterDatasource_return alterDatasource() throws RecognitionException {
        alterDatasource_return retval = new alterDatasource_return();
        retval.start = input.LT(1);
        int alterDatasource_StartIndex = input.index();
        objectName_return dn = null;

        setDisplay_return disp = null;

        renameTo_return ndn = null;

        datasourceParameter_return prop = null;

        propertyValuePair_return opt = null;



        	Hashtable<String,String> properties = new Hashtable();
        	Hashtable<String,String> options = new Hashtable();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 19) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:432:2: ( 'ALTER' 'DATASOURCE' dn= objectName (disp= setDisplay | ndn= renameTo | 'SET' prop= datasourceParameter ( ',' prop= datasourceParameter )* | 'SET' 'OPTION' opt= propertyValuePair ( ',' opt= propertyValuePair )* ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:432:4: 'ALTER' 'DATASOURCE' dn= objectName (disp= setDisplay | ndn= renameTo | 'SET' prop= datasourceParameter ( ',' prop= datasourceParameter )* | 'SET' 'OPTION' opt= propertyValuePair ( ',' opt= propertyValuePair )* )
            {
            match(input,90,FOLLOW_90_in_alterDatasource1390); if (failed) return retval;
            match(input,83,FOLLOW_83_in_alterDatasource1392); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_alterDatasource1396);
            dn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:432:39: (disp= setDisplay | ndn= renameTo | 'SET' prop= datasourceParameter ( ',' prop= datasourceParameter )* | 'SET' 'OPTION' opt= propertyValuePair ( ',' opt= propertyValuePair )* )
            int alt15=4;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==81) ) {
                switch ( input.LA(2) ) {
                case 91:
                    {
                    alt15=4;
                    }
                    break;
                case 159:
                    {
                    alt15=1;
                    }
                    break;
                case 19:
                case 26:
                case 44:
                case 56:
                case 64:
                    {
                    alt15=3;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("432:39: (disp= setDisplay | ndn= renameTo | 'SET' prop= datasourceParameter ( ',' prop= datasourceParameter )* | 'SET' 'OPTION' opt= propertyValuePair ( ',' opt= propertyValuePair )* )", 15, 1, input);

                    throw nvae;
                }

            }
            else if ( (LA15_0==160) ) {
                alt15=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("432:39: (disp= setDisplay | ndn= renameTo | 'SET' prop= datasourceParameter ( ',' prop= datasourceParameter )* | 'SET' 'OPTION' opt= propertyValuePair ( ',' opt= propertyValuePair )* )", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:432:41: disp= setDisplay
                    {
                    pushFollow(FOLLOW_setDisplay_in_alterDatasource1402);
                    disp=setDisplay();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:432:59: ndn= renameTo
                    {
                    pushFollow(FOLLOW_renameTo_in_alterDatasource1408);
                    ndn=renameTo();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:432:74: 'SET' prop= datasourceParameter ( ',' prop= datasourceParameter )*
                    {
                    match(input,81,FOLLOW_81_in_alterDatasource1412); if (failed) return retval;
                    pushFollow(FOLLOW_datasourceParameter_in_alterDatasource1416);
                    prop=datasourceParameter();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       properties.put(prop.property.toUpperCase(), prop.value); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:432:168: ( ',' prop= datasourceParameter )*
                    loop13:
                    do {
                        int alt13=2;
                        int LA13_0 = input.LA(1);

                        if ( (LA13_0==85) ) {
                            alt13=1;
                        }


                        switch (alt13) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:432:169: ',' prop= datasourceParameter
                    	    {
                    	    match(input,85,FOLLOW_85_in_alterDatasource1421); if (failed) return retval;
                    	    pushFollow(FOLLOW_datasourceParameter_in_alterDatasource1425);
                    	    prop=datasourceParameter();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       properties.put(prop.property.toUpperCase(), prop.value); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop13;
                        }
                    } while (true);


                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:432:266: 'SET' 'OPTION' opt= propertyValuePair ( ',' opt= propertyValuePair )*
                    {
                    match(input,81,FOLLOW_81_in_alterDatasource1434); if (failed) return retval;
                    match(input,91,FOLLOW_91_in_alterDatasource1436); if (failed) return retval;
                    pushFollow(FOLLOW_propertyValuePair_in_alterDatasource1440);
                    opt=propertyValuePair();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       options.put(opt.property.toUpperCase(), opt.value); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:432:361: ( ',' opt= propertyValuePair )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==85) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:432:362: ',' opt= propertyValuePair
                    	    {
                    	    match(input,85,FOLLOW_85_in_alterDatasource1445); if (failed) return retval;
                    	    pushFollow(FOLLOW_propertyValuePair_in_alterDatasource1449);
                    	    opt=propertyValuePair();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       options.put(opt.property.toUpperCase(), opt.value); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( backtracking==0 ) {

              			if(disp != null) {
              				retval.response = server.alterDatasource(sessionKey, input.toString(dn.start,dn.stop), 1, null, disp.displayName, null, null);
              			} else if (ndn != null) {
              				retval.response =  server.alterDatasource(sessionKey, input.toString(dn.start,dn.stop), 2, ndn.newName, null, null, null);
              			} else if (prop != null) {
              				retval.response = server.alterDatasource(sessionKey, input.toString(dn.start,dn.stop), 3, null, null, properties, options);
              			} else if (opt != null) {
              				retval.response =  server.alterDatasource(sessionKey, input.toString(dn.start,dn.stop), 4, null, null, properties, options);
              			}
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 19, alterDatasource_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alterDatasource

    public static class dropDatasource_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropDatasource
    // /Users/michaelarace/CodaServer_Src/Coda.g:446:1: dropDatasource returns [CodaResponse response] : 'DROP' 'DATASOURCE' dn= objectName ;
    public final dropDatasource_return dropDatasource() throws RecognitionException {
        dropDatasource_return retval = new dropDatasource_return();
        retval.start = input.LT(1);
        int dropDatasource_StartIndex = input.index();
        objectName_return dn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 20) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:447:2: ( 'DROP' 'DATASOURCE' dn= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:447:4: 'DROP' 'DATASOURCE' dn= objectName
            {
            match(input,92,FOLLOW_92_in_dropDatasource1478); if (failed) return retval;
            match(input,83,FOLLOW_83_in_dropDatasource1480); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_dropDatasource1484);
            dn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			retval.response =  server.dropDatasource(sessionKey, input.toString(dn.start,dn.stop));
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 20, dropDatasource_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropDatasource

    public static class createApplication_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createApplication
    // /Users/michaelarace/CodaServer_Src/Coda.g:453:1: createApplication returns [CodaResponse response] : 'CREATE' (gf= 'GROUP' )? 'APPLICATION' an= objectName (disp= displayedAs )? 'ON' 'DATASOURCE' dn= objectName ( 'PREFIX' pre= objectName )? ;
    public final createApplication_return createApplication() throws RecognitionException {
        createApplication_return retval = new createApplication_return();
        retval.start = input.LT(1);
        int createApplication_StartIndex = input.index();
        Token gf=null;
        objectName_return an = null;

        displayedAs_return disp = null;

        objectName_return dn = null;

        objectName_return pre = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 21) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:454:2: ( 'CREATE' (gf= 'GROUP' )? 'APPLICATION' an= objectName (disp= displayedAs )? 'ON' 'DATASOURCE' dn= objectName ( 'PREFIX' pre= objectName )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:454:4: 'CREATE' (gf= 'GROUP' )? 'APPLICATION' an= objectName (disp= displayedAs )? 'ON' 'DATASOURCE' dn= objectName ( 'PREFIX' pre= objectName )?
            {
            match(input,82,FOLLOW_82_in_createApplication1504); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:454:13: (gf= 'GROUP' )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==79) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:454:14: gf= 'GROUP'
                    {
                    gf=(Token)input.LT(1);
                    match(input,79,FOLLOW_79_in_createApplication1509); if (failed) return retval;

                    }
                    break;

            }

            match(input,76,FOLLOW_76_in_createApplication1513); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createApplication1517);
            an=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:454:55: (disp= displayedAs )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==163) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:454:56: disp= displayedAs
                    {
                    pushFollow(FOLLOW_displayedAs_in_createApplication1522);
                    disp=displayedAs();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            match(input,93,FOLLOW_93_in_createApplication1527); if (failed) return retval;
            match(input,83,FOLLOW_83_in_createApplication1529); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createApplication1533);
            dn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:454:108: ( 'PREFIX' pre= objectName )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==48) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:454:109: 'PREFIX' pre= objectName
                    {
                    match(input,48,FOLLOW_48_in_createApplication1536); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_createApplication1540);
                    pre=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			retval.response = server.createApplication(sessionKey, input.toString(an.start,an.stop), (disp == null ? null :disp.displayName), (gf == null ? false : true), input.toString(dn.start,dn.stop), pre != null ? input.toString(pre.start,pre.stop) : null);
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 21, createApplication_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createApplication

    public static class alterApplication_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alterApplication
    // /Users/michaelarace/CodaServer_Src/Coda.g:460:1: alterApplication returns [CodaResponse response] : 'ALTER' 'APPLICATION' an= objectName (disp= setDisplay | nan= renameTo | 'SET' env= environmentName 'DATASOURCE' dn= objectName ) ;
    public final alterApplication_return alterApplication() throws RecognitionException {
        alterApplication_return retval = new alterApplication_return();
        retval.start = input.LT(1);
        int alterApplication_StartIndex = input.index();
        objectName_return an = null;

        setDisplay_return disp = null;

        renameTo_return nan = null;

        environmentName_return env = null;

        objectName_return dn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 22) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:461:2: ( 'ALTER' 'APPLICATION' an= objectName (disp= setDisplay | nan= renameTo | 'SET' env= environmentName 'DATASOURCE' dn= objectName ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:461:4: 'ALTER' 'APPLICATION' an= objectName (disp= setDisplay | nan= renameTo | 'SET' env= environmentName 'DATASOURCE' dn= objectName )
            {
            match(input,90,FOLLOW_90_in_alterApplication1563); if (failed) return retval;
            match(input,76,FOLLOW_76_in_alterApplication1565); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_alterApplication1569);
            an=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:461:40: (disp= setDisplay | nan= renameTo | 'SET' env= environmentName 'DATASOURCE' dn= objectName )
            int alt19=3;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==81) ) {
                int LA19_1 = input.LA(2);

                if ( (LA19_1==159) ) {
                    alt19=1;
                }
                else if ( (LA19_1==17||LA19_1==50||LA19_1==61) ) {
                    alt19=3;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("461:40: (disp= setDisplay | nan= renameTo | 'SET' env= environmentName 'DATASOURCE' dn= objectName )", 19, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA19_0==160) ) {
                alt19=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("461:40: (disp= setDisplay | nan= renameTo | 'SET' env= environmentName 'DATASOURCE' dn= objectName )", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:461:41: disp= setDisplay
                    {
                    pushFollow(FOLLOW_setDisplay_in_alterApplication1574);
                    disp=setDisplay();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:461:59: nan= renameTo
                    {
                    pushFollow(FOLLOW_renameTo_in_alterApplication1580);
                    nan=renameTo();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:461:74: 'SET' env= environmentName 'DATASOURCE' dn= objectName
                    {
                    match(input,81,FOLLOW_81_in_alterApplication1584); if (failed) return retval;
                    pushFollow(FOLLOW_environmentName_in_alterApplication1588);
                    env=environmentName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,83,FOLLOW_83_in_alterApplication1590); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_alterApplication1594);
                    dn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			if (disp != null) {
              				retval.response = server.alterApplication(sessionKey, input.toString(an.start,an.stop), 1, null, disp.displayName, null, null);
              			} else if (nan != null) {
              				retval.response = server.alterApplication(sessionKey, input.toString(an.start,an.stop), 2, nan.newName, null, null, null);
              			} else {
              				retval.response = server.alterApplication(sessionKey, input.toString(an.start,an.stop), 3, null, null, input.toString(env.start,env.stop), input.toString(dn.start,dn.stop));
              			}
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 22, alterApplication_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alterApplication

    public static class dropApplication_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropApplication
    // /Users/michaelarace/CodaServer_Src/Coda.g:473:1: dropApplication returns [CodaResponse response] : 'DROP' 'APPLICATION' an= objectName ;
    public final dropApplication_return dropApplication() throws RecognitionException {
        dropApplication_return retval = new dropApplication_return();
        retval.start = input.LT(1);
        int dropApplication_StartIndex = input.index();
        objectName_return an = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 23) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:474:2: ( 'DROP' 'APPLICATION' an= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:474:4: 'DROP' 'APPLICATION' an= objectName
            {
            match(input,92,FOLLOW_92_in_dropApplication1614); if (failed) return retval;
            match(input,76,FOLLOW_76_in_dropApplication1616); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_dropApplication1620);
            an=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			retval.response = server.dropApplication(sessionKey, input.toString(an.start,an.stop));
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 23, dropApplication_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropApplication

    public static class createUser_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createUser
    // /Users/michaelarace/CodaServer_Src/Coda.g:480:1: createUser returns [CodaResponse response] : 'CREATE' 'USER' user= objectName 'IDENTIFIED' 'BY' pass= stringLiteral ( 'AS' rob= 'ROBOT' )? ( '(' prop+= userParameter ( ',' prop+= userParameter )+ ')' )? ;
    public final createUser_return createUser() throws RecognitionException {
        createUser_return retval = new createUser_return();
        retval.start = input.LT(1);
        int createUser_StartIndex = input.index();
        Token rob=null;
        List list_prop=null;
        objectName_return user = null;

        stringLiteral_return pass = null;

        RuleReturnScope prop = null;

        	Hashtable properties = new Hashtable();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 24) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:484:2: ( 'CREATE' 'USER' user= objectName 'IDENTIFIED' 'BY' pass= stringLiteral ( 'AS' rob= 'ROBOT' )? ( '(' prop+= userParameter ( ',' prop+= userParameter )+ ')' )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:484:4: 'CREATE' 'USER' user= objectName 'IDENTIFIED' 'BY' pass= stringLiteral ( 'AS' rob= 'ROBOT' )? ( '(' prop+= userParameter ( ',' prop+= userParameter )+ ')' )?
            {
            match(input,82,FOLLOW_82_in_createUser1644); if (failed) return retval;
            match(input,94,FOLLOW_94_in_createUser1646); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createUser1650);
            user=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,95,FOLLOW_95_in_createUser1652); if (failed) return retval;
            match(input,96,FOLLOW_96_in_createUser1654); if (failed) return retval;
            pushFollow(FOLLOW_stringLiteral_in_createUser1658);
            pass=stringLiteral();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:484:73: ( 'AS' rob= 'ROBOT' )?
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==97) ) {
                alt20=1;
            }
            switch (alt20) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:484:74: 'AS' rob= 'ROBOT'
                    {
                    match(input,97,FOLLOW_97_in_createUser1661); if (failed) return retval;
                    rob=(Token)input.LT(1);
                    match(input,98,FOLLOW_98_in_createUser1665); if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:485:3: ( '(' prop+= userParameter ( ',' prop+= userParameter )+ ')' )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==84) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:485:4: '(' prop+= userParameter ( ',' prop+= userParameter )+ ')'
                    {
                    match(input,84,FOLLOW_84_in_createUser1673); if (failed) return retval;
                    pushFollow(FOLLOW_userParameter_in_createUser1677);
                    prop=userParameter();
                    _fsp--;
                    if (failed) return retval;
                    if (list_prop==null) list_prop=new ArrayList();
                    list_prop.add(prop.getTemplate());

                    if ( backtracking==0 ) {
                      properties.put(((userParameter_return)prop).property.toUpperCase(), ((userParameter_return)prop).value);
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:485:135: ( ',' prop+= userParameter )+
                    int cnt21=0;
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==85) ) {
                            alt21=1;
                        }


                        switch (alt21) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:485:136: ',' prop+= userParameter
                    	    {
                    	    match(input,85,FOLLOW_85_in_createUser1682); if (failed) return retval;
                    	    pushFollow(FOLLOW_userParameter_in_createUser1686);
                    	    prop=userParameter();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if (list_prop==null) list_prop=new ArrayList();
                    	    list_prop.add(prop.getTemplate());

                    	    if ( backtracking==0 ) {
                    	      properties.put(((userParameter_return)prop).property.toUpperCase(), ((userParameter_return)prop).value);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt21 >= 1 ) break loop21;
                    	    if (backtracking>0) {failed=true; return retval;}
                                EarlyExitException eee =
                                    new EarlyExitException(21, input);
                                throw eee;
                        }
                        cnt21++;
                    } while (true);

                    match(input,86,FOLLOW_86_in_createUser1693); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			
              			retval.response = server.createUser(sessionKey, input.toString(user.start,user.stop), pass.value, (rob == null ? false : true), properties);
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 24, createUser_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createUser

    public static class alterUser_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alterUser
    // /Users/michaelarace/CodaServer_Src/Coda.g:492:1: alterUser returns [CodaResponse response] : 'ALTER' 'USER' user= objectName 'SET' ( 'PASSWORD' '=' pass= stringLiteral | prop+= userParameter ( ',' prop+= userParameter )* ) ;
    public final alterUser_return alterUser() throws RecognitionException {
        alterUser_return retval = new alterUser_return();
        retval.start = input.LT(1);
        int alterUser_StartIndex = input.index();
        List list_prop=null;
        objectName_return user = null;

        stringLiteral_return pass = null;

        RuleReturnScope prop = null;

        	Hashtable properties = new Hashtable();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 25) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:496:2: ( 'ALTER' 'USER' user= objectName 'SET' ( 'PASSWORD' '=' pass= stringLiteral | prop+= userParameter ( ',' prop+= userParameter )* ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:496:4: 'ALTER' 'USER' user= objectName 'SET' ( 'PASSWORD' '=' pass= stringLiteral | prop+= userParameter ( ',' prop+= userParameter )* )
            {
            match(input,90,FOLLOW_90_in_alterUser1720); if (failed) return retval;
            match(input,94,FOLLOW_94_in_alterUser1722); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_alterUser1726);
            user=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,81,FOLLOW_81_in_alterUser1728); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:496:41: ( 'PASSWORD' '=' pass= stringLiteral | prop+= userParameter ( ',' prop+= userParameter )* )
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==44) ) {
                alt24=1;
            }
            else if ( ((LA24_0>=10 && LA24_0<=11)||LA24_0==13||LA24_0==15||LA24_0==20||LA24_0==22||LA24_0==29||LA24_0==40||LA24_0==42||(LA24_0>=46 && LA24_0<=47)||LA24_0==58) ) {
                alt24=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("496:41: ( 'PASSWORD' '=' pass= stringLiteral | prop+= userParameter ( ',' prop+= userParameter )* )", 24, 0, input);

                throw nvae;
            }
            switch (alt24) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:497:4: 'PASSWORD' '=' pass= stringLiteral
                    {
                    match(input,44,FOLLOW_44_in_alterUser1736); if (failed) return retval;
                    match(input,99,FOLLOW_99_in_alterUser1738); if (failed) return retval;
                    pushFollow(FOLLOW_stringLiteral_in_alterUser1742);
                    pass=stringLiteral();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:498:4: prop+= userParameter ( ',' prop+= userParameter )*
                    {
                    pushFollow(FOLLOW_userParameter_in_alterUser1752);
                    prop=userParameter();
                    _fsp--;
                    if (failed) return retval;
                    if (list_prop==null) list_prop=new ArrayList();
                    list_prop.add(prop.getTemplate());

                    if ( backtracking==0 ) {
                      properties.put(((userParameter_return)prop).property.toUpperCase(), ((userParameter_return)prop).value);
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:498:131: ( ',' prop+= userParameter )*
                    loop23:
                    do {
                        int alt23=2;
                        int LA23_0 = input.LA(1);

                        if ( (LA23_0==85) ) {
                            alt23=1;
                        }


                        switch (alt23) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:498:132: ',' prop+= userParameter
                    	    {
                    	    match(input,85,FOLLOW_85_in_alterUser1757); if (failed) return retval;
                    	    pushFollow(FOLLOW_userParameter_in_alterUser1761);
                    	    prop=userParameter();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if (list_prop==null) list_prop=new ArrayList();
                    	    list_prop.add(prop.getTemplate());

                    	    if ( backtracking==0 ) {
                    	      properties.put(((userParameter_return)prop).property.toUpperCase(), ((userParameter_return)prop).value);
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop23;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( backtracking==0 ) {

              			if (pass != null) {
              				retval.response = server.alterUser(sessionKey, input.toString(user.start,user.stop), 1, pass.value, null);
              			} else {
              				retval.response = server.alterUser(sessionKey, input.toString(user.start,user.stop), 2, null, properties);
              			}
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 25, alterUser_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alterUser

    public static class dropUser_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropUser
    // /Users/michaelarace/CodaServer_Src/Coda.g:508:1: dropUser returns [CodaResponse response] : 'DROP' 'USER' user= objectName ;
    public final dropUser_return dropUser() throws RecognitionException {
        dropUser_return retval = new dropUser_return();
        retval.start = input.LT(1);
        int dropUser_StartIndex = input.index();
        objectName_return user = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 26) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:509:2: ( 'DROP' 'USER' user= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:509:4: 'DROP' 'USER' user= objectName
            {
            match(input,92,FOLLOW_92_in_dropUser1788); if (failed) return retval;
            match(input,94,FOLLOW_94_in_dropUser1790); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_dropUser1794);
            user=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			retval.response =  server.dropUser(sessionKey, input.toString(user.start,user.stop));
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 26, dropUser_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropUser

    public static class createGroup_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createGroup
    // /Users/michaelarace/CodaServer_Src/Coda.g:515:1: createGroup returns [CodaResponse response] : 'CREATE' 'GROUP' gn= objectName (disp= displayedAs )? ;
    public final createGroup_return createGroup() throws RecognitionException {
        createGroup_return retval = new createGroup_return();
        retval.start = input.LT(1);
        int createGroup_StartIndex = input.index();
        objectName_return gn = null;

        displayedAs_return disp = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 27) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:516:2: ( 'CREATE' 'GROUP' gn= objectName (disp= displayedAs )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:516:4: 'CREATE' 'GROUP' gn= objectName (disp= displayedAs )?
            {
            match(input,82,FOLLOW_82_in_createGroup1813); if (failed) return retval;
            match(input,79,FOLLOW_79_in_createGroup1815); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createGroup1819);
            gn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:516:35: (disp= displayedAs )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==163) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:516:36: disp= displayedAs
                    {
                    pushFollow(FOLLOW_displayedAs_in_createGroup1824);
                    disp=displayedAs();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			retval.response = server.createGroup(sessionKey, input.toString(gn.start,gn.stop), (disp == null ? input.toString(gn.start,gn.stop) : disp.displayName));
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 27, createGroup_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createGroup

    public static class alterGroup_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alterGroup
    // /Users/michaelarace/CodaServer_Src/Coda.g:522:1: alterGroup returns [CodaResponse response] : 'ALTER' 'GROUP' gn= objectName (ngn= renameTo | disp= setDisplay | 'ADD' 'USER' user= objectName | 'REMOVE' 'USER' user2= objectName ) ;
    public final alterGroup_return alterGroup() throws RecognitionException {
        alterGroup_return retval = new alterGroup_return();
        retval.start = input.LT(1);
        int alterGroup_StartIndex = input.index();
        objectName_return gn = null;

        renameTo_return ngn = null;

        setDisplay_return disp = null;

        objectName_return user = null;

        objectName_return user2 = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 28) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:523:2: ( 'ALTER' 'GROUP' gn= objectName (ngn= renameTo | disp= setDisplay | 'ADD' 'USER' user= objectName | 'REMOVE' 'USER' user2= objectName ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:523:4: 'ALTER' 'GROUP' gn= objectName (ngn= renameTo | disp= setDisplay | 'ADD' 'USER' user= objectName | 'REMOVE' 'USER' user2= objectName )
            {
            match(input,90,FOLLOW_90_in_alterGroup1847); if (failed) return retval;
            match(input,79,FOLLOW_79_in_alterGroup1849); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_alterGroup1853);
            gn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:523:34: (ngn= renameTo | disp= setDisplay | 'ADD' 'USER' user= objectName | 'REMOVE' 'USER' user2= objectName )
            int alt26=4;
            switch ( input.LA(1) ) {
            case 160:
                {
                alt26=1;
                }
                break;
            case 81:
                {
                alt26=2;
                }
                break;
            case 100:
                {
                alt26=3;
                }
                break;
            case 101:
                {
                alt26=4;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("523:34: (ngn= renameTo | disp= setDisplay | 'ADD' 'USER' user= objectName | 'REMOVE' 'USER' user2= objectName )", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:523:35: ngn= renameTo
                    {
                    pushFollow(FOLLOW_renameTo_in_alterGroup1858);
                    ngn=renameTo();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:523:50: disp= setDisplay
                    {
                    pushFollow(FOLLOW_setDisplay_in_alterGroup1864);
                    disp=setDisplay();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:523:68: 'ADD' 'USER' user= objectName
                    {
                    match(input,100,FOLLOW_100_in_alterGroup1868); if (failed) return retval;
                    match(input,94,FOLLOW_94_in_alterGroup1870); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_alterGroup1874);
                    user=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:523:99: 'REMOVE' 'USER' user2= objectName
                    {
                    match(input,101,FOLLOW_101_in_alterGroup1878); if (failed) return retval;
                    match(input,94,FOLLOW_94_in_alterGroup1880); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_alterGroup1884);
                    user2=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			if (disp != null) {
              				retval.response = server.alterGroup(sessionKey, input.toString(gn.start,gn.stop), 1, null, disp.displayName, null);
              			} else if (ngn != null) {
              				retval.response = server.alterGroup(sessionKey, input.toString(gn.start,gn.stop), 2, ngn.newName, null, null);
              			} else if (user != null) {
              				retval.response = server.alterGroup(sessionKey, input.toString(gn.start,gn.stop), 3, null, null, input.toString(user.start,user.stop));
              			} else {
              				retval.response = server.alterGroup(sessionKey, input.toString(gn.start,gn.stop), 4, null, null, input.toString(user2.start,user2.stop));
              			}
              			
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 28, alterGroup_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alterGroup

    public static class dropGroup_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropGroup
    // /Users/michaelarace/CodaServer_Src/Coda.g:538:1: dropGroup returns [CodaResponse response] : 'DROP' 'GROUP' gn= objectName ;
    public final dropGroup_return dropGroup() throws RecognitionException {
        dropGroup_return retval = new dropGroup_return();
        retval.start = input.LT(1);
        int dropGroup_StartIndex = input.index();
        objectName_return gn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 29) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:539:2: ( 'DROP' 'GROUP' gn= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:539:4: 'DROP' 'GROUP' gn= objectName
            {
            match(input,92,FOLLOW_92_in_dropGroup1904); if (failed) return retval;
            match(input,79,FOLLOW_79_in_dropGroup1906); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_dropGroup1910);
            gn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			retval.response = server.dropGroup(sessionKey, input.toString(gn.start,gn.stop));
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 29, dropGroup_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropGroup

    public static class createType_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createType
    // /Users/michaelarace/CodaServer_Src/Coda.g:545:1: createType returns [CodaResponse response] : 'CREATE' 'TYPE' tn= objectName 'AS' '(' prop= typeParameter ',' prop= typeParameter ')' ;
    public final createType_return createType() throws RecognitionException {
        createType_return retval = new createType_return();
        retval.start = input.LT(1);
        int createType_StartIndex = input.index();
        objectName_return tn = null;

        typeParameter_return prop = null;



        	Hashtable<String,String> properties = new Hashtable();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 30) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:549:2: ( 'CREATE' 'TYPE' tn= objectName 'AS' '(' prop= typeParameter ',' prop= typeParameter ')' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:549:4: 'CREATE' 'TYPE' tn= objectName 'AS' '(' prop= typeParameter ',' prop= typeParameter ')'
            {
            match(input,82,FOLLOW_82_in_createType1936); if (failed) return retval;
            match(input,102,FOLLOW_102_in_createType1938); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createType1942);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,97,FOLLOW_97_in_createType1944); if (failed) return retval;
            match(input,84,FOLLOW_84_in_createType1946); if (failed) return retval;
            pushFollow(FOLLOW_typeParameter_in_createType1950);
            prop=typeParameter();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               properties.put(prop.property.toUpperCase(), prop.value); 
            }
            match(input,85,FOLLOW_85_in_createType1954); if (failed) return retval;
            pushFollow(FOLLOW_typeParameter_in_createType1958);
            prop=typeParameter();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               properties.put(prop.property.toUpperCase(), prop.value); 
            }
            match(input,86,FOLLOW_86_in_createType1962); if (failed) return retval;
            if ( backtracking==0 ) {

              			if (!properties.containsKey("VALIDATION_MASK") && !properties.containsKey("SAVE_MASK")) {
              				retval.response = new CodaResponse(true, null, 2021);
              			} else {
              				retval.response = server.createType(sessionKey, input.toString(tn.start,tn.stop), properties.get("VALIDATION_MASK"), properties.get("SAVE_MASK"));
              			}
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 30, createType_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createType

    public static class alterType_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alterType
    // /Users/michaelarace/CodaServer_Src/Coda.g:559:1: alterType returns [CodaResponse response] : 'ALTER' 'TYPE' tn= objectName 'SET' prop= typeParameter ',' prop= typeParameter ;
    public final alterType_return alterType() throws RecognitionException {
        alterType_return retval = new alterType_return();
        retval.start = input.LT(1);
        int alterType_StartIndex = input.index();
        objectName_return tn = null;

        typeParameter_return prop = null;



        	Hashtable<String,String> properties = new Hashtable();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 31) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:563:2: ( 'ALTER' 'TYPE' tn= objectName 'SET' prop= typeParameter ',' prop= typeParameter )
            // /Users/michaelarace/CodaServer_Src/Coda.g:563:4: 'ALTER' 'TYPE' tn= objectName 'SET' prop= typeParameter ',' prop= typeParameter
            {
            match(input,90,FOLLOW_90_in_alterType1986); if (failed) return retval;
            match(input,102,FOLLOW_102_in_alterType1988); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_alterType1992);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,81,FOLLOW_81_in_alterType1994); if (failed) return retval;
            pushFollow(FOLLOW_typeParameter_in_alterType1998);
            prop=typeParameter();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               properties.put(prop.property.toUpperCase(), prop.value); 
            }
            match(input,85,FOLLOW_85_in_alterType2002); if (failed) return retval;
            pushFollow(FOLLOW_typeParameter_in_alterType2006);
            prop=typeParameter();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               properties.put(prop.property.toUpperCase(), prop.value); 
            }
            if ( backtracking==0 ) {

              			if (!properties.containsKey("VALIDATION_MASK") && !properties.containsKey("SAVE_MASK")) {
              				retval.response = new CodaResponse(true, null, 2021);
              			} else {
              				retval.response = server.alterType(sessionKey, input.toString(tn.start,tn.stop), properties.get("VALIDATION_MASK"), properties.get("SAVE_MASK"));
              		}	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 31, alterType_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alterType

    public static class dropType_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropType
    // /Users/michaelarace/CodaServer_Src/Coda.g:572:1: dropType returns [CodaResponse response] : 'DROP' 'TYPE' tn= objectName ;
    public final dropType_return dropType() throws RecognitionException {
        dropType_return retval = new dropType_return();
        retval.start = input.LT(1);
        int dropType_StartIndex = input.index();
        objectName_return tn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 32) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:573:2: ( 'DROP' 'TYPE' tn= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:573:4: 'DROP' 'TYPE' tn= objectName
            {
            match(input,92,FOLLOW_92_in_dropType2028); if (failed) return retval;
            match(input,102,FOLLOW_102_in_dropType2030); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_dropType2034);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			retval.response =  server.dropType(sessionKey, input.toString(tn.start,tn.stop));
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 32, dropType_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropType

    public static class formatDatasource_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start formatDatasource
    // /Users/michaelarace/CodaServer_Src/Coda.g:579:1: formatDatasource returns [CodaResponse response] : 'FORMAT' 'DATASOURCE' dn= objectName ( 'FOR' co= 'CODA' 'ROOT' 'IDENTIFIED' 'BY' pass= stringLiteral | 'FOR' 'APPLICATION' an= objectName 'PREFIX' pre= objectName ( 'REVISION' rev= Integer )? ) ;
    public final formatDatasource_return formatDatasource() throws RecognitionException {
        formatDatasource_return retval = new formatDatasource_return();
        retval.start = input.LT(1);
        int formatDatasource_StartIndex = input.index();
        Token co=null;
        Token rev=null;
        objectName_return dn = null;

        stringLiteral_return pass = null;

        objectName_return an = null;

        objectName_return pre = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 33) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:580:2: ( 'FORMAT' 'DATASOURCE' dn= objectName ( 'FOR' co= 'CODA' 'ROOT' 'IDENTIFIED' 'BY' pass= stringLiteral | 'FOR' 'APPLICATION' an= objectName 'PREFIX' pre= objectName ( 'REVISION' rev= Integer )? ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:580:4: 'FORMAT' 'DATASOURCE' dn= objectName ( 'FOR' co= 'CODA' 'ROOT' 'IDENTIFIED' 'BY' pass= stringLiteral | 'FOR' 'APPLICATION' an= objectName 'PREFIX' pre= objectName ( 'REVISION' rev= Integer )? )
            {
            match(input,23,FOLLOW_23_in_formatDatasource2054); if (failed) return retval;
            match(input,83,FOLLOW_83_in_formatDatasource2056); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_formatDatasource2060);
            dn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:580:40: ( 'FOR' co= 'CODA' 'ROOT' 'IDENTIFIED' 'BY' pass= stringLiteral | 'FOR' 'APPLICATION' an= objectName 'PREFIX' pre= objectName ( 'REVISION' rev= Integer )? )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==103) ) {
                int LA28_1 = input.LA(2);

                if ( (LA28_1==104) ) {
                    alt28=1;
                }
                else if ( (LA28_1==76) ) {
                    alt28=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("580:40: ( 'FOR' co= 'CODA' 'ROOT' 'IDENTIFIED' 'BY' pass= stringLiteral | 'FOR' 'APPLICATION' an= objectName 'PREFIX' pre= objectName ( 'REVISION' rev= Integer )? )", 28, 1, input);

                    throw nvae;
                }
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("580:40: ( 'FOR' co= 'CODA' 'ROOT' 'IDENTIFIED' 'BY' pass= stringLiteral | 'FOR' 'APPLICATION' an= objectName 'PREFIX' pre= objectName ( 'REVISION' rev= Integer )? )", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:580:41: 'FOR' co= 'CODA' 'ROOT' 'IDENTIFIED' 'BY' pass= stringLiteral
                    {
                    match(input,103,FOLLOW_103_in_formatDatasource2063); if (failed) return retval;
                    co=(Token)input.LT(1);
                    match(input,104,FOLLOW_104_in_formatDatasource2067); if (failed) return retval;
                    match(input,54,FOLLOW_54_in_formatDatasource2069); if (failed) return retval;
                    match(input,95,FOLLOW_95_in_formatDatasource2071); if (failed) return retval;
                    match(input,96,FOLLOW_96_in_formatDatasource2073); if (failed) return retval;
                    pushFollow(FOLLOW_stringLiteral_in_formatDatasource2077);
                    pass=stringLiteral();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:580:104: 'FOR' 'APPLICATION' an= objectName 'PREFIX' pre= objectName ( 'REVISION' rev= Integer )?
                    {
                    match(input,103,FOLLOW_103_in_formatDatasource2082); if (failed) return retval;
                    match(input,76,FOLLOW_76_in_formatDatasource2084); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_formatDatasource2088);
                    an=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,48,FOLLOW_48_in_formatDatasource2090); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_formatDatasource2094);
                    pre=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:580:162: ( 'REVISION' rev= Integer )?
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==105) ) {
                        alt27=1;
                    }
                    switch (alt27) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:580:163: 'REVISION' rev= Integer
                            {
                            match(input,105,FOLLOW_105_in_formatDatasource2097); if (failed) return retval;
                            rev=(Token)input.LT(1);
                            match(input,Integer,FOLLOW_Integer_in_formatDatasource2101); if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( backtracking==0 ) {

              		if (co != null) {
              			retval.response = server.formatDatasourceForCoda(sessionKey, input.toString(dn.start,dn.stop), pass.value);
              		} else {
              			retval.response = server.formatDatasourceForApplication(sessionKey, input.toString(dn.start,dn.stop), input.toString(an.start,an.stop), (rev == null ? -1 : Long.parseLong(rev.getText())), input.toString(pre.start,pre.stop), true);
              		}
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 33, formatDatasource_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formatDatasource

    public static class promoteApplication_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start promoteApplication
    // /Users/michaelarace/CodaServer_Src/Coda.g:590:1: promoteApplication returns [CodaResponse response] : 'PROMOTE' 'APPLICATION' an= objectName 'ON' (en= environmentName | 'DATASOURCE' dn= objectName ) 'TO' 'REVISION' rev= Integer ;
    public final promoteApplication_return promoteApplication() throws RecognitionException {
        promoteApplication_return retval = new promoteApplication_return();
        retval.start = input.LT(1);
        int promoteApplication_StartIndex = input.index();
        Token rev=null;
        objectName_return an = null;

        environmentName_return en = null;

        objectName_return dn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 34) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:591:2: ( 'PROMOTE' 'APPLICATION' an= objectName 'ON' (en= environmentName | 'DATASOURCE' dn= objectName ) 'TO' 'REVISION' rev= Integer )
            // /Users/michaelarace/CodaServer_Src/Coda.g:591:4: 'PROMOTE' 'APPLICATION' an= objectName 'ON' (en= environmentName | 'DATASOURCE' dn= objectName ) 'TO' 'REVISION' rev= Integer
            {
            match(input,106,FOLLOW_106_in_promoteApplication2124); if (failed) return retval;
            match(input,76,FOLLOW_76_in_promoteApplication2126); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_promoteApplication2130);
            an=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,93,FOLLOW_93_in_promoteApplication2132); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:591:47: (en= environmentName | 'DATASOURCE' dn= objectName )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==17||LA29_0==50||LA29_0==61) ) {
                alt29=1;
            }
            else if ( (LA29_0==83) ) {
                alt29=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("591:47: (en= environmentName | 'DATASOURCE' dn= objectName )", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:591:48: en= environmentName
                    {
                    pushFollow(FOLLOW_environmentName_in_promoteApplication2137);
                    en=environmentName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:591:69: 'DATASOURCE' dn= objectName
                    {
                    match(input,83,FOLLOW_83_in_promoteApplication2141); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_promoteApplication2145);
                    dn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            match(input,75,FOLLOW_75_in_promoteApplication2148); if (failed) return retval;
            match(input,105,FOLLOW_105_in_promoteApplication2150); if (failed) return retval;
            rev=(Token)input.LT(1);
            match(input,Integer,FOLLOW_Integer_in_promoteApplication2154); if (failed) return retval;
            if ( backtracking==0 ) {

              		String datasource = dn != null ? input.toString(dn.start,dn.stop) : null;
              		int environment = -1;
              		
              		if (datasource == null) {
              			environment = 1;
              			if (en != null) {
              		            if (input.toString(en.start,en.stop).equalsIgnoreCase("DEV")) {
              		                environment = 1;
              		            } else if (input.toString(en.start,en.stop).equalsIgnoreCase("TEST")) {
              		                environment = 2;
              		            } else if (input.toString(en.start,en.stop).equalsIgnoreCase("PROD")) {
              		                environment = 3;
              		            } 
              		        }
              			datasource = server.getApplicationDatasourceName(input.toString(an.start,an.stop), environment);
              		        if (datasource == null) {
              		        	retval.response = new CodaResponse(true, null, 8003);
              		        }
              		}
              		if (retval.response == null) {
              			retval.response = server.formatDatasourceForApplication(sessionKey, datasource, input.toString(an.start,an.stop), Long.parseLong(rev.getText()), "", false);
              			
              			if (!retval.response.getError() && environment > -1) {
              				server.sendApplicationUpdateToCluster(input.toString(an.start,an.stop), input.toString(en.start,en.stop));
              				server.getDeployedApplication(input.toString(an.start,an.stop)).updateEnvironmentClassLoader(environment, server.getClassLoader());
              			}
              		}
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 34, promoteApplication_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end promoteApplication

    public static class grant_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start grant
    // /Users/michaelarace/CodaServer_Src/Coda.g:624:1: grant returns [CodaResponse response] : 'GRANT' (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName ) ;
    public final grant_return grant() throws RecognitionException {
        grant_return retval = new grant_return();
        retval.start = input.LT(1);
        int grant_StartIndex = input.index();
        serverPermission_return sp = null;

        objectName_return user = null;

        applicationPermission_return ap = null;

        objectName_return an = null;

        environmentName_return env = null;

        objectName_return gn = null;

        objectName_return group_name = null;

        objectName_return assigned_role = null;

        objectName_return permission = null;

        objectName_return rn = null;

        tablePermission_return table_permission = null;

        applicationPrefix_return aname = null;

        objectName_return tn = null;

        formStatusPermission_return fs_permissions = null;

        objectName_return fn = null;

        objectName_return fsn = null;

        procedurePermission_return procedure_permission = null;

        objectName_return pn = null;



        	Vector<String> permissions = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 35) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:628:2: ( 'GRANT' (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:628:4: 'GRANT' (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )
            {
            match(input,107,FOLLOW_107_in_grant2179); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )
            int alt43=8;
            switch ( input.LA(1) ) {
            case 14:
                {
                switch ( input.LA(2) ) {
                case 93:
                    {
                    int LA43_13 = input.LA(3);

                    if ( (synpred189()) ) {
                        alt43=2;
                    }
                    else if ( (synpred190()) ) {
                        alt43=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 13, input);

                        throw nvae;
                    }
                    }
                    break;
                case 85:
                    {
                    int LA43_14 = input.LA(3);

                    if ( (synpred185()) ) {
                        alt43=1;
                    }
                    else if ( (synpred189()) ) {
                        alt43=2;
                    }
                    else if ( (synpred195()) ) {
                        alt43=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 14, input);

                        throw nvae;
                    }
                    }
                    break;
                case 78:
                    {
                    alt43=5;
                    }
                    break;
                case 75:
                    {
                    int LA43_16 = input.LA(3);

                    if ( (synpred185()) ) {
                        alt43=1;
                    }
                    else if ( (synpred195()) ) {
                        alt43=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 16, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 1, input);

                    throw nvae;
                }

                }
                break;
            case 30:
            case 31:
            case 33:
            case 35:
            case 37:
            case 38:
            case 51:
                {
                switch ( input.LA(2) ) {
                case 85:
                    {
                    int LA43_17 = input.LA(3);

                    if ( (synpred185()) ) {
                        alt43=1;
                    }
                    else if ( (synpred195()) ) {
                        alt43=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 17, input);

                        throw nvae;
                    }
                    }
                    break;
                case 78:
                    {
                    alt43=5;
                    }
                    break;
                case 75:
                    {
                    int LA43_19 = input.LA(3);

                    if ( (synpred185()) ) {
                        alt43=1;
                    }
                    else if ( (synpred195()) ) {
                        alt43=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 19, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 2, input);

                    throw nvae;
                }

                }
                break;
            case 18:
                {
                switch ( input.LA(2) ) {
                case 85:
                    {
                    int LA43_20 = input.LA(3);

                    if ( (synpred189()) ) {
                        alt43=2;
                    }
                    else if ( (synpred195()) ) {
                        alt43=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 20, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    alt43=2;
                    }
                    break;
                case 75:
                case 78:
                    {
                    alt43=5;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 3, input);

                    throw nvae;
                }

                }
                break;
            case 39:
                {
                switch ( input.LA(2) ) {
                case 85:
                    {
                    int LA43_24 = input.LA(3);

                    if ( (synpred185()) ) {
                        alt43=1;
                    }
                    else if ( (synpred189()) ) {
                        alt43=2;
                    }
                    else if ( (synpred195()) ) {
                        alt43=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 24, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    alt43=2;
                    }
                    break;
                case 78:
                    {
                    alt43=5;
                    }
                    break;
                case 75:
                    {
                    int LA43_27 = input.LA(3);

                    if ( (synpred185()) ) {
                        alt43=1;
                    }
                    else if ( (synpred195()) ) {
                        alt43=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 27, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 4, input);

                    throw nvae;
                }

                }
                break;
            case 108:
                {
                alt43=4;
                }
                break;
            case ObjectName:
            case 10:
            case 11:
            case 12:
            case 13:
            case 15:
            case 16:
            case 17:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 32:
            case 34:
            case 36:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
                {
                alt43=5;
                }
                break;
            case 67:
            case 68:
                {
                alt43=2;
                }
                break;
            case 70:
                {
                int LA43_9 = input.LA(2);

                if ( (LA43_9==85) ) {
                    int LA43_28 = input.LA(3);

                    if ( (synpred198()) ) {
                        alt43=6;
                    }
                    else if ( (synpred201()) ) {
                        alt43=7;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 28, input);

                        throw nvae;
                    }
                }
                else if ( (LA43_9==93) ) {
                    int LA43_29 = input.LA(3);

                    if ( (synpred198()) ) {
                        alt43=6;
                    }
                    else if ( (synpred201()) ) {
                        alt43=7;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 29, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 9, input);

                    throw nvae;
                }
                }
                break;
            case 69:
            case 71:
            case 134:
                {
                alt43=6;
                }
                break;
            case 202:
            case 203:
                {
                alt43=7;
                }
                break;
            case 204:
                {
                alt43=8;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("629:3: (sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName | fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName )", 43, 0, input);

                throw nvae;
            }

            switch (alt43) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:630:4: sp= serverPermission ( ',' sp= serverPermission )* 'TO' user= objectName
                    {
                    pushFollow(FOLLOW_serverPermission_in_grant2192);
                    sp=serverPermission();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(sp.start,sp.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:630:55: ( ',' sp= serverPermission )*
                    loop30:
                    do {
                        int alt30=2;
                        int LA30_0 = input.LA(1);

                        if ( (LA30_0==85) ) {
                            alt30=1;
                        }


                        switch (alt30) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:630:56: ',' sp= serverPermission
                    	    {
                    	    match(input,85,FOLLOW_85_in_grant2197); if (failed) return retval;
                    	    pushFollow(FOLLOW_serverPermission_in_grant2201);
                    	    sp=serverPermission();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       permissions.add(input.toString(sp.start,sp.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);

                    match(input,75,FOLLOW_75_in_grant2208); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2212);
                    user=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:631:5: ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName
                    {
                    pushFollow(FOLLOW_applicationPermission_in_grant2220);
                    ap=applicationPermission();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(ap.start,ap.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:631:61: ( ',' ap= applicationPermission )*
                    loop31:
                    do {
                        int alt31=2;
                        int LA31_0 = input.LA(1);

                        if ( (LA31_0==85) ) {
                            alt31=1;
                        }


                        switch (alt31) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:631:62: ',' ap= applicationPermission
                    	    {
                    	    match(input,85,FOLLOW_85_in_grant2225); if (failed) return retval;
                    	    pushFollow(FOLLOW_applicationPermission_in_grant2229);
                    	    ap=applicationPermission();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       permissions.add(input.toString(ap.start,ap.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop31;
                        }
                    } while (true);

                    match(input,93,FOLLOW_93_in_grant2236); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2240);
                    an=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:631:144: ( '.' env= environmentName )?
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==77) ) {
                        alt32=1;
                    }
                    switch (alt32) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:631:145: '.' env= environmentName
                            {
                            match(input,77,FOLLOW_77_in_grant2243); if (failed) return retval;
                            pushFollow(FOLLOW_environmentName_in_grant2247);
                            env=environmentName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:631:172: ( 'FOR' 'GROUP' gn= objectName )?
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==103) ) {
                        alt33=1;
                    }
                    switch (alt33) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:631:173: 'FOR' 'GROUP' gn= objectName
                            {
                            match(input,103,FOLLOW_103_in_grant2253); if (failed) return retval;
                            match(input,79,FOLLOW_79_in_grant2255); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_grant2259);
                            gn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    match(input,75,FOLLOW_75_in_grant2264); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2268);
                    user=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:632:5: 'CONNECT' 'ON' an= objectName 'TO' 'GROUP' group_name= objectName
                    {
                    match(input,14,FOLLOW_14_in_grant2274); if (failed) return retval;
                    match(input,93,FOLLOW_93_in_grant2276); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2280);
                    an=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,75,FOLLOW_75_in_grant2282); if (failed) return retval;
                    match(input,79,FOLLOW_79_in_grant2284); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2288);
                    group_name=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:633:5: 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'TO' user= objectName
                    {
                    match(input,108,FOLLOW_108_in_grant2294); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2298);
                    assigned_role=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,93,FOLLOW_93_in_grant2300); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2304);
                    an=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,77,FOLLOW_77_in_grant2306); if (failed) return retval;
                    pushFollow(FOLLOW_environmentName_in_grant2310);
                    env=environmentName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:633:80: ( 'FOR' 'GROUP' gn= objectName )?
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==103) ) {
                        alt34=1;
                    }
                    switch (alt34) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:633:81: 'FOR' 'GROUP' gn= objectName
                            {
                            match(input,103,FOLLOW_103_in_grant2313); if (failed) return retval;
                            match(input,79,FOLLOW_79_in_grant2315); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_grant2319);
                            gn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    match(input,75,FOLLOW_75_in_grant2324); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2328);
                    user=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 5 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:634:5: permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'TO' rn= objectName
                    {
                    pushFollow(FOLLOW_objectName_in_grant2336);
                    permission=objectName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(permission.start,permission.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:634:66: ( ',' permission= objectName )?
                    int alt35=2;
                    int LA35_0 = input.LA(1);

                    if ( (LA35_0==85) ) {
                        alt35=1;
                    }
                    switch (alt35) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:634:67: ',' permission= objectName
                            {
                            match(input,85,FOLLOW_85_in_grant2341); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_grant2345);
                            permission=objectName();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) {
                               permissions.add(input.toString(permission.start,permission.stop)); 
                            }

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:634:135: ( 'IN' an= objectName )?
                    int alt36=2;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==78) ) {
                        alt36=1;
                    }
                    switch (alt36) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:634:136: 'IN' an= objectName
                            {
                            match(input,78,FOLLOW_78_in_grant2353); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_grant2357);
                            an=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    match(input,75,FOLLOW_75_in_grant2362); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2366);
                    rn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 6 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:635:5: table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'TO' rn= objectName
                    {
                    pushFollow(FOLLOW_tablePermission_in_grant2374);
                    table_permission=tablePermission();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(table_permission.start,table_permission.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:635:83: ( ',' table_permission= tablePermission )*
                    loop37:
                    do {
                        int alt37=2;
                        int LA37_0 = input.LA(1);

                        if ( (LA37_0==85) ) {
                            alt37=1;
                        }


                        switch (alt37) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:635:84: ',' table_permission= tablePermission
                    	    {
                    	    match(input,85,FOLLOW_85_in_grant2379); if (failed) return retval;
                    	    pushFollow(FOLLOW_tablePermission_in_grant2383);
                    	    table_permission=tablePermission();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       permissions.add(input.toString(table_permission.start,table_permission.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop37;
                        }
                    } while (true);

                    match(input,93,FOLLOW_93_in_grant2390); if (failed) return retval;
                    match(input,109,FOLLOW_109_in_grant2392); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:635:187: (aname= applicationPrefix )?
                    int alt38=2;
                    int LA38_0 = input.LA(1);

                    if ( (LA38_0==ObjectName) ) {
                        int LA38_1 = input.LA(2);

                        if ( (LA38_1==77) ) {
                            alt38=1;
                        }
                    }
                    else if ( ((LA38_0>=10 && LA38_0<=66)) ) {
                        int LA38_2 = input.LA(2);

                        if ( (LA38_2==77) ) {
                            alt38=1;
                        }
                    }
                    switch (alt38) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: aname= applicationPrefix
                            {
                            pushFollow(FOLLOW_applicationPrefix_in_grant2396);
                            aname=applicationPrefix();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_objectName_in_grant2401);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,75,FOLLOW_75_in_grant2403); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2407);
                    rn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 7 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:636:5: fs_permissions= formStatusPermission ( ',' fs_permissions= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'TO' rn= objectName
                    {
                    pushFollow(FOLLOW_formStatusPermission_in_grant2415);
                    fs_permissions=formStatusPermission();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(fs_permissions.start,fs_permissions.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:636:84: ( ',' fs_permissions= formStatusPermission )*
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==85) ) {
                            alt39=1;
                        }


                        switch (alt39) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:636:85: ',' fs_permissions= formStatusPermission
                    	    {
                    	    match(input,85,FOLLOW_85_in_grant2420); if (failed) return retval;
                    	    pushFollow(FOLLOW_formStatusPermission_in_grant2424);
                    	    fs_permissions=formStatusPermission();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       permissions.add(input.toString(fs_permissions.start,fs_permissions.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop39;
                        }
                    } while (true);

                    match(input,93,FOLLOW_93_in_grant2431); if (failed) return retval;
                    match(input,110,FOLLOW_110_in_grant2433); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:636:188: (aname= applicationPrefix )?
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==ObjectName) ) {
                        int LA40_1 = input.LA(2);

                        if ( (LA40_1==77) ) {
                            alt40=1;
                        }
                    }
                    else if ( ((LA40_0>=10 && LA40_0<=66)) ) {
                        int LA40_2 = input.LA(2);

                        if ( (LA40_2==77) ) {
                            alt40=1;
                        }
                    }
                    switch (alt40) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: aname= applicationPrefix
                            {
                            pushFollow(FOLLOW_applicationPrefix_in_grant2437);
                            aname=applicationPrefix();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_objectName_in_grant2442);
                    fn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,74,FOLLOW_74_in_grant2444); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2448);
                    fsn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,75,FOLLOW_75_in_grant2450); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2454);
                    rn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 8 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:637:5: procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'TO' rn= objectName
                    {
                    pushFollow(FOLLOW_procedurePermission_in_grant2462);
                    procedure_permission=procedurePermission();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(procedure_permission.start,procedure_permission.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:637:95: ( ',' procedure_permission= procedurePermission )*
                    loop41:
                    do {
                        int alt41=2;
                        int LA41_0 = input.LA(1);

                        if ( (LA41_0==85) ) {
                            alt41=1;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:637:96: ',' procedure_permission= procedurePermission
                    	    {
                    	    match(input,85,FOLLOW_85_in_grant2467); if (failed) return retval;
                    	    pushFollow(FOLLOW_procedurePermission_in_grant2471);
                    	    procedure_permission=procedurePermission();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       permissions.add(input.toString(procedure_permission.start,procedure_permission.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop41;
                        }
                    } while (true);

                    match(input,93,FOLLOW_93_in_grant2478); if (failed) return retval;
                    match(input,111,FOLLOW_111_in_grant2480); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:637:215: (aname= applicationPrefix )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==ObjectName) ) {
                        int LA42_1 = input.LA(2);

                        if ( (LA42_1==77) ) {
                            alt42=1;
                        }
                    }
                    else if ( ((LA42_0>=10 && LA42_0<=66)) ) {
                        int LA42_2 = input.LA(2);

                        if ( (LA42_2==77) ) {
                            alt42=1;
                        }
                    }
                    switch (alt42) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: aname= applicationPrefix
                            {
                            pushFollow(FOLLOW_applicationPrefix_in_grant2484);
                            aname=applicationPrefix();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_objectName_in_grant2489);
                    pn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,75,FOLLOW_75_in_grant2491); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_grant2495);
                    rn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			if (sp != null) {
              				retval.response = server.grantServerPermissions(sessionKey, permissions, input.toString(user.start,user.stop));
              			} else if (ap != null) {
              				retval.response = server.grantApplicationPermissions(sessionKey, permissions, input.toString(an.start,an.stop), (env == null ? null : input.toString(env.start,env.stop)), (gn == null ? null : input.toString(gn.start,gn.stop)), input.toString(user.start,user.stop));
              			} else if (group_name != null) {
              				retval.response = server.grantApplicationToGroup(sessionKey, input.toString(an.start,an.stop), input.toString(group_name.start,group_name.stop));
              			} else if (assigned_role != null) {
              				retval.response = server.grantRoleToUser(sessionKey, input.toString(assigned_role.start,assigned_role.stop), input.toString(an.start,an.stop), input.toString(env.start,env.stop), (gn == null ? null : input.toString(gn.start,gn.stop)), input.toString(user.start,user.stop));
              			} else if (permission != null) {
              				CodaResponse resp = server.grantPermissionsToRole (sessionKey, this.getDatabase(), permissions , an != null ? input.toString(an.start,an.stop) : null, input.toString(rn.start,rn.stop));
              				if (!resp.getError()) {
              					logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? input.toString(an.start,an.stop) : null, null);
              				}
              				retval.response = resp;
              			} else if (table_permission != null ) {
              				CodaResponse resp = server.grantTablePermissionsToRole (sessionKey, this.getDatabase(), permissions , aname != null ? aname.applicationName : null, input.toString(tn.start,tn.stop), input.toString(rn.start,rn.stop));
              				if (!resp.getError()) {
              					logTransaction(input.toString(retval.start,input.LT(-1)), aname != null ? aname.applicationName : null, null);
              				}
              				retval.response = resp;
              			} else if (fs_permissions != null ) {
              				CodaResponse resp = server.grantFormStatusPermissionsToRole (sessionKey, this.getDatabase(),permissions , aname != null ? aname.applicationName : null, input.toString(fn.start,fn.stop), input.toString(fsn.start,fsn.stop), input.toString(rn.start,rn.stop));
              				if (!resp.getError()) {
              					logTransaction(input.toString(retval.start,input.LT(-1)), aname != null ? aname.applicationName : null, null);
              				}
              				retval.response = resp;
              			} else if (procedure_permission != null ) {
              				CodaResponse resp = server.grantProcedurePermissionsToRole (sessionKey, this.getDatabase(), permissions , aname != null ? aname.applicationName : null, input.toString(pn.start,pn.stop), input.toString(rn.start,rn.stop));
              				if (!resp.getError()) {
              					logTransaction(input.toString(retval.start,input.LT(-1)), aname != null ? aname.applicationName : null, null);
              				}
              				retval.response = resp;
              			}
              			
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 35, grant_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end grant

    public static class revoke_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start revoke
    // /Users/michaelarace/CodaServer_Src/Coda.g:677:1: revoke returns [CodaResponse response] : 'REVOKE' (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName ) ;
    public final revoke_return revoke() throws RecognitionException {
        revoke_return retval = new revoke_return();
        retval.start = input.LT(1);
        int revoke_StartIndex = input.index();
        serverPermission_return sp = null;

        objectName_return user = null;

        applicationPermission_return ap = null;

        objectName_return an = null;

        environmentName_return env = null;

        objectName_return gn = null;

        objectName_return group_name = null;

        objectName_return assigned_role = null;

        objectName_return permission = null;

        objectName_return rn = null;

        tablePermission_return table_permission = null;

        applicationPrefix_return aname = null;

        objectName_return tn = null;

        formStatusPermission_return fs_permission = null;

        objectName_return fn = null;

        objectName_return fsn = null;

        procedurePermission_return procedure_permission = null;

        objectName_return pn = null;



        	Vector<String> permissions = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 36) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:681:2: ( 'REVOKE' (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:681:4: 'REVOKE' (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )
            {
            match(input,112,FOLLOW_112_in_revoke2527); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )
            int alt57=8;
            switch ( input.LA(1) ) {
            case 14:
                {
                switch ( input.LA(2) ) {
                case 93:
                    {
                    int LA57_13 = input.LA(3);

                    if ( (synpred209()) ) {
                        alt57=2;
                    }
                    else if ( (synpred210()) ) {
                        alt57=3;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 13, input);

                        throw nvae;
                    }
                    }
                    break;
                case 85:
                    {
                    int LA57_14 = input.LA(3);

                    if ( (synpred205()) ) {
                        alt57=1;
                    }
                    else if ( (synpred209()) ) {
                        alt57=2;
                    }
                    else if ( (synpred215()) ) {
                        alt57=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 14, input);

                        throw nvae;
                    }
                    }
                    break;
                case 78:
                    {
                    alt57=5;
                    }
                    break;
                case 113:
                    {
                    int LA57_16 = input.LA(3);

                    if ( (synpred205()) ) {
                        alt57=1;
                    }
                    else if ( (synpred215()) ) {
                        alt57=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 16, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 1, input);

                    throw nvae;
                }

                }
                break;
            case 30:
            case 31:
            case 33:
            case 35:
            case 37:
            case 38:
            case 51:
                {
                switch ( input.LA(2) ) {
                case 85:
                    {
                    int LA57_17 = input.LA(3);

                    if ( (synpred205()) ) {
                        alt57=1;
                    }
                    else if ( (synpred215()) ) {
                        alt57=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 17, input);

                        throw nvae;
                    }
                    }
                    break;
                case 78:
                    {
                    alt57=5;
                    }
                    break;
                case 113:
                    {
                    int LA57_19 = input.LA(3);

                    if ( (synpred205()) ) {
                        alt57=1;
                    }
                    else if ( (synpred215()) ) {
                        alt57=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 19, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 2, input);

                    throw nvae;
                }

                }
                break;
            case 18:
                {
                switch ( input.LA(2) ) {
                case 85:
                    {
                    int LA57_20 = input.LA(3);

                    if ( (synpred209()) ) {
                        alt57=2;
                    }
                    else if ( (synpred215()) ) {
                        alt57=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 20, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    alt57=2;
                    }
                    break;
                case 78:
                case 113:
                    {
                    alt57=5;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 3, input);

                    throw nvae;
                }

                }
                break;
            case 39:
                {
                switch ( input.LA(2) ) {
                case 85:
                    {
                    int LA57_24 = input.LA(3);

                    if ( (synpred205()) ) {
                        alt57=1;
                    }
                    else if ( (synpred209()) ) {
                        alt57=2;
                    }
                    else if ( (synpred215()) ) {
                        alt57=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 24, input);

                        throw nvae;
                    }
                    }
                    break;
                case 93:
                    {
                    alt57=2;
                    }
                    break;
                case 78:
                    {
                    alt57=5;
                    }
                    break;
                case 113:
                    {
                    int LA57_27 = input.LA(3);

                    if ( (synpred205()) ) {
                        alt57=1;
                    }
                    else if ( (synpred215()) ) {
                        alt57=5;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 27, input);

                        throw nvae;
                    }
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 4, input);

                    throw nvae;
                }

                }
                break;
            case 108:
                {
                alt57=4;
                }
                break;
            case ObjectName:
            case 10:
            case 11:
            case 12:
            case 13:
            case 15:
            case 16:
            case 17:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 32:
            case 34:
            case 36:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
                {
                alt57=5;
                }
                break;
            case 67:
            case 68:
                {
                alt57=2;
                }
                break;
            case 70:
                {
                int LA57_9 = input.LA(2);

                if ( (LA57_9==85) ) {
                    int LA57_28 = input.LA(3);

                    if ( (synpred218()) ) {
                        alt57=6;
                    }
                    else if ( (synpred221()) ) {
                        alt57=7;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 28, input);

                        throw nvae;
                    }
                }
                else if ( (LA57_9==93) ) {
                    int LA57_29 = input.LA(3);

                    if ( (synpred218()) ) {
                        alt57=6;
                    }
                    else if ( (synpred221()) ) {
                        alt57=7;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 29, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 9, input);

                    throw nvae;
                }
                }
                break;
            case 69:
            case 71:
            case 134:
                {
                alt57=6;
                }
                break;
            case 202:
            case 203:
                {
                alt57=7;
                }
                break;
            case 204:
                {
                alt57=8;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("682:3: (sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName | ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName | 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName | permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName | table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName | fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName | procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName )", 57, 0, input);

                throw nvae;
            }

            switch (alt57) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:683:4: sp= serverPermission ( ',' sp= serverPermission )* 'FROM' user= objectName
                    {
                    pushFollow(FOLLOW_serverPermission_in_revoke2538);
                    sp=serverPermission();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(sp.start,sp.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:683:55: ( ',' sp= serverPermission )*
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==85) ) {
                            alt44=1;
                        }


                        switch (alt44) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:683:56: ',' sp= serverPermission
                    	    {
                    	    match(input,85,FOLLOW_85_in_revoke2543); if (failed) return retval;
                    	    pushFollow(FOLLOW_serverPermission_in_revoke2547);
                    	    sp=serverPermission();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       permissions.add(input.toString(sp.start,sp.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop44;
                        }
                    } while (true);

                    match(input,113,FOLLOW_113_in_revoke2554); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2558);
                    user=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:684:5: ap= applicationPermission ( ',' ap= applicationPermission )* 'ON' an= objectName ( '.' env= environmentName )? ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName
                    {
                    pushFollow(FOLLOW_applicationPermission_in_revoke2568);
                    ap=applicationPermission();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(ap.start,ap.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:684:61: ( ',' ap= applicationPermission )*
                    loop45:
                    do {
                        int alt45=2;
                        int LA45_0 = input.LA(1);

                        if ( (LA45_0==85) ) {
                            alt45=1;
                        }


                        switch (alt45) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:684:62: ',' ap= applicationPermission
                    	    {
                    	    match(input,85,FOLLOW_85_in_revoke2573); if (failed) return retval;
                    	    pushFollow(FOLLOW_applicationPermission_in_revoke2577);
                    	    ap=applicationPermission();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       permissions.add(input.toString(ap.start,ap.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop45;
                        }
                    } while (true);

                    match(input,93,FOLLOW_93_in_revoke2584); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2588);
                    an=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:684:144: ( '.' env= environmentName )?
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==77) ) {
                        alt46=1;
                    }
                    switch (alt46) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:684:145: '.' env= environmentName
                            {
                            match(input,77,FOLLOW_77_in_revoke2591); if (failed) return retval;
                            pushFollow(FOLLOW_environmentName_in_revoke2595);
                            env=environmentName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:684:172: ( 'FOR' 'GROUP' gn= objectName )?
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==103) ) {
                        alt47=1;
                    }
                    switch (alt47) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:684:173: 'FOR' 'GROUP' gn= objectName
                            {
                            match(input,103,FOLLOW_103_in_revoke2601); if (failed) return retval;
                            match(input,79,FOLLOW_79_in_revoke2603); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_revoke2607);
                            gn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    match(input,113,FOLLOW_113_in_revoke2612); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2616);
                    user=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:685:5: 'CONNECT' 'ON' an= objectName 'FROM' 'GROUP' group_name= objectName
                    {
                    match(input,14,FOLLOW_14_in_revoke2622); if (failed) return retval;
                    match(input,93,FOLLOW_93_in_revoke2624); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2628);
                    an=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,113,FOLLOW_113_in_revoke2630); if (failed) return retval;
                    match(input,79,FOLLOW_79_in_revoke2632); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2636);
                    group_name=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:686:5: 'ROLE' assigned_role= objectName 'ON' an= objectName '.' env= environmentName ( 'FOR' 'GROUP' gn= objectName )? 'FROM' user= objectName
                    {
                    match(input,108,FOLLOW_108_in_revoke2642); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2646);
                    assigned_role=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,93,FOLLOW_93_in_revoke2648); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2652);
                    an=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,77,FOLLOW_77_in_revoke2654); if (failed) return retval;
                    pushFollow(FOLLOW_environmentName_in_revoke2658);
                    env=environmentName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:686:80: ( 'FOR' 'GROUP' gn= objectName )?
                    int alt48=2;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==103) ) {
                        alt48=1;
                    }
                    switch (alt48) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:686:81: 'FOR' 'GROUP' gn= objectName
                            {
                            match(input,103,FOLLOW_103_in_revoke2661); if (failed) return retval;
                            match(input,79,FOLLOW_79_in_revoke2663); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_revoke2667);
                            gn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    match(input,113,FOLLOW_113_in_revoke2673); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2677);
                    user=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 5 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:687:5: permission= objectName ( ',' permission= objectName )? ( 'IN' an= objectName )? 'FROM' rn= objectName
                    {
                    pushFollow(FOLLOW_objectName_in_revoke2685);
                    permission=objectName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(permission.start,permission.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:687:66: ( ',' permission= objectName )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==85) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:687:67: ',' permission= objectName
                            {
                            match(input,85,FOLLOW_85_in_revoke2690); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_revoke2694);
                            permission=objectName();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) {
                               permissions.add(input.toString(permission.start,permission.stop)); 
                            }

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:687:135: ( 'IN' an= objectName )?
                    int alt50=2;
                    int LA50_0 = input.LA(1);

                    if ( (LA50_0==78) ) {
                        alt50=1;
                    }
                    switch (alt50) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:687:136: 'IN' an= objectName
                            {
                            match(input,78,FOLLOW_78_in_revoke2702); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_revoke2706);
                            an=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    match(input,113,FOLLOW_113_in_revoke2711); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2715);
                    rn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 6 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:688:5: table_permission= tablePermission ( ',' table_permission= tablePermission )* 'ON' 'TABLE' (aname= applicationPrefix )? tn= objectName 'FROM' rn= objectName
                    {
                    pushFollow(FOLLOW_tablePermission_in_revoke2723);
                    table_permission=tablePermission();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(table_permission.start,table_permission.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:688:83: ( ',' table_permission= tablePermission )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==85) ) {
                            alt51=1;
                        }


                        switch (alt51) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:688:84: ',' table_permission= tablePermission
                    	    {
                    	    match(input,85,FOLLOW_85_in_revoke2728); if (failed) return retval;
                    	    pushFollow(FOLLOW_tablePermission_in_revoke2732);
                    	    table_permission=tablePermission();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       permissions.add(input.toString(table_permission.start,table_permission.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);

                    match(input,93,FOLLOW_93_in_revoke2739); if (failed) return retval;
                    match(input,109,FOLLOW_109_in_revoke2741); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:688:187: (aname= applicationPrefix )?
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==ObjectName) ) {
                        int LA52_1 = input.LA(2);

                        if ( (LA52_1==77) ) {
                            alt52=1;
                        }
                    }
                    else if ( ((LA52_0>=10 && LA52_0<=66)) ) {
                        int LA52_2 = input.LA(2);

                        if ( (LA52_2==77) ) {
                            alt52=1;
                        }
                    }
                    switch (alt52) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: aname= applicationPrefix
                            {
                            pushFollow(FOLLOW_applicationPrefix_in_revoke2745);
                            aname=applicationPrefix();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_objectName_in_revoke2750);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,113,FOLLOW_113_in_revoke2752); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2756);
                    rn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 7 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:689:5: fs_permission= formStatusPermission ( ',' fs_permission= formStatusPermission )* 'ON' 'FORM' (aname= applicationPrefix )? fn= objectName ':' fsn= objectName 'FROM' rn= objectName
                    {
                    pushFollow(FOLLOW_formStatusPermission_in_revoke2764);
                    fs_permission=formStatusPermission();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(fs_permission.start,fs_permission.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:689:82: ( ',' fs_permission= formStatusPermission )*
                    loop53:
                    do {
                        int alt53=2;
                        int LA53_0 = input.LA(1);

                        if ( (LA53_0==85) ) {
                            alt53=1;
                        }


                        switch (alt53) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:689:83: ',' fs_permission= formStatusPermission
                    	    {
                    	    match(input,85,FOLLOW_85_in_revoke2769); if (failed) return retval;
                    	    pushFollow(FOLLOW_formStatusPermission_in_revoke2773);
                    	    fs_permission=formStatusPermission();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       permissions.add(input.toString(fs_permission.start,fs_permission.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop53;
                        }
                    } while (true);

                    match(input,93,FOLLOW_93_in_revoke2780); if (failed) return retval;
                    match(input,110,FOLLOW_110_in_revoke2782); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:689:184: (aname= applicationPrefix )?
                    int alt54=2;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==ObjectName) ) {
                        int LA54_1 = input.LA(2);

                        if ( (LA54_1==77) ) {
                            alt54=1;
                        }
                    }
                    else if ( ((LA54_0>=10 && LA54_0<=66)) ) {
                        int LA54_2 = input.LA(2);

                        if ( (LA54_2==77) ) {
                            alt54=1;
                        }
                    }
                    switch (alt54) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: aname= applicationPrefix
                            {
                            pushFollow(FOLLOW_applicationPrefix_in_revoke2786);
                            aname=applicationPrefix();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_objectName_in_revoke2791);
                    fn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,74,FOLLOW_74_in_revoke2793); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2797);
                    fsn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,113,FOLLOW_113_in_revoke2799); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2803);
                    rn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 8 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:690:5: procedure_permission= procedurePermission ( ',' procedure_permission= procedurePermission )* 'ON' 'PROCEDURE' (aname= applicationPrefix )? pn= objectName 'FROM' rn= objectName
                    {
                    pushFollow(FOLLOW_procedurePermission_in_revoke2811);
                    procedure_permission=procedurePermission();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       permissions.add(input.toString(procedure_permission.start,procedure_permission.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:690:95: ( ',' procedure_permission= procedurePermission )*
                    loop55:
                    do {
                        int alt55=2;
                        int LA55_0 = input.LA(1);

                        if ( (LA55_0==85) ) {
                            alt55=1;
                        }


                        switch (alt55) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:690:96: ',' procedure_permission= procedurePermission
                    	    {
                    	    match(input,85,FOLLOW_85_in_revoke2816); if (failed) return retval;
                    	    pushFollow(FOLLOW_procedurePermission_in_revoke2820);
                    	    procedure_permission=procedurePermission();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       permissions.add(input.toString(procedure_permission.start,procedure_permission.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop55;
                        }
                    } while (true);

                    match(input,93,FOLLOW_93_in_revoke2827); if (failed) return retval;
                    match(input,111,FOLLOW_111_in_revoke2829); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:690:215: (aname= applicationPrefix )?
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==ObjectName) ) {
                        int LA56_1 = input.LA(2);

                        if ( (LA56_1==77) ) {
                            alt56=1;
                        }
                    }
                    else if ( ((LA56_0>=10 && LA56_0<=66)) ) {
                        int LA56_2 = input.LA(2);

                        if ( (LA56_2==77) ) {
                            alt56=1;
                        }
                    }
                    switch (alt56) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: aname= applicationPrefix
                            {
                            pushFollow(FOLLOW_applicationPrefix_in_revoke2833);
                            aname=applicationPrefix();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_objectName_in_revoke2838);
                    pn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,113,FOLLOW_113_in_revoke2840); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_revoke2844);
                    rn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			if (sp != null) {
              				retval.response = server.revokeServerPermissions(sessionKey, permissions, input.toString(user.start,user.stop));
              			} else if (ap != null) {
              				retval.response = server.revokeApplicationPermissions(sessionKey, permissions, input.toString(an.start,an.stop), (env == null ? null : input.toString(env.start,env.stop)), (gn == null ? null : input.toString(gn.start,gn.stop)), input.toString(user.start,user.stop));
              			} else if (group_name != null) {
              				retval.response = server.revokeApplicationFromGroup(sessionKey, input.toString(an.start,an.stop), input.toString(group_name.start,group_name.stop));
              			} else if (assigned_role != null) {
              				retval.response = server.revokeRoleFromUser(sessionKey, input.toString(assigned_role.start,assigned_role.stop), input.toString(an.start,an.stop), input.toString(env.start,env.stop), (gn == null ? null : input.toString(gn.start,gn.stop)), input.toString(user.start,user.stop));
              			} else if (permission != null ) {
              				CodaResponse resp = server.revokePermissionsFromRole (sessionKey, this.getDatabase(), permissions , an != null ? input.toString(an.start,an.stop) : null, input.toString(rn.start,rn.stop));
              				if (!resp.getError()) {
              					logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? input.toString(an.start,an.stop) : null, null);
              				}
              				retval.response = resp;
              			} else if (table_permission != null ) {
              				CodaResponse resp = server.revokeTablePermissionsFromRole (sessionKey, this.getDatabase(), permissions , aname != null ? aname.applicationName : null, input.toString(tn.start,tn.stop), input.toString(rn.start,rn.stop));
              				if (!resp.getError()) {
              					logTransaction(input.toString(retval.start,input.LT(-1)), aname != null ? aname.applicationName : null, null);
              				}
              				retval.response = resp;
              			} else if (fs_permission != null ) {
              				CodaResponse resp = server.revokeFormStatusPermissionsFromRole (sessionKey, this.getDatabase(), permissions , aname != null ? aname.applicationName : null, input.toString(fn.start,fn.stop), input.toString(fsn.start,fsn.stop), input.toString(rn.start,rn.stop));
              				if (!resp.getError()) {
              					logTransaction(input.toString(retval.start,input.LT(-1)), aname != null ? aname.applicationName : null, null);
              				}
              				retval.response = resp;
              			} else if (procedure_permission != null ) {
              				CodaResponse resp = server.revokeProcedurePermissionsFromRole (sessionKey, this.getDatabase(), permissions , aname != null ? aname.applicationName : null, input.toString(pn.start,pn.stop), input.toString(rn.start,rn.stop));
              				if (!resp.getError()) {
              					logTransaction(input.toString(retval.start,input.LT(-1)), aname != null ? aname.applicationName : null, null);
              				}
              				retval.response = resp;
              			}
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 36, revoke_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end revoke

    public static class createRole_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createRole
    // /Users/michaelarace/CodaServer_Src/Coda.g:728:1: createRole returns [CodaResponse response] : 'CREATE' 'ROLE' rn= objectName (da= displayedAs )? (an= inApplication )? ;
    public final createRole_return createRole() throws RecognitionException {
        createRole_return retval = new createRole_return();
        retval.start = input.LT(1);
        int createRole_StartIndex = input.index();
        objectName_return rn = null;

        displayedAs_return da = null;

        inApplication_return an = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 37) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:729:2: ( 'CREATE' 'ROLE' rn= objectName (da= displayedAs )? (an= inApplication )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:729:4: 'CREATE' 'ROLE' rn= objectName (da= displayedAs )? (an= inApplication )?
            {
            match(input,82,FOLLOW_82_in_createRole2868); if (failed) return retval;
            match(input,108,FOLLOW_108_in_createRole2870); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createRole2874);
            rn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:729:36: (da= displayedAs )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==163) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: da= displayedAs
                    {
                    pushFollow(FOLLOW_displayedAs_in_createRole2878);
                    da=displayedAs();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:729:52: (an= inApplication )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==78) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= inApplication
                    {
                    pushFollow(FOLLOW_inApplication_in_createRole2883);
                    an=inApplication();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			CodaResponse resp = server.createRole (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(rn.start,rn.stop), da != null ? da.displayName : null);
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, null);
              			}
              			retval.response =  resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 37, createRole_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createRole

    public static class alterRole_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alterRole
    // /Users/michaelarace/CodaServer_Src/Coda.g:739:1: alterRole returns [CodaResponse response] : 'ALTER' 'ROLE' (an= applicationPrefix )? rn= objectName (rnt= renameTo | da= setDisplay ) ;
    public final alterRole_return alterRole() throws RecognitionException {
        alterRole_return retval = new alterRole_return();
        retval.start = input.LT(1);
        int alterRole_StartIndex = input.index();
        applicationPrefix_return an = null;

        objectName_return rn = null;

        renameTo_return rnt = null;

        setDisplay_return da = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 38) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:740:2: ( 'ALTER' 'ROLE' (an= applicationPrefix )? rn= objectName (rnt= renameTo | da= setDisplay ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:740:4: 'ALTER' 'ROLE' (an= applicationPrefix )? rn= objectName (rnt= renameTo | da= setDisplay )
            {
            match(input,90,FOLLOW_90_in_alterRole2904); if (failed) return retval;
            match(input,108,FOLLOW_108_in_alterRole2906); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:740:21: (an= applicationPrefix )?
            int alt60=2;
            int LA60_0 = input.LA(1);

            if ( (LA60_0==ObjectName) ) {
                int LA60_1 = input.LA(2);

                if ( (LA60_1==77) ) {
                    alt60=1;
                }
            }
            else if ( ((LA60_0>=10 && LA60_0<=66)) ) {
                int LA60_2 = input.LA(2);

                if ( (LA60_2==77) ) {
                    alt60=1;
                }
            }
            switch (alt60) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_alterRole2910);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_alterRole2915);
            rn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:741:2: (rnt= renameTo | da= setDisplay )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==160) ) {
                alt61=1;
            }
            else if ( (LA61_0==81) ) {
                alt61=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("741:2: (rnt= renameTo | da= setDisplay )", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:742:3: rnt= renameTo
                    {
                    pushFollow(FOLLOW_renameTo_in_alterRole2926);
                    rnt=renameTo();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:743:5: da= setDisplay
                    {
                    pushFollow(FOLLOW_setDisplay_in_alterRole2935);
                    da=setDisplay();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			int operation = 1;
              			if (rnt.newName != null) {
              				operation = 2;
              			}
              		
              			CodaResponse resp = server.alterRole (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(rn.start,rn.stop), operation, rnt != null ? rnt.newName : null, da != null ? da.displayName : null);
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, null);
              			}
              			retval.response =  resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 38, alterRole_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alterRole

    public static class dropRole_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropRole
    // /Users/michaelarace/CodaServer_Src/Coda.g:759:1: dropRole returns [CodaResponse response] : 'DROP' 'ROLE' (an= applicationPrefix )? rn= objectName ;
    public final dropRole_return dropRole() throws RecognitionException {
        dropRole_return retval = new dropRole_return();
        retval.start = input.LT(1);
        int dropRole_StartIndex = input.index();
        applicationPrefix_return an = null;

        objectName_return rn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 39) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:760:2: ( 'DROP' 'ROLE' (an= applicationPrefix )? rn= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:760:4: 'DROP' 'ROLE' (an= applicationPrefix )? rn= objectName
            {
            match(input,92,FOLLOW_92_in_dropRole2959); if (failed) return retval;
            match(input,108,FOLLOW_108_in_dropRole2961); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:760:20: (an= applicationPrefix )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==ObjectName) ) {
                int LA62_1 = input.LA(2);

                if ( (LA62_1==77) ) {
                    alt62=1;
                }
            }
            else if ( ((LA62_0>=10 && LA62_0<=66)) ) {
                int LA62_2 = input.LA(2);

                if ( (LA62_2==77) ) {
                    alt62=1;
                }
            }
            switch (alt62) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_dropRole2965);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_dropRole2970);
            rn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			CodaResponse resp = server.dropRole (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(rn.start,rn.stop));
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, null);
              			}
              			retval.response =  resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 39, dropRole_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropRole

    public static class createPermission_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createPermission
    // /Users/michaelarace/CodaServer_Src/Coda.g:770:1: createPermission returns [CodaResponse response] : 'CREATE' 'PERMISSION' pn= objectName (da= displayedAs )? (an= inApplication )? ;
    public final createPermission_return createPermission() throws RecognitionException {
        createPermission_return retval = new createPermission_return();
        retval.start = input.LT(1);
        int createPermission_StartIndex = input.index();
        objectName_return pn = null;

        displayedAs_return da = null;

        inApplication_return an = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 40) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:771:2: ( 'CREATE' 'PERMISSION' pn= objectName (da= displayedAs )? (an= inApplication )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:771:4: 'CREATE' 'PERMISSION' pn= objectName (da= displayedAs )? (an= inApplication )?
            {
            match(input,82,FOLLOW_82_in_createPermission2989); if (failed) return retval;
            match(input,114,FOLLOW_114_in_createPermission2991); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createPermission2995);
            pn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:771:42: (da= displayedAs )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==163) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: da= displayedAs
                    {
                    pushFollow(FOLLOW_displayedAs_in_createPermission2999);
                    da=displayedAs();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:771:58: (an= inApplication )?
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==78) ) {
                alt64=1;
            }
            switch (alt64) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= inApplication
                    {
                    pushFollow(FOLLOW_inApplication_in_createPermission3004);
                    an=inApplication();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			CodaResponse resp = server.createPermission (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(pn.start,pn.stop), da != null ? da.displayName : null);
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, null);
              			}
              			retval.response =  resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 40, createPermission_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createPermission

    public static class alterPermission_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alterPermission
    // /Users/michaelarace/CodaServer_Src/Coda.g:781:1: alterPermission returns [CodaResponse response] : 'ALTER' 'PERMISSION' (an= applicationPrefix )? pn= objectName (rnt= renameTo | da= setDisplay ) ;
    public final alterPermission_return alterPermission() throws RecognitionException {
        alterPermission_return retval = new alterPermission_return();
        retval.start = input.LT(1);
        int alterPermission_StartIndex = input.index();
        applicationPrefix_return an = null;

        objectName_return pn = null;

        renameTo_return rnt = null;

        setDisplay_return da = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 41) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:782:2: ( 'ALTER' 'PERMISSION' (an= applicationPrefix )? pn= objectName (rnt= renameTo | da= setDisplay ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:782:4: 'ALTER' 'PERMISSION' (an= applicationPrefix )? pn= objectName (rnt= renameTo | da= setDisplay )
            {
            match(input,90,FOLLOW_90_in_alterPermission3025); if (failed) return retval;
            match(input,114,FOLLOW_114_in_alterPermission3027); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:782:27: (an= applicationPrefix )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==ObjectName) ) {
                int LA65_1 = input.LA(2);

                if ( (LA65_1==77) ) {
                    alt65=1;
                }
            }
            else if ( ((LA65_0>=10 && LA65_0<=66)) ) {
                int LA65_2 = input.LA(2);

                if ( (LA65_2==77) ) {
                    alt65=1;
                }
            }
            switch (alt65) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_alterPermission3031);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_alterPermission3036);
            pn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:783:2: (rnt= renameTo | da= setDisplay )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==160) ) {
                alt66=1;
            }
            else if ( (LA66_0==81) ) {
                alt66=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("783:2: (rnt= renameTo | da= setDisplay )", 66, 0, input);

                throw nvae;
            }
            switch (alt66) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:784:3: rnt= renameTo
                    {
                    pushFollow(FOLLOW_renameTo_in_alterPermission3047);
                    rnt=renameTo();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:785:5: da= setDisplay
                    {
                    pushFollow(FOLLOW_setDisplay_in_alterPermission3056);
                    da=setDisplay();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			int operation = 1;
              			if (rnt != null) {
              				operation = 2;
              			}
              		
              			CodaResponse resp = server.alterPermission (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(pn.start,pn.stop), operation, rnt != null ? rnt.newName : null, da != null ? da.displayName : null);
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, null);
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 41, alterPermission_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alterPermission

    public static class dropPermission_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropPermission
    // /Users/michaelarace/CodaServer_Src/Coda.g:801:1: dropPermission returns [CodaResponse response] : 'DROP' 'PERMISSION' (an= applicationPrefix )? pn= objectName ;
    public final dropPermission_return dropPermission() throws RecognitionException {
        dropPermission_return retval = new dropPermission_return();
        retval.start = input.LT(1);
        int dropPermission_StartIndex = input.index();
        applicationPrefix_return an = null;

        objectName_return pn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 42) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:802:2: ( 'DROP' 'PERMISSION' (an= applicationPrefix )? pn= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:802:4: 'DROP' 'PERMISSION' (an= applicationPrefix )? pn= objectName
            {
            match(input,92,FOLLOW_92_in_dropPermission3080); if (failed) return retval;
            match(input,114,FOLLOW_114_in_dropPermission3082); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:802:26: (an= applicationPrefix )?
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( (LA67_0==ObjectName) ) {
                int LA67_1 = input.LA(2);

                if ( (LA67_1==77) ) {
                    alt67=1;
                }
            }
            else if ( ((LA67_0>=10 && LA67_0<=66)) ) {
                int LA67_2 = input.LA(2);

                if ( (LA67_2==77) ) {
                    alt67=1;
                }
            }
            switch (alt67) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_dropPermission3086);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_dropPermission3091);
            pn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			CodaResponse resp = server.dropPermission (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(pn.start,pn.stop));
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, null);
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 42, dropPermission_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropPermission

    public static class createTable_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createTable
    // /Users/michaelarace/CodaServer_Src/Coda.g:812:1: createTable returns [CodaResponse response] : 'CREATE' (rf= 'REF' | gf= 'GROUP' )? ( 'TABLE' tn= objectName | 'SUBTABLE' tn= objectName 'OF' ptn= objectName ) (da= displayedAs )? (an= inApplication )? ( 'WITH' 'SOFT' sdf= 'DELETE' )? '(' tfd= tableFieldDefinitionWithIdentity ( ',' tfd= tableFieldDefinitionWithIdentity )* ')' ;
    public final createTable_return createTable() throws RecognitionException {
        createTable_return retval = new createTable_return();
        retval.start = input.LT(1);
        int createTable_StartIndex = input.index();
        Token rf=null;
        Token gf=null;
        Token sdf=null;
        objectName_return tn = null;

        objectName_return ptn = null;

        displayedAs_return da = null;

        inApplication_return an = null;

        tableFieldDefinitionWithIdentity_return tfd = null;



        	Vector<TableFieldDefinition> fields = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 43) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:816:2: ( 'CREATE' (rf= 'REF' | gf= 'GROUP' )? ( 'TABLE' tn= objectName | 'SUBTABLE' tn= objectName 'OF' ptn= objectName ) (da= displayedAs )? (an= inApplication )? ( 'WITH' 'SOFT' sdf= 'DELETE' )? '(' tfd= tableFieldDefinitionWithIdentity ( ',' tfd= tableFieldDefinitionWithIdentity )* ')' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:816:4: 'CREATE' (rf= 'REF' | gf= 'GROUP' )? ( 'TABLE' tn= objectName | 'SUBTABLE' tn= objectName 'OF' ptn= objectName ) (da= displayedAs )? (an= inApplication )? ( 'WITH' 'SOFT' sdf= 'DELETE' )? '(' tfd= tableFieldDefinitionWithIdentity ( ',' tfd= tableFieldDefinitionWithIdentity )* ')'
            {
            match(input,82,FOLLOW_82_in_createTable3116); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:816:13: (rf= 'REF' | gf= 'GROUP' )?
            int alt68=3;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==115) ) {
                alt68=1;
            }
            else if ( (LA68_0==79) ) {
                alt68=2;
            }
            switch (alt68) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:816:14: rf= 'REF'
                    {
                    rf=(Token)input.LT(1);
                    match(input,115,FOLLOW_115_in_createTable3121); if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:816:25: gf= 'GROUP'
                    {
                    gf=(Token)input.LT(1);
                    match(input,79,FOLLOW_79_in_createTable3127); if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:816:39: ( 'TABLE' tn= objectName | 'SUBTABLE' tn= objectName 'OF' ptn= objectName )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==109) ) {
                alt69=1;
            }
            else if ( (LA69_0==116) ) {
                alt69=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("816:39: ( 'TABLE' tn= objectName | 'SUBTABLE' tn= objectName 'OF' ptn= objectName )", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:816:40: 'TABLE' tn= objectName
                    {
                    match(input,109,FOLLOW_109_in_createTable3133); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_createTable3137);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:816:64: 'SUBTABLE' tn= objectName 'OF' ptn= objectName
                    {
                    match(input,116,FOLLOW_116_in_createTable3141); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_createTable3145);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,117,FOLLOW_117_in_createTable3147); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_createTable3151);
                    ptn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:816:112: (da= displayedAs )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==163) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: da= displayedAs
                    {
                    pushFollow(FOLLOW_displayedAs_in_createTable3156);
                    da=displayedAs();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:816:128: (an= inApplication )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==78) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= inApplication
                    {
                    pushFollow(FOLLOW_inApplication_in_createTable3161);
                    an=inApplication();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:816:144: ( 'WITH' 'SOFT' sdf= 'DELETE' )?
            int alt72=2;
            int LA72_0 = input.LA(1);

            if ( (LA72_0==87) ) {
                alt72=1;
            }
            switch (alt72) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:816:145: 'WITH' 'SOFT' sdf= 'DELETE'
                    {
                    match(input,87,FOLLOW_87_in_createTable3165); if (failed) return retval;
                    match(input,118,FOLLOW_118_in_createTable3167); if (failed) return retval;
                    sdf=(Token)input.LT(1);
                    match(input,71,FOLLOW_71_in_createTable3171); if (failed) return retval;

                    }
                    break;

            }

            match(input,84,FOLLOW_84_in_createTable3178); if (failed) return retval;
            pushFollow(FOLLOW_tableFieldDefinitionWithIdentity_in_createTable3182);
            tfd=tableFieldDefinitionWithIdentity();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               fields.add(tfd.def); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:817:69: ( ',' tfd= tableFieldDefinitionWithIdentity )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==85) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:817:70: ',' tfd= tableFieldDefinitionWithIdentity
            	    {
            	    match(input,85,FOLLOW_85_in_createTable3187); if (failed) return retval;
            	    pushFollow(FOLLOW_tableFieldDefinitionWithIdentity_in_createTable3191);
            	    tfd=tableFieldDefinitionWithIdentity();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       fields.add(tfd.def); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            match(input,86,FOLLOW_86_in_createTable3198); if (failed) return retval;
            if ( backtracking==0 ) {

              			CodaResponse resp = server.createTable (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), da != null ? da.displayName : null, (gf == null ? false : true), (rf == null ? false : true), ptn != null ? input.toString(ptn.start,ptn.stop) : null, (sdf == null ? false : true), fields, this.database == null);
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop));
              			}

              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 43, createTable_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createTable

    public static class alterTable_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alterTable
    // /Users/michaelarace/CodaServer_Src/Coda.g:828:1: alterTable returns [CodaResponse response] : 'ALTER' 'TABLE' (an= applicationPrefix )? tn= objectName (rnt= renameTo | dn= setDisplay | 'ADD' 'COLUMN' nc= tableFieldDefinition | 'ALTER' 'COLUMN' cn= objectName 'SET' cd= tableFieldDefinition | 'DROP' 'COLUMN' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' ) ;
    public final alterTable_return alterTable() throws RecognitionException {
        alterTable_return retval = new alterTable_return();
        retval.start = input.LT(1);
        int alterTable_StartIndex = input.index();
        applicationPrefix_return an = null;

        objectName_return tn = null;

        renameTo_return rnt = null;

        setDisplay_return dn = null;

        tableFieldDefinition_return nc = null;

        objectName_return cn = null;

        tableFieldDefinition_return cd = null;

        objectName_return drop_n = null;

        objectName_return icn = null;



        	Vector<String> fields = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 44) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:832:2: ( 'ALTER' 'TABLE' (an= applicationPrefix )? tn= objectName (rnt= renameTo | dn= setDisplay | 'ADD' 'COLUMN' nc= tableFieldDefinition | 'ALTER' 'COLUMN' cn= objectName 'SET' cd= tableFieldDefinition | 'DROP' 'COLUMN' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:832:4: 'ALTER' 'TABLE' (an= applicationPrefix )? tn= objectName (rnt= renameTo | dn= setDisplay | 'ADD' 'COLUMN' nc= tableFieldDefinition | 'ALTER' 'COLUMN' cn= objectName 'SET' cd= tableFieldDefinition | 'DROP' 'COLUMN' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' )
            {
            match(input,90,FOLLOW_90_in_alterTable3224); if (failed) return retval;
            match(input,109,FOLLOW_109_in_alterTable3226); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:832:22: (an= applicationPrefix )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( (LA74_0==ObjectName) ) {
                int LA74_1 = input.LA(2);

                if ( (LA74_1==77) ) {
                    alt74=1;
                }
            }
            else if ( ((LA74_0>=10 && LA74_0<=66)) ) {
                int LA74_2 = input.LA(2);

                if ( (LA74_2==77) ) {
                    alt74=1;
                }
            }
            switch (alt74) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_alterTable3230);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_alterTable3235);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:833:2: (rnt= renameTo | dn= setDisplay | 'ADD' 'COLUMN' nc= tableFieldDefinition | 'ALTER' 'COLUMN' cn= objectName 'SET' cd= tableFieldDefinition | 'DROP' 'COLUMN' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' )
            int alt76=6;
            switch ( input.LA(1) ) {
            case 160:
                {
                alt76=1;
                }
                break;
            case 81:
                {
                int LA76_2 = input.LA(2);

                if ( (LA76_2==120) ) {
                    alt76=6;
                }
                else if ( (LA76_2==159) ) {
                    alt76=2;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("833:2: (rnt= renameTo | dn= setDisplay | 'ADD' 'COLUMN' nc= tableFieldDefinition | 'ALTER' 'COLUMN' cn= objectName 'SET' cd= tableFieldDefinition | 'DROP' 'COLUMN' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' )", 76, 2, input);

                    throw nvae;
                }
                }
                break;
            case 100:
                {
                alt76=3;
                }
                break;
            case 90:
                {
                alt76=4;
                }
                break;
            case 92:
                {
                alt76=5;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("833:2: (rnt= renameTo | dn= setDisplay | 'ADD' 'COLUMN' nc= tableFieldDefinition | 'ALTER' 'COLUMN' cn= objectName 'SET' cd= tableFieldDefinition | 'DROP' 'COLUMN' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' )", 76, 0, input);

                throw nvae;
            }

            switch (alt76) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:834:3: rnt= renameTo
                    {
                    pushFollow(FOLLOW_renameTo_in_alterTable3245);
                    rnt=renameTo();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:835:4: dn= setDisplay
                    {
                    pushFollow(FOLLOW_setDisplay_in_alterTable3252);
                    dn=setDisplay();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:836:4: 'ADD' 'COLUMN' nc= tableFieldDefinition
                    {
                    match(input,100,FOLLOW_100_in_alterTable3257); if (failed) return retval;
                    match(input,119,FOLLOW_119_in_alterTable3259); if (failed) return retval;
                    pushFollow(FOLLOW_tableFieldDefinition_in_alterTable3263);
                    nc=tableFieldDefinition();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:837:4: 'ALTER' 'COLUMN' cn= objectName 'SET' cd= tableFieldDefinition
                    {
                    match(input,90,FOLLOW_90_in_alterTable3268); if (failed) return retval;
                    match(input,119,FOLLOW_119_in_alterTable3270); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_alterTable3274);
                    cn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,81,FOLLOW_81_in_alterTable3276); if (failed) return retval;
                    pushFollow(FOLLOW_tableFieldDefinition_in_alterTable3280);
                    cd=tableFieldDefinition();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 5 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:838:4: 'DROP' 'COLUMN' drop_n= objectName
                    {
                    match(input,92,FOLLOW_92_in_alterTable3285); if (failed) return retval;
                    match(input,119,FOLLOW_119_in_alterTable3287); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_alterTable3291);
                    drop_n=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 6 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:839:4: 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')'
                    {
                    match(input,81,FOLLOW_81_in_alterTable3296); if (failed) return retval;
                    match(input,120,FOLLOW_120_in_alterTable3298); if (failed) return retval;
                    match(input,84,FOLLOW_84_in_alterTable3300); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_alterTable3304);
                    icn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       fields.add(input.toString(icn.start,icn.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:839:67: ( ',' icn= objectName )*
                    loop75:
                    do {
                        int alt75=2;
                        int LA75_0 = input.LA(1);

                        if ( (LA75_0==85) ) {
                            alt75=1;
                        }


                        switch (alt75) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:839:68: ',' icn= objectName
                    	    {
                    	    match(input,85,FOLLOW_85_in_alterTable3309); if (failed) return retval;
                    	    pushFollow(FOLLOW_objectName_in_alterTable3313);
                    	    icn=objectName();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       fields.add(input.toString(icn.start,icn.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop75;
                        }
                    } while (true);

                    match(input,86,FOLLOW_86_in_alterTable3320); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			CodaResponse resp = new CodaResponse(true, null, 8005);
              			if (dn != null) {
              				resp = server.alterTable (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 1, null, dn.displayName, null, null, null, this.database == null);	
              			} else if (rnt != null) {
              				resp = server.alterTable (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 2, rnt.newName, null, null, null, null, this.database == null);	
              			} else if (nc != null) {
              				resp = server.alterTable (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 3, null, null, nc.def, null, null, this.database == null);	
              			} else if (cd != null) {
              				resp = server.alterTable (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 4, null, null, cd.def, input.toString(cn.start,cn.stop), null, this.database == null);	
              			} else if (drop_n != null) {
              				resp = server.alterTable (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 5, null, null, null, input.toString(drop_n.start,drop_n.stop), null, this.database == null);	
              			} else if (fields.size() != 0) {
              				resp = server.alterTable (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 6, null, null, null, null, fields, this.database == null);	
              			}	
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop));
              			}
              			retval.response =  resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 44, alterTable_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alterTable

    public static class dropTable_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropTable
    // /Users/michaelarace/CodaServer_Src/Coda.g:863:1: dropTable returns [CodaResponse response] : 'DROP' 'TABLE' (an= applicationPrefix )? tn= objectName ;
    public final dropTable_return dropTable() throws RecognitionException {
        dropTable_return retval = new dropTable_return();
        retval.start = input.LT(1);
        int dropTable_StartIndex = input.index();
        applicationPrefix_return an = null;

        objectName_return tn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 45) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:864:2: ( 'DROP' 'TABLE' (an= applicationPrefix )? tn= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:864:4: 'DROP' 'TABLE' (an= applicationPrefix )? tn= objectName
            {
            match(input,92,FOLLOW_92_in_dropTable3344); if (failed) return retval;
            match(input,109,FOLLOW_109_in_dropTable3346); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:864:21: (an= applicationPrefix )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==ObjectName) ) {
                int LA77_1 = input.LA(2);

                if ( (LA77_1==77) ) {
                    alt77=1;
                }
            }
            else if ( ((LA77_0>=10 && LA77_0<=66)) ) {
                int LA77_2 = input.LA(2);

                if ( (LA77_2==77) ) {
                    alt77=1;
                }
            }
            switch (alt77) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_dropTable3350);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_dropTable3355);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			boolean refTable = server.isRefTable(an != null ? an.applicationName : server.getSessionApplication(sessionKey), input.toString(tn.start,tn.stop));
              			CodaResponse resp = server.dropTable (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop));
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, refTable);
              			}
              			retval.response =  resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 45, dropTable_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropTable

    public static class createForm_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createForm
    // /Users/michaelarace/CodaServer_Src/Coda.g:875:1: createForm returns [CodaResponse response] : 'CREATE' (gf= 'GROUP' )? ( 'FORM' tn= objectName | 'SUBFORM' tn= objectName 'OF' ptn= objectName ) (da= displayedAs )? (an= inApplication )? '(' tfd= formFieldDefinitionWithIdentity ( ',' tfd= formFieldDefinitionWithIdentity )* ')' 'WITH' 'STATUSES' fsd= formStatusCreationDefinition ( ',' fsd= formStatusCreationDefinition )* ;
    public final createForm_return createForm() throws RecognitionException {
        createForm_return retval = new createForm_return();
        retval.start = input.LT(1);
        int createForm_StartIndex = input.index();
        Token gf=null;
        objectName_return tn = null;

        objectName_return ptn = null;

        displayedAs_return da = null;

        inApplication_return an = null;

        formFieldDefinitionWithIdentity_return tfd = null;

        formStatusCreationDefinition_return fsd = null;



        	Vector<TableFieldDefinition> fields = new Vector();
        	Vector<FormStatusDefinition> statuses = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 46) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:880:2: ( 'CREATE' (gf= 'GROUP' )? ( 'FORM' tn= objectName | 'SUBFORM' tn= objectName 'OF' ptn= objectName ) (da= displayedAs )? (an= inApplication )? '(' tfd= formFieldDefinitionWithIdentity ( ',' tfd= formFieldDefinitionWithIdentity )* ')' 'WITH' 'STATUSES' fsd= formStatusCreationDefinition ( ',' fsd= formStatusCreationDefinition )* )
            // /Users/michaelarace/CodaServer_Src/Coda.g:880:4: 'CREATE' (gf= 'GROUP' )? ( 'FORM' tn= objectName | 'SUBFORM' tn= objectName 'OF' ptn= objectName ) (da= displayedAs )? (an= inApplication )? '(' tfd= formFieldDefinitionWithIdentity ( ',' tfd= formFieldDefinitionWithIdentity )* ')' 'WITH' 'STATUSES' fsd= formStatusCreationDefinition ( ',' fsd= formStatusCreationDefinition )*
            {
            match(input,82,FOLLOW_82_in_createForm3379); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:880:13: (gf= 'GROUP' )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==79) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:880:15: gf= 'GROUP'
                    {
                    gf=(Token)input.LT(1);
                    match(input,79,FOLLOW_79_in_createForm3385); if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:880:29: ( 'FORM' tn= objectName | 'SUBFORM' tn= objectName 'OF' ptn= objectName )
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==110) ) {
                alt79=1;
            }
            else if ( (LA79_0==121) ) {
                alt79=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("880:29: ( 'FORM' tn= objectName | 'SUBFORM' tn= objectName 'OF' ptn= objectName )", 79, 0, input);

                throw nvae;
            }
            switch (alt79) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:880:30: 'FORM' tn= objectName
                    {
                    match(input,110,FOLLOW_110_in_createForm3391); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_createForm3395);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:880:53: 'SUBFORM' tn= objectName 'OF' ptn= objectName
                    {
                    match(input,121,FOLLOW_121_in_createForm3399); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_createForm3403);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,117,FOLLOW_117_in_createForm3405); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_createForm3409);
                    ptn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:880:102: (da= displayedAs )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==163) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: da= displayedAs
                    {
                    pushFollow(FOLLOW_displayedAs_in_createForm3416);
                    da=displayedAs();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:880:118: (an= inApplication )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==78) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= inApplication
                    {
                    pushFollow(FOLLOW_inApplication_in_createForm3421);
                    an=inApplication();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            match(input,84,FOLLOW_84_in_createForm3426); if (failed) return retval;
            pushFollow(FOLLOW_formFieldDefinitionWithIdentity_in_createForm3430);
            tfd=formFieldDefinitionWithIdentity();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               fields.add(tfd.def); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:881:68: ( ',' tfd= formFieldDefinitionWithIdentity )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==85) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:881:69: ',' tfd= formFieldDefinitionWithIdentity
            	    {
            	    match(input,85,FOLLOW_85_in_createForm3435); if (failed) return retval;
            	    pushFollow(FOLLOW_formFieldDefinitionWithIdentity_in_createForm3439);
            	    tfd=formFieldDefinitionWithIdentity();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       fields.add(tfd.def); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            match(input,86,FOLLOW_86_in_createForm3446); if (failed) return retval;
            match(input,87,FOLLOW_87_in_createForm3451); if (failed) return retval;
            match(input,59,FOLLOW_59_in_createForm3453); if (failed) return retval;
            pushFollow(FOLLOW_formStatusCreationDefinition_in_createForm3457);
            fsd=formStatusCreationDefinition();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               statuses.add(fsd.def); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:882:81: ( ',' fsd= formStatusCreationDefinition )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==85) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:882:82: ',' fsd= formStatusCreationDefinition
            	    {
            	    match(input,85,FOLLOW_85_in_createForm3462); if (failed) return retval;
            	    pushFollow(FOLLOW_formStatusCreationDefinition_in_createForm3466);
            	    fsd=formStatusCreationDefinition();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       statuses.add(fsd.def); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            if ( backtracking==0 ) {

              			CodaResponse resp = server.createForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), da != null ? da.displayName : null, (gf == null ? false : true), ptn != null ? input.toString(ptn.start,ptn.stop) : null, fields, statuses, this.database == null);
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop));
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 46, createForm_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createForm

    public static class alterForm_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alterForm
    // /Users/michaelarace/CodaServer_Src/Coda.g:892:1: alterForm returns [CodaResponse response] : 'ALTER' 'FORM' (an= applicationPrefix )? tn= objectName (rnt= renameTo | dn= setDisplay | 'ADD' 'FIELD' nc= formFieldDefinition | 'ALTER' 'FIELD' cn= objectName 'SET' cd= formFieldDefinition | 'DROP' 'FIELD' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' | 'ADD' 'STATUS' nfs= formStatusCreationDefinition | 'ALTER' 'STATUS' fsn= objectName 'SET' fsd= formStatusCreationDefinition | 'DROP' 'STATUS' drop_fsn= objectName | 'SET' 'STATUS' 'ORDER' fslt= formStatusDefinition ( ',' fslt= formStatusDefinition )* ) ;
    public final alterForm_return alterForm() throws RecognitionException {
        alterForm_return retval = new alterForm_return();
        retval.start = input.LT(1);
        int alterForm_StartIndex = input.index();
        applicationPrefix_return an = null;

        objectName_return tn = null;

        renameTo_return rnt = null;

        setDisplay_return dn = null;

        formFieldDefinition_return nc = null;

        objectName_return cn = null;

        formFieldDefinition_return cd = null;

        objectName_return drop_n = null;

        objectName_return icn = null;

        formStatusCreationDefinition_return nfs = null;

        objectName_return fsn = null;

        formStatusCreationDefinition_return fsd = null;

        objectName_return drop_fsn = null;

        formStatusDefinition_return fslt = null;



        	Vector<String> fields = new Vector();
        	Vector<FormStatusLeadsTo> statuses = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 47) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:897:2: ( 'ALTER' 'FORM' (an= applicationPrefix )? tn= objectName (rnt= renameTo | dn= setDisplay | 'ADD' 'FIELD' nc= formFieldDefinition | 'ALTER' 'FIELD' cn= objectName 'SET' cd= formFieldDefinition | 'DROP' 'FIELD' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' | 'ADD' 'STATUS' nfs= formStatusCreationDefinition | 'ALTER' 'STATUS' fsn= objectName 'SET' fsd= formStatusCreationDefinition | 'DROP' 'STATUS' drop_fsn= objectName | 'SET' 'STATUS' 'ORDER' fslt= formStatusDefinition ( ',' fslt= formStatusDefinition )* ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:897:4: 'ALTER' 'FORM' (an= applicationPrefix )? tn= objectName (rnt= renameTo | dn= setDisplay | 'ADD' 'FIELD' nc= formFieldDefinition | 'ALTER' 'FIELD' cn= objectName 'SET' cd= formFieldDefinition | 'DROP' 'FIELD' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' | 'ADD' 'STATUS' nfs= formStatusCreationDefinition | 'ALTER' 'STATUS' fsn= objectName 'SET' fsd= formStatusCreationDefinition | 'DROP' 'STATUS' drop_fsn= objectName | 'SET' 'STATUS' 'ORDER' fslt= formStatusDefinition ( ',' fslt= formStatusDefinition )* )
            {
            match(input,90,FOLLOW_90_in_alterForm3495); if (failed) return retval;
            match(input,110,FOLLOW_110_in_alterForm3497); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:897:21: (an= applicationPrefix )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==ObjectName) ) {
                int LA84_1 = input.LA(2);

                if ( (LA84_1==77) ) {
                    alt84=1;
                }
            }
            else if ( ((LA84_0>=10 && LA84_0<=66)) ) {
                int LA84_2 = input.LA(2);

                if ( (LA84_2==77) ) {
                    alt84=1;
                }
            }
            switch (alt84) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_alterForm3501);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_alterForm3506);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:898:2: (rnt= renameTo | dn= setDisplay | 'ADD' 'FIELD' nc= formFieldDefinition | 'ALTER' 'FIELD' cn= objectName 'SET' cd= formFieldDefinition | 'DROP' 'FIELD' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' | 'ADD' 'STATUS' nfs= formStatusCreationDefinition | 'ALTER' 'STATUS' fsn= objectName 'SET' fsd= formStatusCreationDefinition | 'DROP' 'STATUS' drop_fsn= objectName | 'SET' 'STATUS' 'ORDER' fslt= formStatusDefinition ( ',' fslt= formStatusDefinition )* )
            int alt87=10;
            switch ( input.LA(1) ) {
            case 160:
                {
                alt87=1;
                }
                break;
            case 81:
                {
                switch ( input.LA(2) ) {
                case 120:
                    {
                    alt87=6;
                    }
                    break;
                case 159:
                    {
                    alt87=2;
                    }
                    break;
                case 123:
                    {
                    alt87=10;
                    }
                    break;
                default:
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("898:2: (rnt= renameTo | dn= setDisplay | 'ADD' 'FIELD' nc= formFieldDefinition | 'ALTER' 'FIELD' cn= objectName 'SET' cd= formFieldDefinition | 'DROP' 'FIELD' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' | 'ADD' 'STATUS' nfs= formStatusCreationDefinition | 'ALTER' 'STATUS' fsn= objectName 'SET' fsd= formStatusCreationDefinition | 'DROP' 'STATUS' drop_fsn= objectName | 'SET' 'STATUS' 'ORDER' fslt= formStatusDefinition ( ',' fslt= formStatusDefinition )* )", 87, 2, input);

                    throw nvae;
                }

                }
                break;
            case 100:
                {
                int LA87_3 = input.LA(2);

                if ( (LA87_3==123) ) {
                    alt87=7;
                }
                else if ( (LA87_3==122) ) {
                    alt87=3;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("898:2: (rnt= renameTo | dn= setDisplay | 'ADD' 'FIELD' nc= formFieldDefinition | 'ALTER' 'FIELD' cn= objectName 'SET' cd= formFieldDefinition | 'DROP' 'FIELD' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' | 'ADD' 'STATUS' nfs= formStatusCreationDefinition | 'ALTER' 'STATUS' fsn= objectName 'SET' fsd= formStatusCreationDefinition | 'DROP' 'STATUS' drop_fsn= objectName | 'SET' 'STATUS' 'ORDER' fslt= formStatusDefinition ( ',' fslt= formStatusDefinition )* )", 87, 3, input);

                    throw nvae;
                }
                }
                break;
            case 90:
                {
                int LA87_4 = input.LA(2);

                if ( (LA87_4==123) ) {
                    alt87=8;
                }
                else if ( (LA87_4==122) ) {
                    alt87=4;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("898:2: (rnt= renameTo | dn= setDisplay | 'ADD' 'FIELD' nc= formFieldDefinition | 'ALTER' 'FIELD' cn= objectName 'SET' cd= formFieldDefinition | 'DROP' 'FIELD' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' | 'ADD' 'STATUS' nfs= formStatusCreationDefinition | 'ALTER' 'STATUS' fsn= objectName 'SET' fsd= formStatusCreationDefinition | 'DROP' 'STATUS' drop_fsn= objectName | 'SET' 'STATUS' 'ORDER' fslt= formStatusDefinition ( ',' fslt= formStatusDefinition )* )", 87, 4, input);

                    throw nvae;
                }
                }
                break;
            case 92:
                {
                int LA87_5 = input.LA(2);

                if ( (LA87_5==123) ) {
                    alt87=9;
                }
                else if ( (LA87_5==122) ) {
                    alt87=5;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("898:2: (rnt= renameTo | dn= setDisplay | 'ADD' 'FIELD' nc= formFieldDefinition | 'ALTER' 'FIELD' cn= objectName 'SET' cd= formFieldDefinition | 'DROP' 'FIELD' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' | 'ADD' 'STATUS' nfs= formStatusCreationDefinition | 'ALTER' 'STATUS' fsn= objectName 'SET' fsd= formStatusCreationDefinition | 'DROP' 'STATUS' drop_fsn= objectName | 'SET' 'STATUS' 'ORDER' fslt= formStatusDefinition ( ',' fslt= formStatusDefinition )* )", 87, 5, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("898:2: (rnt= renameTo | dn= setDisplay | 'ADD' 'FIELD' nc= formFieldDefinition | 'ALTER' 'FIELD' cn= objectName 'SET' cd= formFieldDefinition | 'DROP' 'FIELD' drop_n= objectName | 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')' | 'ADD' 'STATUS' nfs= formStatusCreationDefinition | 'ALTER' 'STATUS' fsn= objectName 'SET' fsd= formStatusCreationDefinition | 'DROP' 'STATUS' drop_fsn= objectName | 'SET' 'STATUS' 'ORDER' fslt= formStatusDefinition ( ',' fslt= formStatusDefinition )* )", 87, 0, input);

                throw nvae;
            }

            switch (alt87) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:899:3: rnt= renameTo
                    {
                    pushFollow(FOLLOW_renameTo_in_alterForm3515);
                    rnt=renameTo();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:900:4: dn= setDisplay
                    {
                    pushFollow(FOLLOW_setDisplay_in_alterForm3522);
                    dn=setDisplay();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:901:4: 'ADD' 'FIELD' nc= formFieldDefinition
                    {
                    match(input,100,FOLLOW_100_in_alterForm3527); if (failed) return retval;
                    match(input,122,FOLLOW_122_in_alterForm3529); if (failed) return retval;
                    pushFollow(FOLLOW_formFieldDefinition_in_alterForm3533);
                    nc=formFieldDefinition();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:902:4: 'ALTER' 'FIELD' cn= objectName 'SET' cd= formFieldDefinition
                    {
                    match(input,90,FOLLOW_90_in_alterForm3538); if (failed) return retval;
                    match(input,122,FOLLOW_122_in_alterForm3540); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_alterForm3544);
                    cn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,81,FOLLOW_81_in_alterForm3546); if (failed) return retval;
                    pushFollow(FOLLOW_formFieldDefinition_in_alterForm3550);
                    cd=formFieldDefinition();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 5 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:903:4: 'DROP' 'FIELD' drop_n= objectName
                    {
                    match(input,92,FOLLOW_92_in_alterForm3555); if (failed) return retval;
                    match(input,122,FOLLOW_122_in_alterForm3557); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_alterForm3561);
                    drop_n=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 6 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:904:4: 'SET' 'IDENTITY' '(' icn= objectName ( ',' icn= objectName )* ')'
                    {
                    match(input,81,FOLLOW_81_in_alterForm3566); if (failed) return retval;
                    match(input,120,FOLLOW_120_in_alterForm3568); if (failed) return retval;
                    match(input,84,FOLLOW_84_in_alterForm3570); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_alterForm3574);
                    icn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       fields.add(input.toString(icn.start,icn.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:904:67: ( ',' icn= objectName )*
                    loop85:
                    do {
                        int alt85=2;
                        int LA85_0 = input.LA(1);

                        if ( (LA85_0==85) ) {
                            alt85=1;
                        }


                        switch (alt85) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:904:68: ',' icn= objectName
                    	    {
                    	    match(input,85,FOLLOW_85_in_alterForm3579); if (failed) return retval;
                    	    pushFollow(FOLLOW_objectName_in_alterForm3583);
                    	    icn=objectName();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       fields.add(input.toString(icn.start,icn.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop85;
                        }
                    } while (true);

                    match(input,86,FOLLOW_86_in_alterForm3590); if (failed) return retval;

                    }
                    break;
                case 7 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:905:4: 'ADD' 'STATUS' nfs= formStatusCreationDefinition
                    {
                    match(input,100,FOLLOW_100_in_alterForm3595); if (failed) return retval;
                    match(input,123,FOLLOW_123_in_alterForm3597); if (failed) return retval;
                    pushFollow(FOLLOW_formStatusCreationDefinition_in_alterForm3601);
                    nfs=formStatusCreationDefinition();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 8 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:906:4: 'ALTER' 'STATUS' fsn= objectName 'SET' fsd= formStatusCreationDefinition
                    {
                    match(input,90,FOLLOW_90_in_alterForm3606); if (failed) return retval;
                    match(input,123,FOLLOW_123_in_alterForm3608); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_alterForm3612);
                    fsn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,81,FOLLOW_81_in_alterForm3614); if (failed) return retval;
                    pushFollow(FOLLOW_formStatusCreationDefinition_in_alterForm3618);
                    fsd=formStatusCreationDefinition();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 9 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:907:4: 'DROP' 'STATUS' drop_fsn= objectName
                    {
                    match(input,92,FOLLOW_92_in_alterForm3623); if (failed) return retval;
                    match(input,123,FOLLOW_123_in_alterForm3625); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_alterForm3629);
                    drop_fsn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 10 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:908:4: 'SET' 'STATUS' 'ORDER' fslt= formStatusDefinition ( ',' fslt= formStatusDefinition )*
                    {
                    match(input,81,FOLLOW_81_in_alterForm3634); if (failed) return retval;
                    match(input,123,FOLLOW_123_in_alterForm3636); if (failed) return retval;
                    match(input,124,FOLLOW_124_in_alterForm3638); if (failed) return retval;
                    pushFollow(FOLLOW_formStatusDefinition_in_alterForm3642);
                    fslt=formStatusDefinition();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       statuses.add(fslt.status); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:908:85: ( ',' fslt= formStatusDefinition )*
                    loop86:
                    do {
                        int alt86=2;
                        int LA86_0 = input.LA(1);

                        if ( (LA86_0==85) ) {
                            alt86=1;
                        }


                        switch (alt86) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:908:86: ',' fslt= formStatusDefinition
                    	    {
                    	    match(input,85,FOLLOW_85_in_alterForm3647); if (failed) return retval;
                    	    pushFollow(FOLLOW_formStatusDefinition_in_alterForm3651);
                    	    fslt=formStatusDefinition();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       statuses.add(fslt.status); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop86;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( backtracking==0 ) {

              			CodaResponse resp = new CodaResponse(true, null, 8005);
              			if (dn != null) {
              				resp = server.alterForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 1, null, dn.displayName, null, null, null, null,null,null, this.database == null);	
              			} else if (rnt != null) {
              				resp = server.alterForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 2, rnt.newName, null, null, null, null, null,null,null, this.database == null);	
              			} else if (nc != null) {
              				resp = server.alterForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 3, null, null, nc.def, null, null, null,null,null, this.database == null);	
              			} else if (cd != null) {
              				resp = server.alterForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 4, null, null, cd.def, input.toString(cn.start,cn.stop), null, null,null,null, this.database == null);	
              			} else if (drop_n != null) {
              				resp = server.alterForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 5, null, null, null, input.toString(drop_n.start,drop_n.stop), null, null,null,null, this.database == null);	
              			} else if (fields.size() != 0) {
              				resp = server.alterForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 6, null, null, null, null, fields, null,null,null, this.database == null);	
              			} else if (nfs != null) {
              				resp = server.alterForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 7, null, null, null, null, null, nfs.def ,null,null, this.database == null);	
              			} else if (fsd != null) {
              				resp = server.alterForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 8, null, null, null, null, null, fsd.def,input.toString(fsn.start,fsn.stop),null, this.database == null);	
              			} else if (drop_fsn != null) {
              				resp = server.alterForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 9, null, null, null, null, null, null,input.toString(drop_fsn.start,drop_fsn.stop),null, this.database == null);	
              			} else if (statuses.size() != 0) {
              				resp = server.alterForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), 10, null, null, null, null, null, null,null, statuses, this.database == null);	
              			}	
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop));
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 47, alterForm_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alterForm

    public static class dropForm_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropForm
    // /Users/michaelarace/CodaServer_Src/Coda.g:940:1: dropForm returns [CodaResponse response] : 'DROP' 'FORM' (an= applicationPrefix )? tn= objectName ;
    public final dropForm_return dropForm() throws RecognitionException {
        dropForm_return retval = new dropForm_return();
        retval.start = input.LT(1);
        int dropForm_StartIndex = input.index();
        applicationPrefix_return an = null;

        objectName_return tn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 48) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:941:2: ( 'DROP' 'FORM' (an= applicationPrefix )? tn= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:941:4: 'DROP' 'FORM' (an= applicationPrefix )? tn= objectName
            {
            match(input,92,FOLLOW_92_in_dropForm3679); if (failed) return retval;
            match(input,110,FOLLOW_110_in_dropForm3681); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:941:20: (an= applicationPrefix )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==ObjectName) ) {
                int LA88_1 = input.LA(2);

                if ( (LA88_1==77) ) {
                    alt88=1;
                }
            }
            else if ( ((LA88_0>=10 && LA88_0<=66)) ) {
                int LA88_2 = input.LA(2);

                if ( (LA88_2==77) ) {
                    alt88=1;
                }
            }
            switch (alt88) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_dropForm3685);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_dropForm3690);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			boolean refTable = server.isRefTable(an != null ? an.applicationName : server.getSessionApplication(sessionKey), input.toString(tn.start,tn.stop));
              			CodaResponse resp = server.dropForm (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop));
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, refTable);
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 48, dropForm_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropForm

    public static class createIndex_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createIndex
    // /Users/michaelarace/CodaServer_Src/Coda.g:952:1: createIndex returns [CodaResponse response] : 'CREATE' 'INDEX' in= objectName 'ON' (an= applicationPrefix )? tn= objectName '(' cn= objectName ( ',' cn= objectName )* ')' (uf= 'UNIQUE' )? ;
    public final createIndex_return createIndex() throws RecognitionException {
        createIndex_return retval = new createIndex_return();
        retval.start = input.LT(1);
        int createIndex_StartIndex = input.index();
        Token uf=null;
        objectName_return in = null;

        applicationPrefix_return an = null;

        objectName_return tn = null;

        objectName_return cn = null;



        	Vector<String> fields = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 49) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:956:2: ( 'CREATE' 'INDEX' in= objectName 'ON' (an= applicationPrefix )? tn= objectName '(' cn= objectName ( ',' cn= objectName )* ')' (uf= 'UNIQUE' )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:956:4: 'CREATE' 'INDEX' in= objectName 'ON' (an= applicationPrefix )? tn= objectName '(' cn= objectName ( ',' cn= objectName )* ')' (uf= 'UNIQUE' )?
            {
            match(input,82,FOLLOW_82_in_createIndex3714); if (failed) return retval;
            match(input,125,FOLLOW_125_in_createIndex3716); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createIndex3720);
            in=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,93,FOLLOW_93_in_createIndex3722); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:956:42: (an= applicationPrefix )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==ObjectName) ) {
                int LA89_1 = input.LA(2);

                if ( (LA89_1==77) ) {
                    alt89=1;
                }
            }
            else if ( ((LA89_0>=10 && LA89_0<=66)) ) {
                int LA89_2 = input.LA(2);

                if ( (LA89_2==77) ) {
                    alt89=1;
                }
            }
            switch (alt89) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_createIndex3726);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_createIndex3731);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,84,FOLLOW_84_in_createIndex3733); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createIndex3737);
            cn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               fields.add(input.toString(cn.start,cn.stop)); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:956:120: ( ',' cn= objectName )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==85) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:956:121: ',' cn= objectName
            	    {
            	    match(input,85,FOLLOW_85_in_createIndex3742); if (failed) return retval;
            	    pushFollow(FOLLOW_objectName_in_createIndex3746);
            	    cn=objectName();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       fields.add(input.toString(cn.start,cn.stop)); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            match(input,86,FOLLOW_86_in_createIndex3753); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:956:172: (uf= 'UNIQUE' )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==126) ) {
                alt91=1;
            }
            switch (alt91) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:956:173: uf= 'UNIQUE'
                    {
                    uf=(Token)input.LT(1);
                    match(input,126,FOLLOW_126_in_createIndex3758); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			CodaResponse resp = server.createIndex (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(in.start,in.stop), input.toString(tn.start,tn.stop), fields, (uf != null));
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, null);
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 49, createIndex_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createIndex

    public static class dropIndex_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropIndex
    // /Users/michaelarace/CodaServer_Src/Coda.g:966:1: dropIndex returns [CodaResponse response] : 'DROP' 'INDEX' (an= applicationPrefix )? in= objectName ;
    public final dropIndex_return dropIndex() throws RecognitionException {
        dropIndex_return retval = new dropIndex_return();
        retval.start = input.LT(1);
        int dropIndex_StartIndex = input.index();
        applicationPrefix_return an = null;

        objectName_return in = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 50) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:967:2: ( 'DROP' 'INDEX' (an= applicationPrefix )? in= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:967:4: 'DROP' 'INDEX' (an= applicationPrefix )? in= objectName
            {
            match(input,92,FOLLOW_92_in_dropIndex3780); if (failed) return retval;
            match(input,125,FOLLOW_125_in_dropIndex3782); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:967:21: (an= applicationPrefix )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==ObjectName) ) {
                int LA92_1 = input.LA(2);

                if ( (LA92_1==77) ) {
                    alt92=1;
                }
            }
            else if ( ((LA92_0>=10 && LA92_0<=66)) ) {
                int LA92_2 = input.LA(2);

                if ( (LA92_2==77) ) {
                    alt92=1;
                }
            }
            switch (alt92) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_dropIndex3786);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_dropIndex3791);
            in=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			CodaResponse resp = server.dropIndex (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(in.start,in.stop));
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, null);
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 50, dropIndex_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropIndex

    public static class cron_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start cron
    // /Users/michaelarace/CodaServer_Src/Coda.g:977:1: cron returns [CodaResponse response] : 'CRON' cn= objectName 'ON' an= objectName '.' env= environmentName 'IS' min= cronValue hour= cronValue dom= cronValue mon= cronValue dow= cronValue pn= objectName ( '(' (param= stringLiteral | param2= arrayLiteral ) ( ',' (param= stringLiteral | param2= arrayLiteral ) )* ')' )? ( 'AS' euser= objectName ':' epass= stringLiteral )? ;
    public final cron_return cron() throws RecognitionException {
        cron_return retval = new cron_return();
        retval.start = input.LT(1);
        int cron_StartIndex = input.index();
        objectName_return cn = null;

        objectName_return an = null;

        environmentName_return env = null;

        cronValue_return min = null;

        cronValue_return hour = null;

        cronValue_return dom = null;

        cronValue_return mon = null;

        cronValue_return dow = null;

        objectName_return pn = null;

        stringLiteral_return param = null;

        arrayLiteral_return param2 = null;

        objectName_return euser = null;

        stringLiteral_return epass = null;



        	Vector<String> params = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 51) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:981:2: ( 'CRON' cn= objectName 'ON' an= objectName '.' env= environmentName 'IS' min= cronValue hour= cronValue dom= cronValue mon= cronValue dow= cronValue pn= objectName ( '(' (param= stringLiteral | param2= arrayLiteral ) ( ',' (param= stringLiteral | param2= arrayLiteral ) )* ')' )? ( 'AS' euser= objectName ':' epass= stringLiteral )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:981:4: 'CRON' cn= objectName 'ON' an= objectName '.' env= environmentName 'IS' min= cronValue hour= cronValue dom= cronValue mon= cronValue dow= cronValue pn= objectName ( '(' (param= stringLiteral | param2= arrayLiteral ) ( ',' (param= stringLiteral | param2= arrayLiteral ) )* ')' )? ( 'AS' euser= objectName ':' epass= stringLiteral )?
            {
            match(input,127,FOLLOW_127_in_cron3815); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_cron3819);
            cn=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,93,FOLLOW_93_in_cron3821); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_cron3825);
            an=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,77,FOLLOW_77_in_cron3827); if (failed) return retval;
            pushFollow(FOLLOW_environmentName_in_cron3831);
            env=environmentName();
            _fsp--;
            if (failed) return retval;
            match(input,128,FOLLOW_128_in_cron3833); if (failed) return retval;
            pushFollow(FOLLOW_cronValue_in_cron3837);
            min=cronValue();
            _fsp--;
            if (failed) return retval;
            pushFollow(FOLLOW_cronValue_in_cron3841);
            hour=cronValue();
            _fsp--;
            if (failed) return retval;
            pushFollow(FOLLOW_cronValue_in_cron3845);
            dom=cronValue();
            _fsp--;
            if (failed) return retval;
            pushFollow(FOLLOW_cronValue_in_cron3849);
            mon=cronValue();
            _fsp--;
            if (failed) return retval;
            pushFollow(FOLLOW_cronValue_in_cron3853);
            dow=cronValue();
            _fsp--;
            if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_cron3860);
            pn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:982:17: ( '(' (param= stringLiteral | param2= arrayLiteral ) ( ',' (param= stringLiteral | param2= arrayLiteral ) )* ')' )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==84) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:982:18: '(' (param= stringLiteral | param2= arrayLiteral ) ( ',' (param= stringLiteral | param2= arrayLiteral ) )* ')'
                    {
                    match(input,84,FOLLOW_84_in_cron3863); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:982:22: (param= stringLiteral | param2= arrayLiteral )
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( ((LA93_0>=UnicodeStringLiteral && LA93_0<=ASCIIStringLiteral)) ) {
                        alt93=1;
                    }
                    else if ( (LA93_0==161) ) {
                        alt93=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("982:22: (param= stringLiteral | param2= arrayLiteral )", 93, 0, input);

                        throw nvae;
                    }
                    switch (alt93) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:982:23: param= stringLiteral
                            {
                            pushFollow(FOLLOW_stringLiteral_in_cron3868);
                            param=stringLiteral();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) {
                               params.add(param.value); 
                            }

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:982:75: param2= arrayLiteral
                            {
                            pushFollow(FOLLOW_arrayLiteral_in_cron3876);
                            param2=arrayLiteral();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) {
                               params.add(input.toString(param2.start,param2.stop)); 
                            }

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:982:127: ( ',' (param= stringLiteral | param2= arrayLiteral ) )*
                    loop95:
                    do {
                        int alt95=2;
                        int LA95_0 = input.LA(1);

                        if ( (LA95_0==85) ) {
                            alt95=1;
                        }


                        switch (alt95) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:982:128: ',' (param= stringLiteral | param2= arrayLiteral )
                    	    {
                    	    match(input,85,FOLLOW_85_in_cron3883); if (failed) return retval;
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:982:132: (param= stringLiteral | param2= arrayLiteral )
                    	    int alt94=2;
                    	    int LA94_0 = input.LA(1);

                    	    if ( ((LA94_0>=UnicodeStringLiteral && LA94_0<=ASCIIStringLiteral)) ) {
                    	        alt94=1;
                    	    }
                    	    else if ( (LA94_0==161) ) {
                    	        alt94=2;
                    	    }
                    	    else {
                    	        if (backtracking>0) {failed=true; return retval;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("982:132: (param= stringLiteral | param2= arrayLiteral )", 94, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt94) {
                    	        case 1 :
                    	            // /Users/michaelarace/CodaServer_Src/Coda.g:982:133: param= stringLiteral
                    	            {
                    	            pushFollow(FOLLOW_stringLiteral_in_cron3888);
                    	            param=stringLiteral();
                    	            _fsp--;
                    	            if (failed) return retval;
                    	            if ( backtracking==0 ) {
                    	               params.add(param.value); 
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/michaelarace/CodaServer_Src/Coda.g:982:185: param2= arrayLiteral
                    	            {
                    	            pushFollow(FOLLOW_arrayLiteral_in_cron3896);
                    	            param2=arrayLiteral();
                    	            _fsp--;
                    	            if (failed) return retval;
                    	            if ( backtracking==0 ) {
                    	               params.add(input.toString(param2.start,param2.stop)); 
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop95;
                        }
                    } while (true);

                    match(input,86,FOLLOW_86_in_cron3904); if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:983:3: ( 'AS' euser= objectName ':' epass= stringLiteral )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==97) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:983:4: 'AS' euser= objectName ':' epass= stringLiteral
                    {
                    match(input,97,FOLLOW_97_in_cron3912); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_cron3916);
                    euser=objectName();
                    _fsp--;
                    if (failed) return retval;
                    match(input,74,FOLLOW_74_in_cron3918); if (failed) return retval;
                    pushFollow(FOLLOW_stringLiteral_in_cron3922);
                    epass=stringLiteral();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			CodaResponse resp = server.createCron (sessionKey, input.toString(an.start,an.stop), input.toString(env.start,env.stop), input.toString(cn.start,cn.stop), min.value, hour.value, dom.value, mon.value, dow.value, input.toString(pn.start,pn.stop), params, euser != null ? input.toString(euser.start,euser.stop) : null, epass != null ? epass.value : null);
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 51, cron_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end cron

    public static class dropCron_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropCron
    // /Users/michaelarace/CodaServer_Src/Coda.g:990:1: dropCron returns [CodaResponse response] : 'DROP' 'CRON' cn= objectName 'ON' an= objectName '.' env= environmentName ;
    public final dropCron_return dropCron() throws RecognitionException {
        dropCron_return retval = new dropCron_return();
        retval.start = input.LT(1);
        int dropCron_StartIndex = input.index();
        objectName_return cn = null;

        objectName_return an = null;

        environmentName_return env = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 52) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:991:2: ( 'DROP' 'CRON' cn= objectName 'ON' an= objectName '.' env= environmentName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:991:4: 'DROP' 'CRON' cn= objectName 'ON' an= objectName '.' env= environmentName
            {
            match(input,92,FOLLOW_92_in_dropCron3945); if (failed) return retval;
            match(input,127,FOLLOW_127_in_dropCron3947); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_dropCron3951);
            cn=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,93,FOLLOW_93_in_dropCron3953); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_dropCron3957);
            an=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,77,FOLLOW_77_in_dropCron3959); if (failed) return retval;
            pushFollow(FOLLOW_environmentName_in_dropCron3963);
            env=environmentName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			CodaResponse resp = server.dropCron (sessionKey, input.toString(an.start,an.stop), input.toString(env.start,env.stop), input.toString(cn.start,cn.stop));
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 52, dropCron_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropCron

    public static class selectObject_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start selectObject
    // /Users/michaelarace/CodaServer_Src/Coda.g:998:1: selectObject returns [CodaResponse response] : 'SELECTOBJECT' 'FROM' tn= objectName 'WHERE' 'ID' '=' id= Integer (gr= 'GREEDY' )? ;
    public final selectObject_return selectObject() throws RecognitionException {
        selectObject_return retval = new selectObject_return();
        retval.start = input.LT(1);
        int selectObject_StartIndex = input.index();
        Token id=null;
        Token gr=null;
        objectName_return tn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 53) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:999:2: ( 'SELECTOBJECT' 'FROM' tn= objectName 'WHERE' 'ID' '=' id= Integer (gr= 'GREEDY' )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:999:4: 'SELECTOBJECT' 'FROM' tn= objectName 'WHERE' 'ID' '=' id= Integer (gr= 'GREEDY' )?
            {
            match(input,129,FOLLOW_129_in_selectObject3982); if (failed) return retval;
            match(input,113,FOLLOW_113_in_selectObject3984); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_selectObject3988);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,130,FOLLOW_130_in_selectObject3990); if (failed) return retval;
            match(input,27,FOLLOW_27_in_selectObject3992); if (failed) return retval;
            match(input,99,FOLLOW_99_in_selectObject3994); if (failed) return retval;
            id=(Token)input.LT(1);
            match(input,Integer,FOLLOW_Integer_in_selectObject3998); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:999:68: (gr= 'GREEDY' )?
            int alt98=2;
            int LA98_0 = input.LA(1);

            if ( (LA98_0==131) ) {
                alt98=1;
            }
            switch (alt98) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:999:69: gr= 'GREEDY'
                    {
                    gr=(Token)input.LT(1);
                    match(input,131,FOLLOW_131_in_selectObject4003); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              		retval.response = server.selectObject(sessionKey, input.toString(tn.start,tn.stop), Long.parseLong(id.getText()), (gr == null ? false : true), null);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 53, selectObject_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end selectObject

    public static class selectObjectNoCommit_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start selectObjectNoCommit
    // /Users/michaelarace/CodaServer_Src/Coda.g:1005:1: selectObjectNoCommit[CodaConnection connection] returns [CodaResponse response] : 'SELECTOBJECT' 'FROM' tn= objectName 'WHERE' 'ID' '=' id= Integer (gr= 'GREEDY' )? ;
    public final selectObjectNoCommit_return selectObjectNoCommit(CodaConnection connection) throws RecognitionException {
        selectObjectNoCommit_return retval = new selectObjectNoCommit_return();
        retval.start = input.LT(1);
        int selectObjectNoCommit_StartIndex = input.index();
        Token id=null;
        Token gr=null;
        objectName_return tn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 54) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1006:2: ( 'SELECTOBJECT' 'FROM' tn= objectName 'WHERE' 'ID' '=' id= Integer (gr= 'GREEDY' )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1006:4: 'SELECTOBJECT' 'FROM' tn= objectName 'WHERE' 'ID' '=' id= Integer (gr= 'GREEDY' )?
            {
            match(input,129,FOLLOW_129_in_selectObjectNoCommit4024); if (failed) return retval;
            match(input,113,FOLLOW_113_in_selectObjectNoCommit4026); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_selectObjectNoCommit4030);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,130,FOLLOW_130_in_selectObjectNoCommit4032); if (failed) return retval;
            match(input,27,FOLLOW_27_in_selectObjectNoCommit4034); if (failed) return retval;
            match(input,99,FOLLOW_99_in_selectObjectNoCommit4036); if (failed) return retval;
            id=(Token)input.LT(1);
            match(input,Integer,FOLLOW_Integer_in_selectObjectNoCommit4040); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1006:68: (gr= 'GREEDY' )?
            int alt99=2;
            int LA99_0 = input.LA(1);

            if ( (LA99_0==131) ) {
                alt99=1;
            }
            switch (alt99) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1006:69: gr= 'GREEDY'
                    {
                    gr=(Token)input.LT(1);
                    match(input,131,FOLLOW_131_in_selectObjectNoCommit4045); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              		retval.response = server.selectObject(sessionKey, input.toString(tn.start,tn.stop), Long.parseLong(id.getText()), (gr == null ? false : true), connection);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 54, selectObjectNoCommit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end selectObjectNoCommit

    public static class rawSQL_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start rawSQL
    // /Users/michaelarace/CodaServer_Src/Coda.g:1012:1: rawSQL returns [CodaResponse response] : 'RAW' 'SQL' ':' sql= rawSQLBody ;
    public final rawSQL_return rawSQL() throws RecognitionException {
        rawSQL_return retval = new rawSQL_return();
        retval.start = input.LT(1);
        int rawSQL_StartIndex = input.index();
        rawSQLBody_return sql = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 55) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1013:2: ( 'RAW' 'SQL' ':' sql= rawSQLBody )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1013:4: 'RAW' 'SQL' ':' sql= rawSQLBody
            {
            match(input,132,FOLLOW_132_in_rawSQL4066); if (failed) return retval;
            match(input,133,FOLLOW_133_in_rawSQL4068); if (failed) return retval;
            match(input,74,FOLLOW_74_in_rawSQL4070); if (failed) return retval;
            pushFollow(FOLLOW_rawSQLBody_in_rawSQL4074);
            sql=rawSQLBody();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              		retval.response = server.rawStatement(sessionKey, input.toString(sql.start,sql.stop), null);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 55, rawSQL_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end rawSQL

    public static class rawSQLNoCommit_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start rawSQLNoCommit
    // /Users/michaelarace/CodaServer_Src/Coda.g:1019:1: rawSQLNoCommit[CodaConnection connection] returns [CodaResponse response] : 'RAW' 'SQL' ':' sql= rawSQLBody ;
    public final rawSQLNoCommit_return rawSQLNoCommit(CodaConnection connection) throws RecognitionException {
        rawSQLNoCommit_return retval = new rawSQLNoCommit_return();
        retval.start = input.LT(1);
        int rawSQLNoCommit_StartIndex = input.index();
        rawSQLBody_return sql = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 56) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1020:2: ( 'RAW' 'SQL' ':' sql= rawSQLBody )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1020:4: 'RAW' 'SQL' ':' sql= rawSQLBody
            {
            match(input,132,FOLLOW_132_in_rawSQLNoCommit4095); if (failed) return retval;
            match(input,133,FOLLOW_133_in_rawSQLNoCommit4097); if (failed) return retval;
            match(input,74,FOLLOW_74_in_rawSQLNoCommit4099); if (failed) return retval;
            pushFollow(FOLLOW_rawSQLBody_in_rawSQLNoCommit4103);
            sql=rawSQLBody();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              		retval.response = server.rawStatement(sessionKey, input.toString(sql.start,sql.stop), connection);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 56, rawSQLNoCommit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end rawSQLNoCommit

    public static class rawSelect_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start rawSelect
    // /Users/michaelarace/CodaServer_Src/Coda.g:1026:1: rawSelect returns [CodaResponse response] : 'RAW' 'SELECT' ':' sql= rawSQLBody ;
    public final rawSelect_return rawSelect() throws RecognitionException {
        rawSelect_return retval = new rawSelect_return();
        retval.start = input.LT(1);
        int rawSelect_StartIndex = input.index();
        rawSQLBody_return sql = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 57) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1027:2: ( 'RAW' 'SELECT' ':' sql= rawSQLBody )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1027:4: 'RAW' 'SELECT' ':' sql= rawSQLBody
            {
            match(input,132,FOLLOW_132_in_rawSelect4123); if (failed) return retval;
            match(input,134,FOLLOW_134_in_rawSelect4125); if (failed) return retval;
            match(input,74,FOLLOW_74_in_rawSelect4127); if (failed) return retval;
            pushFollow(FOLLOW_rawSQLBody_in_rawSelect4131);
            sql=rawSQLBody();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              		retval.response = server.rawSelect(sessionKey, input.toString(sql.start,sql.stop), null);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 57, rawSelect_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end rawSelect

    public static class rawSelectNoCommit_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start rawSelectNoCommit
    // /Users/michaelarace/CodaServer_Src/Coda.g:1032:1: rawSelectNoCommit[CodaConnection connection] returns [CodaResponse response] : 'RAW' 'SELECT' ':' sql= rawSQLBody ;
    public final rawSelectNoCommit_return rawSelectNoCommit(CodaConnection connection) throws RecognitionException {
        rawSelectNoCommit_return retval = new rawSelectNoCommit_return();
        retval.start = input.LT(1);
        int rawSelectNoCommit_StartIndex = input.index();
        rawSQLBody_return sql = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 58) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1033:2: ( 'RAW' 'SELECT' ':' sql= rawSQLBody )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1033:4: 'RAW' 'SELECT' ':' sql= rawSQLBody
            {
            match(input,132,FOLLOW_132_in_rawSelectNoCommit4150); if (failed) return retval;
            match(input,134,FOLLOW_134_in_rawSelectNoCommit4152); if (failed) return retval;
            match(input,74,FOLLOW_74_in_rawSelectNoCommit4154); if (failed) return retval;
            pushFollow(FOLLOW_rawSQLBody_in_rawSelectNoCommit4158);
            sql=rawSQLBody();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              		retval.response = server.rawSelect(sessionKey, input.toString(sql.start,sql.stop), connection);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 58, rawSelectNoCommit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end rawSelectNoCommit

    public static class createTrigger_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createTrigger
    // /Users/michaelarace/CodaServer_Src/Coda.g:1040:1: createTrigger returns [CodaResponse response] : cmd= ( 'CREATE' | 'REPLACE' ) 'TRIGGER' 'ON' ( 'TABLE' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) op= tableOperation | 'FORM' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) opo= objectName ) 'AS' tb= triggerBody 'ENDTRIGGER' ;
    public final createTrigger_return createTrigger() throws RecognitionException {
        createTrigger_return retval = new createTrigger_return();
        retval.start = input.LT(1);
        int createTrigger_StartIndex = input.index();
        Token cmd=null;
        Token bf=null;
        applicationPrefix_return an = null;

        objectName_return tn = null;

        tableOperation_return op = null;

        objectName_return opo = null;

        triggerBody_return tb = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 59) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1041:2: (cmd= ( 'CREATE' | 'REPLACE' ) 'TRIGGER' 'ON' ( 'TABLE' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) op= tableOperation | 'FORM' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) opo= objectName ) 'AS' tb= triggerBody 'ENDTRIGGER' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1041:4: cmd= ( 'CREATE' | 'REPLACE' ) 'TRIGGER' 'ON' ( 'TABLE' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) op= tableOperation | 'FORM' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) opo= objectName ) 'AS' tb= triggerBody 'ENDTRIGGER'
            {
            cmd=(Token)input.LT(1);
            if ( input.LA(1)==82||input.LA(1)==135 ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_createTrigger4180);    throw mse;
            }

            match(input,136,FOLLOW_136_in_createTrigger4189); if (failed) return retval;
            match(input,93,FOLLOW_93_in_createTrigger4191); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1042:2: ( 'TABLE' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) op= tableOperation | 'FORM' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) opo= objectName )
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==109) ) {
                alt104=1;
            }
            else if ( (LA104_0==110) ) {
                alt104=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1042:2: ( 'TABLE' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) op= tableOperation | 'FORM' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) opo= objectName )", 104, 0, input);

                throw nvae;
            }
            switch (alt104) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1042:4: 'TABLE' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) op= tableOperation
                    {
                    match(input,109,FOLLOW_109_in_createTrigger4196); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1042:12: (an= applicationPrefix )?
                    int alt100=2;
                    int LA100_0 = input.LA(1);

                    if ( (LA100_0==ObjectName) ) {
                        int LA100_1 = input.LA(2);

                        if ( (LA100_1==77) ) {
                            alt100=1;
                        }
                    }
                    else if ( ((LA100_0>=10 && LA100_0<=66)) ) {
                        int LA100_2 = input.LA(2);

                        if ( (LA100_2==77) ) {
                            alt100=1;
                        }
                    }
                    switch (alt100) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1042:13: an= applicationPrefix
                            {
                            pushFollow(FOLLOW_applicationPrefix_in_createTrigger4201);
                            an=applicationPrefix();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_objectName_in_createTrigger4207);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1042:50: (bf= 'BEFORE' | 'AFTER' )
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==137) ) {
                        alt101=1;
                    }
                    else if ( (LA101_0==138) ) {
                        alt101=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("1042:50: (bf= 'BEFORE' | 'AFTER' )", 101, 0, input);

                        throw nvae;
                    }
                    switch (alt101) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1042:51: bf= 'BEFORE'
                            {
                            bf=(Token)input.LT(1);
                            match(input,137,FOLLOW_137_in_createTrigger4212); if (failed) return retval;

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1042:65: 'AFTER'
                            {
                            match(input,138,FOLLOW_138_in_createTrigger4216); if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_tableOperation_in_createTrigger4221);
                    op=tableOperation();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1043:4: 'FORM' (an= applicationPrefix )? tn= objectName (bf= 'BEFORE' | 'AFTER' ) opo= objectName
                    {
                    match(input,110,FOLLOW_110_in_createTrigger4226); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1043:11: (an= applicationPrefix )?
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==ObjectName) ) {
                        int LA102_1 = input.LA(2);

                        if ( (LA102_1==77) ) {
                            alt102=1;
                        }
                    }
                    else if ( ((LA102_0>=10 && LA102_0<=66)) ) {
                        int LA102_2 = input.LA(2);

                        if ( (LA102_2==77) ) {
                            alt102=1;
                        }
                    }
                    switch (alt102) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1043:12: an= applicationPrefix
                            {
                            pushFollow(FOLLOW_applicationPrefix_in_createTrigger4231);
                            an=applicationPrefix();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_objectName_in_createTrigger4237);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1043:49: (bf= 'BEFORE' | 'AFTER' )
                    int alt103=2;
                    int LA103_0 = input.LA(1);

                    if ( (LA103_0==137) ) {
                        alt103=1;
                    }
                    else if ( (LA103_0==138) ) {
                        alt103=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("1043:49: (bf= 'BEFORE' | 'AFTER' )", 103, 0, input);

                        throw nvae;
                    }
                    switch (alt103) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1043:50: bf= 'BEFORE'
                            {
                            bf=(Token)input.LT(1);
                            match(input,137,FOLLOW_137_in_createTrigger4242); if (failed) return retval;

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1043:64: 'AFTER'
                            {
                            match(input,138,FOLLOW_138_in_createTrigger4246); if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_objectName_in_createTrigger4251);
                    opo=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            match(input,97,FOLLOW_97_in_createTrigger4257); if (failed) return retval;
            pushFollow(FOLLOW_triggerBody_in_createTrigger4261);
            tb=triggerBody();
            _fsp--;
            if (failed) return retval;
            match(input,139,FOLLOW_139_in_createTrigger4263); if (failed) return retval;
            if ( backtracking==0 ) {

              			CodaResponse resp = server.createReplaceTrigger (sessionKey, this.getDatabase(), cmd.getText(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), op == null ? input.toString(opo.start,opo.stop) : input.toString(op.start,op.stop), bf != null,input.toString(tb.start,tb.stop), this.database == null);
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, "");
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 59, createTrigger_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createTrigger

    public static class dropTrigger_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropTrigger
    // /Users/michaelarace/CodaServer_Src/Coda.g:1053:1: dropTrigger returns [CodaResponse response] : 'DROP' 'TRIGGER' 'ON' ( 'TABLE' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) op= tableOperation | 'FORM' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) opo= objectName ) ;
    public final dropTrigger_return dropTrigger() throws RecognitionException {
        dropTrigger_return retval = new dropTrigger_return();
        retval.start = input.LT(1);
        int dropTrigger_StartIndex = input.index();
        Token bf=null;
        applicationPrefix_return an = null;

        objectName_return tn = null;

        tableOperation_return op = null;

        objectName_return opo = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 60) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1054:2: ( 'DROP' 'TRIGGER' 'ON' ( 'TABLE' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) op= tableOperation | 'FORM' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) opo= objectName ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1054:4: 'DROP' 'TRIGGER' 'ON' ( 'TABLE' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) op= tableOperation | 'FORM' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) opo= objectName )
            {
            match(input,92,FOLLOW_92_in_dropTrigger4281); if (failed) return retval;
            match(input,136,FOLLOW_136_in_dropTrigger4283); if (failed) return retval;
            match(input,93,FOLLOW_93_in_dropTrigger4285); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1055:2: ( 'TABLE' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) op= tableOperation | 'FORM' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) opo= objectName )
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==109) ) {
                alt107=1;
            }
            else if ( (LA107_0==110) ) {
                alt107=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1055:2: ( 'TABLE' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) op= tableOperation | 'FORM' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) opo= objectName )", 107, 0, input);

                throw nvae;
            }
            switch (alt107) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1055:4: 'TABLE' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) op= tableOperation
                    {
                    match(input,109,FOLLOW_109_in_dropTrigger4290); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1055:12: (an= applicationPrefix )?
                    int alt105=2;
                    int LA105_0 = input.LA(1);

                    if ( (LA105_0==ObjectName) ) {
                        int LA105_1 = input.LA(2);

                        if ( (LA105_1==77) ) {
                            alt105=1;
                        }
                    }
                    else if ( ((LA105_0>=10 && LA105_0<=66)) ) {
                        int LA105_2 = input.LA(2);

                        if ( (LA105_2==77) ) {
                            alt105=1;
                        }
                    }
                    switch (alt105) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1055:13: an= applicationPrefix
                            {
                            pushFollow(FOLLOW_applicationPrefix_in_dropTrigger4295);
                            an=applicationPrefix();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_objectName_in_dropTrigger4301);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    bf=(Token)input.LT(1);
                    if ( (input.LA(1)>=137 && input.LA(1)<=138) ) {
                        input.consume();
                        errorRecovery=false;failed=false;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        MismatchedSetException mse =
                            new MismatchedSetException(null,input);
                        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_dropTrigger4305);    throw mse;
                    }

                    pushFollow(FOLLOW_tableOperation_in_dropTrigger4315);
                    op=tableOperation();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1056:4: 'FORM' (an= applicationPrefix )? tn= objectName bf= ( 'BEFORE' | 'AFTER' ) opo= objectName
                    {
                    match(input,110,FOLLOW_110_in_dropTrigger4320); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1056:11: (an= applicationPrefix )?
                    int alt106=2;
                    int LA106_0 = input.LA(1);

                    if ( (LA106_0==ObjectName) ) {
                        int LA106_1 = input.LA(2);

                        if ( (LA106_1==77) ) {
                            alt106=1;
                        }
                    }
                    else if ( ((LA106_0>=10 && LA106_0<=66)) ) {
                        int LA106_2 = input.LA(2);

                        if ( (LA106_2==77) ) {
                            alt106=1;
                        }
                    }
                    switch (alt106) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1056:12: an= applicationPrefix
                            {
                            pushFollow(FOLLOW_applicationPrefix_in_dropTrigger4325);
                            an=applicationPrefix();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_objectName_in_dropTrigger4331);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    bf=(Token)input.LT(1);
                    if ( (input.LA(1)>=137 && input.LA(1)<=138) ) {
                        input.consume();
                        errorRecovery=false;failed=false;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        MismatchedSetException mse =
                            new MismatchedSetException(null,input);
                        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_dropTrigger4335);    throw mse;
                    }

                    pushFollow(FOLLOW_objectName_in_dropTrigger4345);
                    opo=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			CodaResponse resp = server.dropTrigger (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(tn.start,tn.stop), op == null ? input.toString(opo.start,opo.stop) : input.toString(op.start,op.stop), bf.getText().equalsIgnoreCase("BEFORE"));
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, "");
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 60, dropTrigger_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropTrigger

    public static class createProcedure_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start createProcedure
    // /Users/michaelarace/CodaServer_Src/Coda.g:1066:1: createProcedure returns [CodaResponse response] : cmd= ( 'CREATE' | 'REPLACE' ) 'PROCEDURE' pn= objectName (an= inApplication )? ( '(' param= procedureParameter ( ',' param= procedureParameter )* ')' )? 'RETURNS' rv= objectName (rva= 'ARRAY' )? 'AS' procBody= procedureBody 'ENDPROCEDURE' ;
    public final createProcedure_return createProcedure() throws RecognitionException {
        createProcedure_return retval = new createProcedure_return();
        retval.start = input.LT(1);
        int createProcedure_StartIndex = input.index();
        Token cmd=null;
        Token rva=null;
        objectName_return pn = null;

        inApplication_return an = null;

        procedureParameter_return param = null;

        objectName_return rv = null;

        procedureBody_return procBody = null;



        	Vector<ProcedureParameter> params = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 61) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1070:2: (cmd= ( 'CREATE' | 'REPLACE' ) 'PROCEDURE' pn= objectName (an= inApplication )? ( '(' param= procedureParameter ( ',' param= procedureParameter )* ')' )? 'RETURNS' rv= objectName (rva= 'ARRAY' )? 'AS' procBody= procedureBody 'ENDPROCEDURE' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1070:4: cmd= ( 'CREATE' | 'REPLACE' ) 'PROCEDURE' pn= objectName (an= inApplication )? ( '(' param= procedureParameter ( ',' param= procedureParameter )* ')' )? 'RETURNS' rv= objectName (rva= 'ARRAY' )? 'AS' procBody= procedureBody 'ENDPROCEDURE'
            {
            cmd=(Token)input.LT(1);
            if ( input.LA(1)==82||input.LA(1)==135 ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_createProcedure4374);    throw mse;
            }

            match(input,111,FOLLOW_111_in_createProcedure4382); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createProcedure4386);
            pn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1070:57: (an= inApplication )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==78) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1070:58: an= inApplication
                    {
                    pushFollow(FOLLOW_inApplication_in_createProcedure4391);
                    an=inApplication();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:1071:3: ( '(' param= procedureParameter ( ',' param= procedureParameter )* ')' )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==84) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1071:4: '(' param= procedureParameter ( ',' param= procedureParameter )* ')'
                    {
                    match(input,84,FOLLOW_84_in_createProcedure4400); if (failed) return retval;
                    pushFollow(FOLLOW_procedureParameter_in_createProcedure4404);
                    param=procedureParameter();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       params.add(param.parameter); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1071:68: ( ',' param= procedureParameter )*
                    loop109:
                    do {
                        int alt109=2;
                        int LA109_0 = input.LA(1);

                        if ( (LA109_0==85) ) {
                            alt109=1;
                        }


                        switch (alt109) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1071:69: ',' param= procedureParameter
                    	    {
                    	    match(input,85,FOLLOW_85_in_createProcedure4410); if (failed) return retval;
                    	    pushFollow(FOLLOW_procedureParameter_in_createProcedure4414);
                    	    param=procedureParameter();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       params.add(param.parameter); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop109;
                        }
                    } while (true);

                    match(input,86,FOLLOW_86_in_createProcedure4421); if (failed) return retval;

                    }
                    break;

            }

            match(input,140,FOLLOW_140_in_createProcedure4428); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_createProcedure4432);
            rv=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1072:27: (rva= 'ARRAY' )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==141) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1072:28: rva= 'ARRAY'
                    {
                    rva=(Token)input.LT(1);
                    match(input,141,FOLLOW_141_in_createProcedure4437); if (failed) return retval;

                    }
                    break;

            }

            match(input,97,FOLLOW_97_in_createProcedure4441); if (failed) return retval;
            pushFollow(FOLLOW_procedureBody_in_createProcedure4445);
            procBody=procedureBody();
            _fsp--;
            if (failed) return retval;
            match(input,142,FOLLOW_142_in_createProcedure4447); if (failed) return retval;
            if ( backtracking==0 ) {

              			CodaResponse resp = server.createReplaceProcedure (sessionKey, this.getDatabase(), cmd.getText(), an != null ? an.applicationName : null, input.toString(pn.start,pn.stop), params, input.toString(rv.start,rv.stop), rva != null, input.toString(procBody.start,procBody.stop), this.database == null);
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, "");
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 61, createProcedure_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end createProcedure

    public static class alterProcedure_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alterProcedure
    // /Users/michaelarace/CodaServer_Src/Coda.g:1082:1: alterProcedure returns [CodaResponse response] : 'ALTER' 'PROCEDURE' (an= applicationPrefix )? pn= objectName npn= renameTo ;
    public final alterProcedure_return alterProcedure() throws RecognitionException {
        alterProcedure_return retval = new alterProcedure_return();
        retval.start = input.LT(1);
        int alterProcedure_StartIndex = input.index();
        applicationPrefix_return an = null;

        objectName_return pn = null;

        renameTo_return npn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 62) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1083:2: ( 'ALTER' 'PROCEDURE' (an= applicationPrefix )? pn= objectName npn= renameTo )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1083:4: 'ALTER' 'PROCEDURE' (an= applicationPrefix )? pn= objectName npn= renameTo
            {
            match(input,90,FOLLOW_90_in_alterProcedure4466); if (failed) return retval;
            match(input,111,FOLLOW_111_in_alterProcedure4468); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1083:24: (an= applicationPrefix )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==ObjectName) ) {
                int LA112_1 = input.LA(2);

                if ( (LA112_1==77) ) {
                    alt112=1;
                }
            }
            else if ( ((LA112_0>=10 && LA112_0<=66)) ) {
                int LA112_2 = input.LA(2);

                if ( (LA112_2==77) ) {
                    alt112=1;
                }
            }
            switch (alt112) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1083:25: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_alterProcedure4473);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_alterProcedure4479);
            pn=objectName();
            _fsp--;
            if (failed) return retval;
            pushFollow(FOLLOW_renameTo_in_alterProcedure4483);
            npn=renameTo();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			CodaResponse resp = server.alterProcedure (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(pn.start,pn.stop), npn.newName);
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, "");
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 62, alterProcedure_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alterProcedure

    public static class dropProcedure_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dropProcedure
    // /Users/michaelarace/CodaServer_Src/Coda.g:1093:1: dropProcedure returns [CodaResponse response] : 'DROP' 'PROCEDURE' (an= applicationPrefix )? pn= objectName ;
    public final dropProcedure_return dropProcedure() throws RecognitionException {
        dropProcedure_return retval = new dropProcedure_return();
        retval.start = input.LT(1);
        int dropProcedure_StartIndex = input.index();
        applicationPrefix_return an = null;

        objectName_return pn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 63) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1094:2: ( 'DROP' 'PROCEDURE' (an= applicationPrefix )? pn= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1094:4: 'DROP' 'PROCEDURE' (an= applicationPrefix )? pn= objectName
            {
            match(input,92,FOLLOW_92_in_dropProcedure4503); if (failed) return retval;
            match(input,111,FOLLOW_111_in_dropProcedure4505); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1094:23: (an= applicationPrefix )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==ObjectName) ) {
                int LA113_1 = input.LA(2);

                if ( (LA113_1==77) ) {
                    alt113=1;
                }
            }
            else if ( ((LA113_0>=10 && LA113_0<=66)) ) {
                int LA113_2 = input.LA(2);

                if ( (LA113_2==77) ) {
                    alt113=1;
                }
            }
            switch (alt113) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1094:24: an= applicationPrefix
                    {
                    pushFollow(FOLLOW_applicationPrefix_in_dropProcedure4510);
                    an=applicationPrefix();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_dropProcedure4516);
            pn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              			CodaResponse resp = server.dropProcedure (sessionKey, this.getDatabase(), an != null ? an.applicationName : null, input.toString(pn.start,pn.stop));
              			if (!resp.getError()) {
              				logTransaction(input.toString(retval.start,input.LT(-1)), an != null ? an.applicationName : null, "");
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 63, dropProcedure_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dropProcedure

    public static class execProcedure_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start execProcedure
    // /Users/michaelarace/CodaServer_Src/Coda.g:1104:1: execProcedure returns [CodaResponse response] : 'EXEC' 'PROCEDURE' pn= objectName ( '(' (param= stringLiteral | param2= arrayLiteral ) ( ',' (param= stringLiteral | param2= arrayLiteral ) )* ')' )? ;
    public final execProcedure_return execProcedure() throws RecognitionException {
        execProcedure_return retval = new execProcedure_return();
        retval.start = input.LT(1);
        int execProcedure_StartIndex = input.index();
        objectName_return pn = null;

        stringLiteral_return param = null;

        arrayLiteral_return param2 = null;



        	Vector<String> params = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 64) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1108:2: ( 'EXEC' 'PROCEDURE' pn= objectName ( '(' (param= stringLiteral | param2= arrayLiteral ) ( ',' (param= stringLiteral | param2= arrayLiteral ) )* ')' )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1108:4: 'EXEC' 'PROCEDURE' pn= objectName ( '(' (param= stringLiteral | param2= arrayLiteral ) ( ',' (param= stringLiteral | param2= arrayLiteral ) )* ')' )?
            {
            match(input,143,FOLLOW_143_in_execProcedure4541); if (failed) return retval;
            match(input,111,FOLLOW_111_in_execProcedure4543); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_execProcedure4547);
            pn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1108:37: ( '(' (param= stringLiteral | param2= arrayLiteral ) ( ',' (param= stringLiteral | param2= arrayLiteral ) )* ')' )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==84) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1108:38: '(' (param= stringLiteral | param2= arrayLiteral ) ( ',' (param= stringLiteral | param2= arrayLiteral ) )* ')'
                    {
                    match(input,84,FOLLOW_84_in_execProcedure4550); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1108:42: (param= stringLiteral | param2= arrayLiteral )
                    int alt114=2;
                    int LA114_0 = input.LA(1);

                    if ( ((LA114_0>=UnicodeStringLiteral && LA114_0<=ASCIIStringLiteral)) ) {
                        alt114=1;
                    }
                    else if ( (LA114_0==161) ) {
                        alt114=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("1108:42: (param= stringLiteral | param2= arrayLiteral )", 114, 0, input);

                        throw nvae;
                    }
                    switch (alt114) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1108:44: param= stringLiteral
                            {
                            pushFollow(FOLLOW_stringLiteral_in_execProcedure4556);
                            param=stringLiteral();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) {
                               params.add(param.value); 
                            }

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1108:96: param2= arrayLiteral
                            {
                            pushFollow(FOLLOW_arrayLiteral_in_execProcedure4564);
                            param2=arrayLiteral();
                            _fsp--;
                            if (failed) return retval;
                            if ( backtracking==0 ) {
                               params.add(input.toString(param2.start,param2.stop)); 
                            }

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:1108:148: ( ',' (param= stringLiteral | param2= arrayLiteral ) )*
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==85) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1108:149: ',' (param= stringLiteral | param2= arrayLiteral )
                    	    {
                    	    match(input,85,FOLLOW_85_in_execProcedure4571); if (failed) return retval;
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1108:153: (param= stringLiteral | param2= arrayLiteral )
                    	    int alt115=2;
                    	    int LA115_0 = input.LA(1);

                    	    if ( ((LA115_0>=UnicodeStringLiteral && LA115_0<=ASCIIStringLiteral)) ) {
                    	        alt115=1;
                    	    }
                    	    else if ( (LA115_0==161) ) {
                    	        alt115=2;
                    	    }
                    	    else {
                    	        if (backtracking>0) {failed=true; return retval;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("1108:153: (param= stringLiteral | param2= arrayLiteral )", 115, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt115) {
                    	        case 1 :
                    	            // /Users/michaelarace/CodaServer_Src/Coda.g:1108:155: param= stringLiteral
                    	            {
                    	            pushFollow(FOLLOW_stringLiteral_in_execProcedure4577);
                    	            param=stringLiteral();
                    	            _fsp--;
                    	            if (failed) return retval;
                    	            if ( backtracking==0 ) {
                    	               params.add(param.value); 
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/michaelarace/CodaServer_Src/Coda.g:1108:207: param2= arrayLiteral
                    	            {
                    	            pushFollow(FOLLOW_arrayLiteral_in_execProcedure4585);
                    	            param2=arrayLiteral();
                    	            _fsp--;
                    	            if (failed) return retval;
                    	            if ( backtracking==0 ) {
                    	               params.add(input.toString(param2.start,param2.stop)); 
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);

                    match(input,86,FOLLOW_86_in_execProcedure4593); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			CodaResponse resp = server.execProcedure (sessionKey, input.toString(pn.start,pn.stop), params, null);
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 64, execProcedure_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end execProcedure

    public static class execProcedureNoCommit_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start execProcedureNoCommit
    // /Users/michaelarace/CodaServer_Src/Coda.g:1114:1: execProcedureNoCommit[CodaConnection connection] returns [CodaResponse response] : 'EXEC' 'PROCEDURE' pn= objectName ( '(' param+= ( stringLiteral | arrayLiteral ) ( ',' param+= ( stringLiteral | arrayLiteral ) )* ')' )? ;
    public final execProcedureNoCommit_return execProcedureNoCommit(CodaConnection connection) throws RecognitionException {
        execProcedureNoCommit_return retval = new execProcedureNoCommit_return();
        retval.start = input.LT(1);
        int execProcedureNoCommit_StartIndex = input.index();
        Token param=null;
        List list_param=null;
        objectName_return pn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 65) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1115:2: ( 'EXEC' 'PROCEDURE' pn= objectName ( '(' param+= ( stringLiteral | arrayLiteral ) ( ',' param+= ( stringLiteral | arrayLiteral ) )* ')' )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1115:4: 'EXEC' 'PROCEDURE' pn= objectName ( '(' param+= ( stringLiteral | arrayLiteral ) ( ',' param+= ( stringLiteral | arrayLiteral ) )* ')' )?
            {
            match(input,143,FOLLOW_143_in_execProcedureNoCommit4617); if (failed) return retval;
            match(input,111,FOLLOW_111_in_execProcedureNoCommit4619); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_execProcedureNoCommit4623);
            pn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1115:37: ( '(' param+= ( stringLiteral | arrayLiteral ) ( ',' param+= ( stringLiteral | arrayLiteral ) )* ')' )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==84) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1115:38: '(' param+= ( stringLiteral | arrayLiteral ) ( ',' param+= ( stringLiteral | arrayLiteral ) )* ')'
                    {
                    match(input,84,FOLLOW_84_in_execProcedureNoCommit4626); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1115:49: ( stringLiteral | arrayLiteral )
                    int alt118=2;
                    int LA118_0 = input.LA(1);

                    if ( ((LA118_0>=UnicodeStringLiteral && LA118_0<=ASCIIStringLiteral)) ) {
                        alt118=1;
                    }
                    else if ( (LA118_0==161) ) {
                        alt118=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("1115:49: ( stringLiteral | arrayLiteral )", 118, 0, input);

                        throw nvae;
                    }
                    switch (alt118) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1115:51: stringLiteral
                            {
                            pushFollow(FOLLOW_stringLiteral_in_execProcedureNoCommit4632);
                            stringLiteral();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1115:67: arrayLiteral
                            {
                            pushFollow(FOLLOW_arrayLiteral_in_execProcedureNoCommit4636);
                            arrayLiteral();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:1115:82: ( ',' param+= ( stringLiteral | arrayLiteral ) )*
                    loop120:
                    do {
                        int alt120=2;
                        int LA120_0 = input.LA(1);

                        if ( (LA120_0==85) ) {
                            alt120=1;
                        }


                        switch (alt120) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1115:83: ',' param+= ( stringLiteral | arrayLiteral )
                    	    {
                    	    match(input,85,FOLLOW_85_in_execProcedureNoCommit4641); if (failed) return retval;
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1115:94: ( stringLiteral | arrayLiteral )
                    	    int alt119=2;
                    	    int LA119_0 = input.LA(1);

                    	    if ( ((LA119_0>=UnicodeStringLiteral && LA119_0<=ASCIIStringLiteral)) ) {
                    	        alt119=1;
                    	    }
                    	    else if ( (LA119_0==161) ) {
                    	        alt119=2;
                    	    }
                    	    else {
                    	        if (backtracking>0) {failed=true; return retval;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("1115:94: ( stringLiteral | arrayLiteral )", 119, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt119) {
                    	        case 1 :
                    	            // /Users/michaelarace/CodaServer_Src/Coda.g:1115:96: stringLiteral
                    	            {
                    	            pushFollow(FOLLOW_stringLiteral_in_execProcedureNoCommit4647);
                    	            stringLiteral();
                    	            _fsp--;
                    	            if (failed) return retval;

                    	            }
                    	            break;
                    	        case 2 :
                    	            // /Users/michaelarace/CodaServer_Src/Coda.g:1115:112: arrayLiteral
                    	            {
                    	            pushFollow(FOLLOW_arrayLiteral_in_execProcedureNoCommit4651);
                    	            arrayLiteral();
                    	            _fsp--;
                    	            if (failed) return retval;

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop120;
                        }
                    } while (true);

                    match(input,86,FOLLOW_86_in_execProcedureNoCommit4657); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			CodaResponse resp = server.execProcedure (sessionKey, input.toString(pn.start,pn.stop), new Vector(list_param), connection);
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 65, execProcedureNoCommit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end execProcedureNoCommit

    public static class show_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start show
    // /Users/michaelarace/CodaServer_Src/Coda.g:1122:1: show returns [CodaResponse response] : 'SHOW' (us= 'USERS' ( 'IN' 'GROUP' gn= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )? | tgr= 'GROUPS' ( 'OF' 'USER' uname= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )? | ty= 'TYPES' | ds= 'DATASOURCES' | sess= 'SESSIONS' | app= 'APPLICATIONS' ( 'FOR' 'GROUP' gn= objectName )? | sysRoles= 'SERVER' 'PERMISSIONS' 'FOR' 'USER' uname= objectName | appRoles= 'APPLICATION' 'PERMISSIONS' 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | sys= 'SYS' 'INFO' | appInfo= 'APP' 'INFO' | tables= 'TABLES' | forms= 'FORMS' | procedures= 'PROCEDURES' | triggers= 'TRIGGERS' 'FOR' ( 'TABLE' | 'FORM' ) trigTable= objectName | indexes= 'INDEXES' | crons= 'CRONS' | roles= 'ROLES' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? )? | perms= 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | tabPerms= 'TABLE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | formPerms= 'FORM' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | procPerms= 'PROCEDURE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? ) (wc= whereClause )? (obc= orderByClause )? ;
    public final show_return show() throws RecognitionException {
        show_return retval = new show_return();
        retval.start = input.LT(1);
        int show_StartIndex = input.index();
        Token us=null;
        Token tgr=null;
        Token ty=null;
        Token ds=null;
        Token sess=null;
        Token app=null;
        Token sysRoles=null;
        Token appRoles=null;
        Token sys=null;
        Token appInfo=null;
        Token tables=null;
        Token forms=null;
        Token procedures=null;
        Token triggers=null;
        Token indexes=null;
        Token crons=null;
        Token roles=null;
        Token perms=null;
        Token tabPerms=null;
        Token formPerms=null;
        Token procPerms=null;
        objectName_return gn = null;

        objectName_return appn = null;

        environmentName_return envn = null;

        objectName_return uname = null;

        objectName_return trigTable = null;

        objectName_return rn = null;

        whereClause_return wc = null;

        orderByClause_return obc = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 66) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1123:2: ( 'SHOW' (us= 'USERS' ( 'IN' 'GROUP' gn= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )? | tgr= 'GROUPS' ( 'OF' 'USER' uname= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )? | ty= 'TYPES' | ds= 'DATASOURCES' | sess= 'SESSIONS' | app= 'APPLICATIONS' ( 'FOR' 'GROUP' gn= objectName )? | sysRoles= 'SERVER' 'PERMISSIONS' 'FOR' 'USER' uname= objectName | appRoles= 'APPLICATION' 'PERMISSIONS' 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | sys= 'SYS' 'INFO' | appInfo= 'APP' 'INFO' | tables= 'TABLES' | forms= 'FORMS' | procedures= 'PROCEDURES' | triggers= 'TRIGGERS' 'FOR' ( 'TABLE' | 'FORM' ) trigTable= objectName | indexes= 'INDEXES' | crons= 'CRONS' | roles= 'ROLES' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? )? | perms= 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | tabPerms= 'TABLE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | formPerms= 'FORM' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | procPerms= 'PROCEDURE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? ) (wc= whereClause )? (obc= orderByClause )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1123:4: 'SHOW' (us= 'USERS' ( 'IN' 'GROUP' gn= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )? | tgr= 'GROUPS' ( 'OF' 'USER' uname= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )? | ty= 'TYPES' | ds= 'DATASOURCES' | sess= 'SESSIONS' | app= 'APPLICATIONS' ( 'FOR' 'GROUP' gn= objectName )? | sysRoles= 'SERVER' 'PERMISSIONS' 'FOR' 'USER' uname= objectName | appRoles= 'APPLICATION' 'PERMISSIONS' 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | sys= 'SYS' 'INFO' | appInfo= 'APP' 'INFO' | tables= 'TABLES' | forms= 'FORMS' | procedures= 'PROCEDURES' | triggers= 'TRIGGERS' 'FOR' ( 'TABLE' | 'FORM' ) trigTable= objectName | indexes= 'INDEXES' | crons= 'CRONS' | roles= 'ROLES' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? )? | perms= 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | tabPerms= 'TABLE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | formPerms= 'FORM' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | procPerms= 'PROCEDURE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? ) (wc= whereClause )? (obc= orderByClause )?
            {
            match(input,144,FOLLOW_144_in_show4682); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1123:12: (us= 'USERS' ( 'IN' 'GROUP' gn= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )? | tgr= 'GROUPS' ( 'OF' 'USER' uname= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )? | ty= 'TYPES' | ds= 'DATASOURCES' | sess= 'SESSIONS' | app= 'APPLICATIONS' ( 'FOR' 'GROUP' gn= objectName )? | sysRoles= 'SERVER' 'PERMISSIONS' 'FOR' 'USER' uname= objectName | appRoles= 'APPLICATION' 'PERMISSIONS' 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | sys= 'SYS' 'INFO' | appInfo= 'APP' 'INFO' | tables= 'TABLES' | forms= 'FORMS' | procedures= 'PROCEDURES' | triggers= 'TRIGGERS' 'FOR' ( 'TABLE' | 'FORM' ) trigTable= objectName | indexes= 'INDEXES' | crons= 'CRONS' | roles= 'ROLES' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? )? | perms= 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | tabPerms= 'TABLE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | formPerms= 'FORM' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | procPerms= 'PROCEDURE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? )
            int alt138=21;
            switch ( input.LA(1) ) {
            case 65:
                {
                alt138=1;
                }
                break;
            case 25:
                {
                alt138=2;
                }
                break;
            case 63:
                {
                alt138=3;
                }
                break;
            case 145:
                {
                alt138=4;
                }
                break;
            case 57:
                {
                alt138=5;
                }
                break;
            case 12:
                {
                alt138=6;
                }
                break;
            case 146:
                {
                alt138=7;
                }
                break;
            case 76:
                {
                alt138=8;
                }
                break;
            case 147:
                {
                alt138=9;
                }
                break;
            case 149:
                {
                alt138=10;
                }
                break;
            case 60:
                {
                alt138=11;
                }
                break;
            case 24:
                {
                alt138=12;
                }
                break;
            case 49:
                {
                alt138=13;
                }
                break;
            case 62:
                {
                alt138=14;
                }
                break;
            case 28:
                {
                alt138=15;
                }
                break;
            case 16:
                {
                alt138=16;
                }
                break;
            case 53:
                {
                alt138=17;
                }
                break;
            case 45:
                {
                alt138=18;
                }
                break;
            case 109:
                {
                alt138=19;
                }
                break;
            case 110:
                {
                alt138=20;
                }
                break;
            case 111:
                {
                alt138=21;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1123:12: (us= 'USERS' ( 'IN' 'GROUP' gn= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )? | tgr= 'GROUPS' ( 'OF' 'USER' uname= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )? | ty= 'TYPES' | ds= 'DATASOURCES' | sess= 'SESSIONS' | app= 'APPLICATIONS' ( 'FOR' 'GROUP' gn= objectName )? | sysRoles= 'SERVER' 'PERMISSIONS' 'FOR' 'USER' uname= objectName | appRoles= 'APPLICATION' 'PERMISSIONS' 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | sys= 'SYS' 'INFO' | appInfo= 'APP' 'INFO' | tables= 'TABLES' | forms= 'FORMS' | procedures= 'PROCEDURES' | triggers= 'TRIGGERS' 'FOR' ( 'TABLE' | 'FORM' ) trigTable= objectName | indexes= 'INDEXES' | crons= 'CRONS' | roles= 'ROLES' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? )? | perms= 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | tabPerms= 'TABLE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | formPerms= 'FORM' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? | procPerms= 'PROCEDURE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )? )", 138, 0, input);

                throw nvae;
            }

            switch (alt138) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1124:4: us= 'USERS' ( 'IN' 'GROUP' gn= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )?
                    {
                    us=(Token)input.LT(1);
                    match(input,65,FOLLOW_65_in_show4692); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1124:15: ( 'IN' 'GROUP' gn= objectName )?
                    int alt122=2;
                    int LA122_0 = input.LA(1);

                    if ( (LA122_0==78) ) {
                        alt122=1;
                    }
                    switch (alt122) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1124:16: 'IN' 'GROUP' gn= objectName
                            {
                            match(input,78,FOLLOW_78_in_show4695); if (failed) return retval;
                            match(input,79,FOLLOW_79_in_show4697); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show4701);
                            gn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:1124:46: ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )?
                    int alt123=2;
                    int LA123_0 = input.LA(1);

                    if ( (LA123_0==103) ) {
                        alt123=1;
                    }
                    switch (alt123) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1124:47: 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName
                            {
                            match(input,103,FOLLOW_103_in_show4707); if (failed) return retval;
                            match(input,76,FOLLOW_76_in_show4709); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show4713);
                            appn=objectName();
                            _fsp--;
                            if (failed) return retval;
                            match(input,77,FOLLOW_77_in_show4715); if (failed) return retval;
                            pushFollow(FOLLOW_environmentName_in_show4719);
                            envn=environmentName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1125:5: tgr= 'GROUPS' ( 'OF' 'USER' uname= objectName )? ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )?
                    {
                    tgr=(Token)input.LT(1);
                    match(input,25,FOLLOW_25_in_show4730); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1125:18: ( 'OF' 'USER' uname= objectName )?
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( (LA124_0==117) ) {
                        alt124=1;
                    }
                    switch (alt124) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1125:19: 'OF' 'USER' uname= objectName
                            {
                            match(input,117,FOLLOW_117_in_show4733); if (failed) return retval;
                            match(input,94,FOLLOW_94_in_show4735); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show4739);
                            uname=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:1125:50: ( 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName )?
                    int alt125=2;
                    int LA125_0 = input.LA(1);

                    if ( (LA125_0==103) ) {
                        alt125=1;
                    }
                    switch (alt125) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1125:51: 'FOR' 'APPLICATION' appn= objectName '.' envn= environmentName
                            {
                            match(input,103,FOLLOW_103_in_show4744); if (failed) return retval;
                            match(input,76,FOLLOW_76_in_show4746); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show4750);
                            appn=objectName();
                            _fsp--;
                            if (failed) return retval;
                            match(input,77,FOLLOW_77_in_show4752); if (failed) return retval;
                            pushFollow(FOLLOW_environmentName_in_show4756);
                            envn=environmentName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1126:5: ty= 'TYPES'
                    {
                    ty=(Token)input.LT(1);
                    match(input,63,FOLLOW_63_in_show4766); if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1127:5: ds= 'DATASOURCES'
                    {
                    ds=(Token)input.LT(1);
                    match(input,145,FOLLOW_145_in_show4774); if (failed) return retval;

                    }
                    break;
                case 5 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1128:5: sess= 'SESSIONS'
                    {
                    sess=(Token)input.LT(1);
                    match(input,57,FOLLOW_57_in_show4782); if (failed) return retval;

                    }
                    break;
                case 6 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1129:5: app= 'APPLICATIONS' ( 'FOR' 'GROUP' gn= objectName )?
                    {
                    app=(Token)input.LT(1);
                    match(input,12,FOLLOW_12_in_show4790); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1129:24: ( 'FOR' 'GROUP' gn= objectName )?
                    int alt126=2;
                    int LA126_0 = input.LA(1);

                    if ( (LA126_0==103) ) {
                        alt126=1;
                    }
                    switch (alt126) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1129:25: 'FOR' 'GROUP' gn= objectName
                            {
                            match(input,103,FOLLOW_103_in_show4793); if (failed) return retval;
                            match(input,79,FOLLOW_79_in_show4795); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show4799);
                            gn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 7 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1130:5: sysRoles= 'SERVER' 'PERMISSIONS' 'FOR' 'USER' uname= objectName
                    {
                    sysRoles=(Token)input.LT(1);
                    match(input,146,FOLLOW_146_in_show4810); if (failed) return retval;
                    match(input,45,FOLLOW_45_in_show4812); if (failed) return retval;
                    match(input,103,FOLLOW_103_in_show4814); if (failed) return retval;
                    match(input,94,FOLLOW_94_in_show4816); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_show4820);
                    uname=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 8 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1131:5: appRoles= 'APPLICATION' 'PERMISSIONS' 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )?
                    {
                    appRoles=(Token)input.LT(1);
                    match(input,76,FOLLOW_76_in_show4828); if (failed) return retval;
                    match(input,45,FOLLOW_45_in_show4830); if (failed) return retval;
                    match(input,103,FOLLOW_103_in_show4832); if (failed) return retval;
                    match(input,94,FOLLOW_94_in_show4834); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_show4838);
                    uname=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1131:72: ( 'IN' 'GROUP' gn= objectName )?
                    int alt127=2;
                    int LA127_0 = input.LA(1);

                    if ( (LA127_0==78) ) {
                        alt127=1;
                    }
                    switch (alt127) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1131:73: 'IN' 'GROUP' gn= objectName
                            {
                            match(input,78,FOLLOW_78_in_show4841); if (failed) return retval;
                            match(input,79,FOLLOW_79_in_show4843); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show4847);
                            gn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 9 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1132:5: sys= 'SYS' 'INFO'
                    {
                    sys=(Token)input.LT(1);
                    match(input,147,FOLLOW_147_in_show4857); if (failed) return retval;
                    match(input,148,FOLLOW_148_in_show4859); if (failed) return retval;

                    }
                    break;
                case 10 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1133:5: appInfo= 'APP' 'INFO'
                    {
                    appInfo=(Token)input.LT(1);
                    match(input,149,FOLLOW_149_in_show4867); if (failed) return retval;
                    match(input,148,FOLLOW_148_in_show4869); if (failed) return retval;

                    }
                    break;
                case 11 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1134:5: tables= 'TABLES'
                    {
                    tables=(Token)input.LT(1);
                    match(input,60,FOLLOW_60_in_show4877); if (failed) return retval;

                    }
                    break;
                case 12 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1135:5: forms= 'FORMS'
                    {
                    forms=(Token)input.LT(1);
                    match(input,24,FOLLOW_24_in_show4885); if (failed) return retval;

                    }
                    break;
                case 13 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1136:5: procedures= 'PROCEDURES'
                    {
                    procedures=(Token)input.LT(1);
                    match(input,49,FOLLOW_49_in_show4893); if (failed) return retval;

                    }
                    break;
                case 14 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1137:5: triggers= 'TRIGGERS' 'FOR' ( 'TABLE' | 'FORM' ) trigTable= objectName
                    {
                    triggers=(Token)input.LT(1);
                    match(input,62,FOLLOW_62_in_show4901); if (failed) return retval;
                    match(input,103,FOLLOW_103_in_show4903); if (failed) return retval;
                    if ( (input.LA(1)>=109 && input.LA(1)<=110) ) {
                        input.consume();
                        errorRecovery=false;failed=false;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        MismatchedSetException mse =
                            new MismatchedSetException(null,input);
                        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_show4905);    throw mse;
                    }

                    pushFollow(FOLLOW_objectName_in_show4916);
                    trigTable=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 15 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1138:5: indexes= 'INDEXES'
                    {
                    indexes=(Token)input.LT(1);
                    match(input,28,FOLLOW_28_in_show4924); if (failed) return retval;

                    }
                    break;
                case 16 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1139:5: crons= 'CRONS'
                    {
                    crons=(Token)input.LT(1);
                    match(input,16,FOLLOW_16_in_show4932); if (failed) return retval;

                    }
                    break;
                case 17 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1140:5: roles= 'ROLES' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? )?
                    {
                    roles=(Token)input.LT(1);
                    match(input,53,FOLLOW_53_in_show4940); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1140:19: ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? )?
                    int alt129=2;
                    int LA129_0 = input.LA(1);

                    if ( (LA129_0==103) ) {
                        alt129=1;
                    }
                    switch (alt129) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1140:20: 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )?
                            {
                            match(input,103,FOLLOW_103_in_show4943); if (failed) return retval;
                            match(input,94,FOLLOW_94_in_show4945); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show4949);
                            uname=objectName();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1140:50: ( 'IN' 'GROUP' gn= objectName )?
                            int alt128=2;
                            int LA128_0 = input.LA(1);

                            if ( (LA128_0==78) ) {
                                alt128=1;
                            }
                            switch (alt128) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1140:51: 'IN' 'GROUP' gn= objectName
                                    {
                                    match(input,78,FOLLOW_78_in_show4952); if (failed) return retval;
                                    match(input,79,FOLLOW_79_in_show4954); if (failed) return retval;
                                    pushFollow(FOLLOW_objectName_in_show4958);
                                    gn=objectName();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;
                case 18 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1141:5: perms= 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )?
                    {
                    perms=(Token)input.LT(1);
                    match(input,45,FOLLOW_45_in_show4971); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1141:25: ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )?
                    int alt131=3;
                    int LA131_0 = input.LA(1);

                    if ( (LA131_0==103) ) {
                        int LA131_1 = input.LA(2);

                        if ( (LA131_1==108) ) {
                            alt131=2;
                        }
                        else if ( (LA131_1==94) ) {
                            alt131=1;
                        }
                    }
                    switch (alt131) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1141:26: 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )?
                            {
                            match(input,103,FOLLOW_103_in_show4974); if (failed) return retval;
                            match(input,94,FOLLOW_94_in_show4976); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show4980);
                            uname=objectName();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1141:56: ( 'IN' 'GROUP' gn= objectName )?
                            int alt130=2;
                            int LA130_0 = input.LA(1);

                            if ( (LA130_0==78) ) {
                                alt130=1;
                            }
                            switch (alt130) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1141:57: 'IN' 'GROUP' gn= objectName
                                    {
                                    match(input,78,FOLLOW_78_in_show4983); if (failed) return retval;
                                    match(input,79,FOLLOW_79_in_show4985); if (failed) return retval;
                                    pushFollow(FOLLOW_objectName_in_show4989);
                                    gn=objectName();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1141:88: 'FOR' 'ROLE' rn= objectName
                            {
                            match(input,103,FOLLOW_103_in_show4995); if (failed) return retval;
                            match(input,108,FOLLOW_108_in_show4997); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show5001);
                            rn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 19 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1142:5: tabPerms= 'TABLE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )?
                    {
                    tabPerms=(Token)input.LT(1);
                    match(input,109,FOLLOW_109_in_show5012); if (failed) return retval;
                    match(input,45,FOLLOW_45_in_show5014); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1142:36: ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )?
                    int alt133=3;
                    int LA133_0 = input.LA(1);

                    if ( (LA133_0==103) ) {
                        int LA133_1 = input.LA(2);

                        if ( (LA133_1==108) ) {
                            alt133=2;
                        }
                        else if ( (LA133_1==94) ) {
                            alt133=1;
                        }
                    }
                    switch (alt133) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1142:37: 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )?
                            {
                            match(input,103,FOLLOW_103_in_show5017); if (failed) return retval;
                            match(input,94,FOLLOW_94_in_show5019); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show5023);
                            uname=objectName();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1142:67: ( 'IN' 'GROUP' gn= objectName )?
                            int alt132=2;
                            int LA132_0 = input.LA(1);

                            if ( (LA132_0==78) ) {
                                alt132=1;
                            }
                            switch (alt132) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1142:68: 'IN' 'GROUP' gn= objectName
                                    {
                                    match(input,78,FOLLOW_78_in_show5026); if (failed) return retval;
                                    match(input,79,FOLLOW_79_in_show5028); if (failed) return retval;
                                    pushFollow(FOLLOW_objectName_in_show5032);
                                    gn=objectName();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1142:99: 'FOR' 'ROLE' rn= objectName
                            {
                            match(input,103,FOLLOW_103_in_show5038); if (failed) return retval;
                            match(input,108,FOLLOW_108_in_show5040); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show5044);
                            rn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 20 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1143:5: formPerms= 'FORM' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )?
                    {
                    formPerms=(Token)input.LT(1);
                    match(input,110,FOLLOW_110_in_show5055); if (failed) return retval;
                    match(input,45,FOLLOW_45_in_show5057); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1143:36: ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )?
                    int alt135=3;
                    int LA135_0 = input.LA(1);

                    if ( (LA135_0==103) ) {
                        int LA135_1 = input.LA(2);

                        if ( (LA135_1==94) ) {
                            alt135=1;
                        }
                        else if ( (LA135_1==108) ) {
                            alt135=2;
                        }
                    }
                    switch (alt135) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1143:37: 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )?
                            {
                            match(input,103,FOLLOW_103_in_show5060); if (failed) return retval;
                            match(input,94,FOLLOW_94_in_show5062); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show5066);
                            uname=objectName();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1143:67: ( 'IN' 'GROUP' gn= objectName )?
                            int alt134=2;
                            int LA134_0 = input.LA(1);

                            if ( (LA134_0==78) ) {
                                alt134=1;
                            }
                            switch (alt134) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1143:68: 'IN' 'GROUP' gn= objectName
                                    {
                                    match(input,78,FOLLOW_78_in_show5069); if (failed) return retval;
                                    match(input,79,FOLLOW_79_in_show5071); if (failed) return retval;
                                    pushFollow(FOLLOW_objectName_in_show5075);
                                    gn=objectName();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1143:99: 'FOR' 'ROLE' rn= objectName
                            {
                            match(input,103,FOLLOW_103_in_show5081); if (failed) return retval;
                            match(input,108,FOLLOW_108_in_show5083); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show5087);
                            rn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 21 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1144:5: procPerms= 'PROCEDURE' 'PERMISSIONS' ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )?
                    {
                    procPerms=(Token)input.LT(1);
                    match(input,111,FOLLOW_111_in_show5099); if (failed) return retval;
                    match(input,45,FOLLOW_45_in_show5101); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1144:41: ( 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )? | 'FOR' 'ROLE' rn= objectName )?
                    int alt137=3;
                    int LA137_0 = input.LA(1);

                    if ( (LA137_0==103) ) {
                        int LA137_1 = input.LA(2);

                        if ( (LA137_1==94) ) {
                            alt137=1;
                        }
                        else if ( (LA137_1==108) ) {
                            alt137=2;
                        }
                    }
                    switch (alt137) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1144:42: 'FOR' 'USER' uname= objectName ( 'IN' 'GROUP' gn= objectName )?
                            {
                            match(input,103,FOLLOW_103_in_show5104); if (failed) return retval;
                            match(input,94,FOLLOW_94_in_show5106); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show5110);
                            uname=objectName();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1144:72: ( 'IN' 'GROUP' gn= objectName )?
                            int alt136=2;
                            int LA136_0 = input.LA(1);

                            if ( (LA136_0==78) ) {
                                alt136=1;
                            }
                            switch (alt136) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1144:73: 'IN' 'GROUP' gn= objectName
                                    {
                                    match(input,78,FOLLOW_78_in_show5113); if (failed) return retval;
                                    match(input,79,FOLLOW_79_in_show5115); if (failed) return retval;
                                    pushFollow(FOLLOW_objectName_in_show5119);
                                    gn=objectName();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1144:104: 'FOR' 'ROLE' rn= objectName
                            {
                            match(input,103,FOLLOW_103_in_show5125); if (failed) return retval;
                            match(input,108,FOLLOW_108_in_show5127); if (failed) return retval;
                            pushFollow(FOLLOW_objectName_in_show5131);
                            rn=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:1146:4: (wc= whereClause )?
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( (LA139_0==130) ) {
                alt139=1;
            }
            switch (alt139) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1146:5: wc= whereClause
                    {
                    pushFollow(FOLLOW_whereClause_in_show5148);
                    wc=whereClause();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:1146:22: (obc= orderByClause )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==124) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1146:23: obc= orderByClause
                    {
                    pushFollow(FOLLOW_orderByClause_in_show5155);
                    obc=orderByClause();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			CodaResponse resp = new CodaResponse();
              			if (us != null) {
              				resp = server.show (sessionKey, us.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, gn != null ? input.toString(gn.start,gn.stop) : null, null, appn != null ? input.toString(appn.start,appn.stop) : null, envn != null ? input.toString(envn.start,envn.stop) : null);
              			} else if (tgr != null) {
              				resp = server.show (sessionKey, tgr.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, uname != null ? input.toString(uname.start,uname.stop) : null, null, null, appn != null ? input.toString(appn.start,appn.stop) : null, envn != null ? input.toString(envn.start,envn.stop) : null);
              			} else if (ty != null) {
              				resp = server.show (sessionKey, ty.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, null, null, null, null);
              			} else if (ds != null) {
              				resp = server.show (sessionKey, ds.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, null, null, null, null);
              			} else if (sess != null) {
              				resp = server.show (sessionKey, sess.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, null, null, null, null);
              			} else if (app != null) {
              				resp = server.show (sessionKey, app.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, gn != null ? input.toString(gn.start,gn.stop) : null, null, null, null);
              			} else if (sysRoles != null) {
              				resp = server.show (sessionKey, sysRoles.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null,  uname != null ? input.toString(uname.start,uname.stop) : null, null, null, null, null);
              			} else if (appRoles != null) {
              				resp = server.show (sessionKey, appRoles.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null,  uname != null ? input.toString(uname.start,uname.stop) : null, gn != null ? input.toString(gn.start,gn.stop) : null, null, null, null);
              			} else if (sys != null) {
              				resp = server.show (sessionKey, sys.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, null, null, null, null);
              			} else if (appInfo != null) {
              				resp = server.show (sessionKey, appInfo.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, null, null, null, null);
              			} else if (tables != null) {
              				resp = server.show (sessionKey, tables.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, null, null, null, null);
              			} else if (forms != null) {
              				resp = server.show (sessionKey, forms.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, null, null, null, null);
              			} else if (procedures != null) {
              				resp = server.show (sessionKey, procedures.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, null, null, null, null);
              			} else if (triggers != null) {
              				resp = server.show (sessionKey, triggers.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, trigTable != null ? input.toString(trigTable.start,trigTable.stop) : null, null, null, null, null, null);
              			} else if (indexes != null) {
              				resp = server.show (sessionKey, indexes.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, null, null, null, null);
              			} else if (crons != null) {
              				resp = server.show (sessionKey, crons.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, null, null, null, null, null);
              			} else if (roles != null) {
              				resp = server.show (sessionKey, roles.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, uname != null ? input.toString(uname.start,uname.stop) : null, gn != null ? input.toString(gn.start,gn.stop) : null, null, null, null);
              			} else if (perms != null) {
              				resp = server.show (sessionKey, perms.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, uname != null ? input.toString(uname.start,uname.stop) : null, gn != null ? input.toString(gn.start,gn.stop) : null, rn != null ? input.toString(rn.start,rn.stop) : null, null, null);
              			} else if (tabPerms != null) {
              				resp = server.show (sessionKey, tabPerms.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, uname != null ? input.toString(uname.start,uname.stop) : null, gn != null ? input.toString(gn.start,gn.stop) : null, rn != null ? input.toString(rn.start,rn.stop) : null, null, null);
              			} else if (formPerms != null) {
              				resp = server.show (sessionKey, formPerms.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, uname != null ? input.toString(uname.start,uname.stop) : null, gn != null ? input.toString(gn.start,gn.stop) : null, rn != null ? input.toString(rn.start,rn.stop) : null, null, null);
              			} else if (procPerms != null) {
              				resp = server.show (sessionKey, procPerms.getText(), wc != null ? wc.value : null, obc != null ? obc.value : null, null, uname != null ? input.toString(uname.start,uname.stop) : null, gn != null ? input.toString(gn.start,gn.stop) : null, rn != null ? input.toString(rn.start,rn.stop) : null, null, null);
              			}
              			retval.response = resp;
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 66, show_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end show

    public static class describe_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start describe
    // /Users/michaelarace/CodaServer_Src/Coda.g:1196:1: describe returns [CodaResponse response] : 'DESCRIBE' ( 'USER' un= objectName | 'GROUP' gn= objectName | 'TYPE' tn= objectName | 'DATASOURCE' dsn= objectName | 'APPLICATION' appn= objectName | 'TABLE' tablen= objectName (cols= 'COLUMNS' )? | 'FORM' formn= objectName (cols= 'FIELDS' | status= 'STATUSES' | statusr= 'STATUS' 'RELATIONSHIPS' )? | 'INDEX' indexn= objectName (cols= 'COLUMNS' )? | 'PROCEDURE' procn= objectName (params= 'PARAMETERS' )? | 'TRIGGER' trigtable= objectName (bef= 'BEFORE' | 'AFTER' ) (opo= tableOperation | op= objectName ) | 'CRON' cronn= objectName (params= 'PARAMETERS' )? ) ;
    public final describe_return describe() throws RecognitionException {
        describe_return retval = new describe_return();
        retval.start = input.LT(1);
        int describe_StartIndex = input.index();
        Token cols=null;
        Token status=null;
        Token statusr=null;
        Token params=null;
        Token bef=null;
        objectName_return un = null;

        objectName_return gn = null;

        objectName_return tn = null;

        objectName_return dsn = null;

        objectName_return appn = null;

        objectName_return tablen = null;

        objectName_return formn = null;

        objectName_return indexn = null;

        objectName_return procn = null;

        objectName_return trigtable = null;

        tableOperation_return opo = null;

        objectName_return op = null;

        objectName_return cronn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 67) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1197:2: ( 'DESCRIBE' ( 'USER' un= objectName | 'GROUP' gn= objectName | 'TYPE' tn= objectName | 'DATASOURCE' dsn= objectName | 'APPLICATION' appn= objectName | 'TABLE' tablen= objectName (cols= 'COLUMNS' )? | 'FORM' formn= objectName (cols= 'FIELDS' | status= 'STATUSES' | statusr= 'STATUS' 'RELATIONSHIPS' )? | 'INDEX' indexn= objectName (cols= 'COLUMNS' )? | 'PROCEDURE' procn= objectName (params= 'PARAMETERS' )? | 'TRIGGER' trigtable= objectName (bef= 'BEFORE' | 'AFTER' ) (opo= tableOperation | op= objectName ) | 'CRON' cronn= objectName (params= 'PARAMETERS' )? ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1198:2: 'DESCRIBE' ( 'USER' un= objectName | 'GROUP' gn= objectName | 'TYPE' tn= objectName | 'DATASOURCE' dsn= objectName | 'APPLICATION' appn= objectName | 'TABLE' tablen= objectName (cols= 'COLUMNS' )? | 'FORM' formn= objectName (cols= 'FIELDS' | status= 'STATUSES' | statusr= 'STATUS' 'RELATIONSHIPS' )? | 'INDEX' indexn= objectName (cols= 'COLUMNS' )? | 'PROCEDURE' procn= objectName (params= 'PARAMETERS' )? | 'TRIGGER' trigtable= objectName (bef= 'BEFORE' | 'AFTER' ) (opo= tableOperation | op= objectName ) | 'CRON' cronn= objectName (params= 'PARAMETERS' )? )
            {
            match(input,150,FOLLOW_150_in_describe5182); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1198:13: ( 'USER' un= objectName | 'GROUP' gn= objectName | 'TYPE' tn= objectName | 'DATASOURCE' dsn= objectName | 'APPLICATION' appn= objectName | 'TABLE' tablen= objectName (cols= 'COLUMNS' )? | 'FORM' formn= objectName (cols= 'FIELDS' | status= 'STATUSES' | statusr= 'STATUS' 'RELATIONSHIPS' )? | 'INDEX' indexn= objectName (cols= 'COLUMNS' )? | 'PROCEDURE' procn= objectName (params= 'PARAMETERS' )? | 'TRIGGER' trigtable= objectName (bef= 'BEFORE' | 'AFTER' ) (opo= tableOperation | op= objectName ) | 'CRON' cronn= objectName (params= 'PARAMETERS' )? )
            int alt148=11;
            switch ( input.LA(1) ) {
            case 94:
                {
                alt148=1;
                }
                break;
            case 79:
                {
                alt148=2;
                }
                break;
            case 102:
                {
                alt148=3;
                }
                break;
            case 83:
                {
                alt148=4;
                }
                break;
            case 76:
                {
                alt148=5;
                }
                break;
            case 109:
                {
                alt148=6;
                }
                break;
            case 110:
                {
                alt148=7;
                }
                break;
            case 125:
                {
                alt148=8;
                }
                break;
            case 111:
                {
                alt148=9;
                }
                break;
            case 136:
                {
                alt148=10;
                }
                break;
            case 127:
                {
                alt148=11;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1198:13: ( 'USER' un= objectName | 'GROUP' gn= objectName | 'TYPE' tn= objectName | 'DATASOURCE' dsn= objectName | 'APPLICATION' appn= objectName | 'TABLE' tablen= objectName (cols= 'COLUMNS' )? | 'FORM' formn= objectName (cols= 'FIELDS' | status= 'STATUSES' | statusr= 'STATUS' 'RELATIONSHIPS' )? | 'INDEX' indexn= objectName (cols= 'COLUMNS' )? | 'PROCEDURE' procn= objectName (params= 'PARAMETERS' )? | 'TRIGGER' trigtable= objectName (bef= 'BEFORE' | 'AFTER' ) (opo= tableOperation | op= objectName ) | 'CRON' cronn= objectName (params= 'PARAMETERS' )? )", 148, 0, input);

                throw nvae;
            }

            switch (alt148) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1199:3: 'USER' un= objectName
                    {
                    match(input,94,FOLLOW_94_in_describe5188); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_describe5192);
                    un=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1200:4: 'GROUP' gn= objectName
                    {
                    match(input,79,FOLLOW_79_in_describe5197); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_describe5201);
                    gn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1201:4: 'TYPE' tn= objectName
                    {
                    match(input,102,FOLLOW_102_in_describe5206); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_describe5210);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1202:4: 'DATASOURCE' dsn= objectName
                    {
                    match(input,83,FOLLOW_83_in_describe5215); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_describe5219);
                    dsn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 5 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1203:4: 'APPLICATION' appn= objectName
                    {
                    match(input,76,FOLLOW_76_in_describe5224); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_describe5228);
                    appn=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 6 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1204:4: 'TABLE' tablen= objectName (cols= 'COLUMNS' )?
                    {
                    match(input,109,FOLLOW_109_in_describe5233); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_describe5237);
                    tablen=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1204:30: (cols= 'COLUMNS' )?
                    int alt141=2;
                    int LA141_0 = input.LA(1);

                    if ( (LA141_0==151) ) {
                        alt141=1;
                    }
                    switch (alt141) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1204:31: cols= 'COLUMNS'
                            {
                            cols=(Token)input.LT(1);
                            match(input,151,FOLLOW_151_in_describe5242); if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 7 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1205:4: 'FORM' formn= objectName (cols= 'FIELDS' | status= 'STATUSES' | statusr= 'STATUS' 'RELATIONSHIPS' )?
                    {
                    match(input,110,FOLLOW_110_in_describe5249); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_describe5253);
                    formn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1205:28: (cols= 'FIELDS' | status= 'STATUSES' | statusr= 'STATUS' 'RELATIONSHIPS' )?
                    int alt142=4;
                    switch ( input.LA(1) ) {
                        case 21:
                            {
                            alt142=1;
                            }
                            break;
                        case 59:
                            {
                            alt142=2;
                            }
                            break;
                        case 123:
                            {
                            alt142=3;
                            }
                            break;
                    }

                    switch (alt142) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1205:29: cols= 'FIELDS'
                            {
                            cols=(Token)input.LT(1);
                            match(input,21,FOLLOW_21_in_describe5258); if (failed) return retval;

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1205:45: status= 'STATUSES'
                            {
                            status=(Token)input.LT(1);
                            match(input,59,FOLLOW_59_in_describe5264); if (failed) return retval;

                            }
                            break;
                        case 3 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1205:65: statusr= 'STATUS' 'RELATIONSHIPS'
                            {
                            statusr=(Token)input.LT(1);
                            match(input,123,FOLLOW_123_in_describe5270); if (failed) return retval;
                            match(input,52,FOLLOW_52_in_describe5272); if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 8 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1206:4: 'INDEX' indexn= objectName (cols= 'COLUMNS' )?
                    {
                    match(input,125,FOLLOW_125_in_describe5279); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_describe5283);
                    indexn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1206:30: (cols= 'COLUMNS' )?
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( (LA143_0==151) ) {
                        alt143=1;
                    }
                    switch (alt143) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1206:31: cols= 'COLUMNS'
                            {
                            cols=(Token)input.LT(1);
                            match(input,151,FOLLOW_151_in_describe5288); if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 9 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1207:4: 'PROCEDURE' procn= objectName (params= 'PARAMETERS' )?
                    {
                    match(input,111,FOLLOW_111_in_describe5295); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_describe5299);
                    procn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1207:33: (params= 'PARAMETERS' )?
                    int alt144=2;
                    int LA144_0 = input.LA(1);

                    if ( (LA144_0==43) ) {
                        alt144=1;
                    }
                    switch (alt144) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1207:34: params= 'PARAMETERS'
                            {
                            params=(Token)input.LT(1);
                            match(input,43,FOLLOW_43_in_describe5304); if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 10 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1208:4: 'TRIGGER' trigtable= objectName (bef= 'BEFORE' | 'AFTER' ) (opo= tableOperation | op= objectName )
                    {
                    match(input,136,FOLLOW_136_in_describe5311); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_describe5315);
                    trigtable=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1208:35: (bef= 'BEFORE' | 'AFTER' )
                    int alt145=2;
                    int LA145_0 = input.LA(1);

                    if ( (LA145_0==137) ) {
                        alt145=1;
                    }
                    else if ( (LA145_0==138) ) {
                        alt145=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("1208:35: (bef= 'BEFORE' | 'AFTER' )", 145, 0, input);

                        throw nvae;
                    }
                    switch (alt145) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1208:36: bef= 'BEFORE'
                            {
                            bef=(Token)input.LT(1);
                            match(input,137,FOLLOW_137_in_describe5320); if (failed) return retval;

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1208:51: 'AFTER'
                            {
                            match(input,138,FOLLOW_138_in_describe5324); if (failed) return retval;

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:1208:60: (opo= tableOperation | op= objectName )
                    int alt146=2;
                    int LA146_0 = input.LA(1);

                    if ( ((LA146_0>=69 && LA146_0<=71)) ) {
                        alt146=1;
                    }
                    else if ( (LA146_0==ObjectName||(LA146_0>=10 && LA146_0<=66)) ) {
                        alt146=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("1208:60: (opo= tableOperation | op= objectName )", 146, 0, input);

                        throw nvae;
                    }
                    switch (alt146) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1208:61: opo= tableOperation
                            {
                            pushFollow(FOLLOW_tableOperation_in_describe5330);
                            opo=tableOperation();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1208:82: op= objectName
                            {
                            pushFollow(FOLLOW_objectName_in_describe5336);
                            op=objectName();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 11 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1209:4: 'CRON' cronn= objectName (params= 'PARAMETERS' )?
                    {
                    match(input,127,FOLLOW_127_in_describe5342); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_describe5346);
                    cronn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1209:28: (params= 'PARAMETERS' )?
                    int alt147=2;
                    int LA147_0 = input.LA(1);

                    if ( (LA147_0==43) ) {
                        alt147=1;
                    }
                    switch (alt147) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1209:29: params= 'PARAMETERS'
                            {
                            params=(Token)input.LT(1);
                            match(input,43,FOLLOW_43_in_describe5351); if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( backtracking==0 ) {

              		CodaResponse resp = new CodaResponse();
              		if (un !=null) {
              			resp = server.describe (sessionKey, "USER", input.toString(un.start,un.stop), null, true, null);
              		} else if (gn !=null) {
              			resp = server.describe (sessionKey, "GROUP", input.toString(gn.start,gn.stop), null, true, null);
              		} else if (tn !=null) {
              			resp = server.describe (sessionKey, "TYPE", input.toString(tn.start,tn.stop), null, true, null);
              		} else if (dsn !=null) {
              			resp = server.describe (sessionKey, "DATASOURCE", input.toString(dsn.start,dsn.stop), null, true, null);
              		} else if (appn !=null) {
              			resp = server.describe (sessionKey, "APPLICATION", input.toString(appn.start,appn.stop), null, true, null);
              		} else if (tablen !=null) {
              			resp = server.describe (sessionKey, "TABLE", input.toString(tablen.start,tablen.stop), cols != null ? cols.getText() : null, true, null);
              		} else if (formn !=null) {
              			String formOp = null;
              			if (cols != null) {
              				formOp = cols.getText();
              			} else if (status != null) {
              				formOp = status.getText();
              			} else if (statusr != null) {
              				formOp = "STATUS";
              			}
              			resp = server.describe (sessionKey, "FORM", input.toString(formn.start,formn.stop), formOp, true, null);
              		} else if (indexn !=null) {
              			resp = server.describe (sessionKey, "INDEX", input.toString(indexn.start,indexn.stop), cols != null ? cols.getText() : null, true, null);
              		} else if (procn !=null) {
              			resp = server.describe (sessionKey, "PROCEDURE", input.toString(procn.start,procn.stop), params != null ? params.getText() : null, true, null);
              		} else if (trigtable !=null) {
              			resp = server.describe (sessionKey, "TRIGGER", input.toString(trigtable.start,trigtable.stop), op != null ? input.toString(op.start,op.stop) : null, bef != null, opo != null ? input.toString(opo.start,opo.stop) : null);
              		} else if (cronn !=null) {
              			resp = server.describe (sessionKey, "CRON", input.toString(cronn.start,cronn.stop), params != null ? params.getText() : null, true, null);
              		}
              		retval.response = resp;
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 67, describe_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end describe

    public static class procedureParameter_return extends ParserRuleReturnScope {
        public ProcedureParameter parameter;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start procedureParameter
    // /Users/michaelarace/CodaServer_Src/Coda.g:1250:1: procedureParameter returns [ProcedureParameter parameter] : pn= objectName pt= objectName (af= 'ARRAY' )? ;
    public final procedureParameter_return procedureParameter() throws RecognitionException {
        procedureParameter_return retval = new procedureParameter_return();
        retval.start = input.LT(1);
        int procedureParameter_StartIndex = input.index();
        Token af=null;
        objectName_return pn = null;

        objectName_return pt = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 68) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1251:2: (pn= objectName pt= objectName (af= 'ARRAY' )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1251:4: pn= objectName pt= objectName (af= 'ARRAY' )?
            {
            pushFollow(FOLLOW_objectName_in_procedureParameter5377);
            pn=objectName();
            _fsp--;
            if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_procedureParameter5381);
            pt=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1251:32: (af= 'ARRAY' )?
            int alt149=2;
            int LA149_0 = input.LA(1);

            if ( (LA149_0==141) ) {
                alt149=1;
            }
            switch (alt149) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1251:33: af= 'ARRAY'
                    {
                    af=(Token)input.LT(1);
                    match(input,141,FOLLOW_141_in_procedureParameter5386); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			retval.parameter = new ProcedureParameter(input.toString(pn.start,pn.stop), input.toString(pt.start,pt.stop), af != null);
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 68, procedureParameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end procedureParameter

    public static class datasourceParameter_return extends ParserRuleReturnScope {
        public String property;
        public String value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start datasourceParameter
    // /Users/michaelarace/CodaServer_Src/Coda.g:1257:1: datasourceParameter returns [String property, String value] : p= datasourceProperty '=' v= stringLiteral ;
    public final datasourceParameter_return datasourceParameter() throws RecognitionException {
        datasourceParameter_return retval = new datasourceParameter_return();
        retval.start = input.LT(1);
        int datasourceParameter_StartIndex = input.index();
        datasourceProperty_return p = null;

        stringLiteral_return v = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 69) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1258:2: (p= datasourceProperty '=' v= stringLiteral )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1258:4: p= datasourceProperty '=' v= stringLiteral
            {
            pushFollow(FOLLOW_datasourceProperty_in_datasourceParameter5409);
            p=datasourceProperty();
            _fsp--;
            if (failed) return retval;
            match(input,99,FOLLOW_99_in_datasourceParameter5411); if (failed) return retval;
            pushFollow(FOLLOW_stringLiteral_in_datasourceParameter5415);
            v=stringLiteral();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
              retval.property = input.toString(p.start,p.stop); retval.value =v.value; 
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 69, datasourceParameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end datasourceParameter

    public static class userParameter_return extends ParserRuleReturnScope {
        public String property;
        public String value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start userParameter
    // /Users/michaelarace/CodaServer_Src/Coda.g:1260:1: userParameter returns [String property, String value] : p= userProperty '=' v= stringLiteral ;
    public final userParameter_return userParameter() throws RecognitionException {
        userParameter_return retval = new userParameter_return();
        retval.start = input.LT(1);
        int userParameter_StartIndex = input.index();
        userProperty_return p = null;

        stringLiteral_return v = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 70) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1261:2: (p= userProperty '=' v= stringLiteral )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1261:4: p= userProperty '=' v= stringLiteral
            {
            pushFollow(FOLLOW_userProperty_in_userParameter5433);
            p=userProperty();
            _fsp--;
            if (failed) return retval;
            match(input,99,FOLLOW_99_in_userParameter5435); if (failed) return retval;
            pushFollow(FOLLOW_stringLiteral_in_userParameter5439);
            v=stringLiteral();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

              		retval.property = input.toString(p.start,p.stop);
              		retval.value = v.value;
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 70, userParameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end userParameter

    public static class typeParameter_return extends ParserRuleReturnScope {
        public String property;
        public String value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start typeParameter
    // /Users/michaelarace/CodaServer_Src/Coda.g:1272:1: typeParameter returns [String property, String value] : p= typeProperty '=' v= stringLiteral ;
    public final typeParameter_return typeParameter() throws RecognitionException {
        typeParameter_return retval = new typeParameter_return();
        retval.start = input.LT(1);
        int typeParameter_StartIndex = input.index();
        typeProperty_return p = null;

        stringLiteral_return v = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 71) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1273:2: (p= typeProperty '=' v= stringLiteral )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1273:4: p= typeProperty '=' v= stringLiteral
            {
            pushFollow(FOLLOW_typeProperty_in_typeParameter5460);
            p=typeProperty();
            _fsp--;
            if (failed) return retval;
            match(input,99,FOLLOW_99_in_typeParameter5462); if (failed) return retval;
            pushFollow(FOLLOW_stringLiteral_in_typeParameter5466);
            v=stringLiteral();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
              retval.property = input.toString(p.start,p.stop); retval.value =v.value; 
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 71, typeParameter_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end typeParameter

    public static class propertyValuePair_return extends ParserRuleReturnScope {
        public String property;
        public String value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start propertyValuePair
    // /Users/michaelarace/CodaServer_Src/Coda.g:1275:1: propertyValuePair returns [String property, String value] : p= objectName '=' v= stringLiteral ;
    public final propertyValuePair_return propertyValuePair() throws RecognitionException {
        propertyValuePair_return retval = new propertyValuePair_return();
        retval.start = input.LT(1);
        int propertyValuePair_StartIndex = input.index();
        objectName_return p = null;

        stringLiteral_return v = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 72) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1276:2: (p= objectName '=' v= stringLiteral )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1276:4: p= objectName '=' v= stringLiteral
            {
            pushFollow(FOLLOW_objectName_in_propertyValuePair5484);
            p=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,99,FOLLOW_99_in_propertyValuePair5486); if (failed) return retval;
            pushFollow(FOLLOW_stringLiteral_in_propertyValuePair5490);
            v=stringLiteral();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
              retval.property = input.toString(p.start,p.stop); retval.value =v.value; 
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 72, propertyValuePair_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end propertyValuePair

    public static class inApplication_return extends ParserRuleReturnScope {
        public String applicationName;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start inApplication
    // /Users/michaelarace/CodaServer_Src/Coda.g:1278:1: inApplication returns [String applicationName] : 'IN' 'APPLICATION' p= objectName ;
    public final inApplication_return inApplication() throws RecognitionException {
        inApplication_return retval = new inApplication_return();
        retval.start = input.LT(1);
        int inApplication_StartIndex = input.index();
        objectName_return p = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 73) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1279:2: ( 'IN' 'APPLICATION' p= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1279:4: 'IN' 'APPLICATION' p= objectName
            {
            match(input,78,FOLLOW_78_in_inApplication5506); if (failed) return retval;
            match(input,76,FOLLOW_76_in_inApplication5508); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_inApplication5512);
            p=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
              retval.applicationName = input.toString(p.start,p.stop); 
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 73, inApplication_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end inApplication

    public static class applicationPrefix_return extends ParserRuleReturnScope {
        public String applicationName;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start applicationPrefix
    // /Users/michaelarace/CodaServer_Src/Coda.g:1281:1: applicationPrefix returns [String applicationName] : p= objectName '.' ;
    public final applicationPrefix_return applicationPrefix() throws RecognitionException {
        applicationPrefix_return retval = new applicationPrefix_return();
        retval.start = input.LT(1);
        int applicationPrefix_StartIndex = input.index();
        objectName_return p = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 74) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1282:2: (p= objectName '.' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1282:4: p= objectName '.'
            {
            pushFollow(FOLLOW_objectName_in_applicationPrefix5530);
            p=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,77,FOLLOW_77_in_applicationPrefix5532); if (failed) return retval;
            if ( backtracking==0 ) {
              retval.applicationName = input.toString(p.start,p.stop);
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 74, applicationPrefix_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end applicationPrefix

    public static class fieldType_return extends ParserRuleReturnScope {
        public String typeName;
        public boolean arrayFlag;
        public boolean refFlag;
        public String refTable;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start fieldType
    // /Users/michaelarace/CodaServer_Src/Coda.g:1284:1: fieldType returns [String typeName, boolean arrayFlag, boolean refFlag, String refTable] : (t= objectName | r= 'REFERENCE' 'TO' rt= objectName ) (a= 'ARRAY' )? ;
    public final fieldType_return fieldType() throws RecognitionException {
        fieldType_return retval = new fieldType_return();
        retval.start = input.LT(1);
        int fieldType_StartIndex = input.index();
        Token r=null;
        Token a=null;
        objectName_return t = null;

        objectName_return rt = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 75) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1285:2: ( (t= objectName | r= 'REFERENCE' 'TO' rt= objectName ) (a= 'ARRAY' )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1285:4: (t= objectName | r= 'REFERENCE' 'TO' rt= objectName ) (a= 'ARRAY' )?
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:1285:4: (t= objectName | r= 'REFERENCE' 'TO' rt= objectName )
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==ObjectName||(LA150_0>=10 && LA150_0<=66)) ) {
                alt150=1;
            }
            else if ( (LA150_0==152) ) {
                alt150=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1285:4: (t= objectName | r= 'REFERENCE' 'TO' rt= objectName )", 150, 0, input);

                throw nvae;
            }
            switch (alt150) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1285:5: t= objectName
                    {
                    pushFollow(FOLLOW_objectName_in_fieldType5551);
                    t=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1285:20: r= 'REFERENCE' 'TO' rt= objectName
                    {
                    r=(Token)input.LT(1);
                    match(input,152,FOLLOW_152_in_fieldType5557); if (failed) return retval;
                    match(input,75,FOLLOW_75_in_fieldType5559); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_fieldType5563);
                    rt=objectName();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:1285:55: (a= 'ARRAY' )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==141) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: a= 'ARRAY'
                    {
                    a=(Token)input.LT(1);
                    match(input,141,FOLLOW_141_in_fieldType5568); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			if (r == null) {
              				retval.typeName =input.toString(t.start,t.stop); 
              				retval.refFlag =false; 
              				retval.refTable =null;
              			}else {
              				retval.typeName ="REFERENCE"; 
              				retval.refFlag =true; 
              				retval.refTable =input.toString(rt.start,rt.stop);
              			} 
              			retval.arrayFlag = !( a == null);
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 75, fieldType_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end fieldType

    public static class tableFieldDefinition_return extends ParserRuleReturnScope {
        public TableFieldDefinition def;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start tableFieldDefinition
    // /Users/michaelarace/CodaServer_Src/Coda.g:1299:1: tableFieldDefinition returns [TableFieldDefinition def] : fn= objectName ft= fieldType (da= displayedAs )? ( 'NULL' | nn= 'NOT' 'NULL' )? ( 'DEFAULT' (sv= systemVariable | sl= stringLiteral | al= arrayLiteral ) )? ;
    public final tableFieldDefinition_return tableFieldDefinition() throws RecognitionException {
        tableFieldDefinition_return retval = new tableFieldDefinition_return();
        retval.start = input.LT(1);
        int tableFieldDefinition_StartIndex = input.index();
        Token nn=null;
        objectName_return fn = null;

        fieldType_return ft = null;

        displayedAs_return da = null;

        systemVariable_return sv = null;

        stringLiteral_return sl = null;

        arrayLiteral_return al = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 76) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1300:2: (fn= objectName ft= fieldType (da= displayedAs )? ( 'NULL' | nn= 'NOT' 'NULL' )? ( 'DEFAULT' (sv= systemVariable | sl= stringLiteral | al= arrayLiteral ) )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1300:4: fn= objectName ft= fieldType (da= displayedAs )? ( 'NULL' | nn= 'NOT' 'NULL' )? ( 'DEFAULT' (sv= systemVariable | sl= stringLiteral | al= arrayLiteral ) )?
            {
            pushFollow(FOLLOW_objectName_in_tableFieldDefinition5590);
            fn=objectName();
            _fsp--;
            if (failed) return retval;
            pushFollow(FOLLOW_fieldType_in_tableFieldDefinition5594);
            ft=fieldType();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1300:33: (da= displayedAs )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==163) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: da= displayedAs
                    {
                    pushFollow(FOLLOW_displayedAs_in_tableFieldDefinition5598);
                    da=displayedAs();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:1300:47: ( 'NULL' | nn= 'NOT' 'NULL' )?
            int alt153=3;
            int LA153_0 = input.LA(1);

            if ( (LA153_0==153) ) {
                alt153=1;
            }
            else if ( (LA153_0==154) ) {
                alt153=2;
            }
            switch (alt153) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1300:48: 'NULL'
                    {
                    match(input,153,FOLLOW_153_in_tableFieldDefinition5602); if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1300:57: nn= 'NOT' 'NULL'
                    {
                    nn=(Token)input.LT(1);
                    match(input,154,FOLLOW_154_in_tableFieldDefinition5608); if (failed) return retval;
                    match(input,153,FOLLOW_153_in_tableFieldDefinition5610); if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:1300:76: ( 'DEFAULT' (sv= systemVariable | sl= stringLiteral | al= arrayLiteral ) )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==155) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1300:77: 'DEFAULT' (sv= systemVariable | sl= stringLiteral | al= arrayLiteral )
                    {
                    match(input,155,FOLLOW_155_in_tableFieldDefinition5616); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1300:87: (sv= systemVariable | sl= stringLiteral | al= arrayLiteral )
                    int alt154=3;
                    switch ( input.LA(1) ) {
                    case 195:
                    case 196:
                    case 197:
                    case 198:
                        {
                        alt154=1;
                        }
                        break;
                    case UnicodeStringLiteral:
                    case ASCIIStringLiteral:
                        {
                        alt154=2;
                        }
                        break;
                    case 161:
                        {
                        alt154=3;
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("1300:87: (sv= systemVariable | sl= stringLiteral | al= arrayLiteral )", 154, 0, input);

                        throw nvae;
                    }

                    switch (alt154) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1300:88: sv= systemVariable
                            {
                            pushFollow(FOLLOW_systemVariable_in_tableFieldDefinition5621);
                            sv=systemVariable();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1300:108: sl= stringLiteral
                            {
                            pushFollow(FOLLOW_stringLiteral_in_tableFieldDefinition5627);
                            sl=stringLiteral();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;
                        case 3 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1300:127: al= arrayLiteral
                            {
                            pushFollow(FOLLOW_arrayLiteral_in_tableFieldDefinition5633);
                            al=arrayLiteral();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( backtracking==0 ) {

              			if (sv == null) {
              				retval.def =new TableFieldDefinition(input.toString(fn.start,fn.stop), ft.typeName, da != null ? da.displayName : null, ft.arrayFlag, ft.refFlag, ft.refTable, (al != null ? input.toString(al.start,al.stop) : (sl != null ? sl.value : null))); 
              			} else {
              				retval.def =new TableFieldDefinition(input.toString(fn.start,fn.stop), ft.typeName, da != null ? da.displayName : null, ft.arrayFlag, ft.refFlag, ft.refTable, (sv != null ? (input.toString(sv.start,sv.stop).equalsIgnoreCase("CURRENT_TIMESTAMP") ? 1 : (input.toString(sv.start,sv.stop).equalsIgnoreCase("CURRENT_USERNAME") ? 5 : (input.toString(sv.start,sv.stop).equalsIgnoreCase("CURRENT_GROUP_NAME") ? 3 : null))) : null)); 
              			}
              			retval.def.setNullableFlag(nn == null);
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 76, tableFieldDefinition_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end tableFieldDefinition

    public static class tableFieldDefinitionWithIdentity_return extends ParserRuleReturnScope {
        public TableFieldDefinition def;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start tableFieldDefinitionWithIdentity
    // /Users/michaelarace/CodaServer_Src/Coda.g:1310:1: tableFieldDefinitionWithIdentity returns [TableFieldDefinition def] : tfd= tableFieldDefinition (i= 'IDENTITY' )? ;
    public final tableFieldDefinitionWithIdentity_return tableFieldDefinitionWithIdentity() throws RecognitionException {
        tableFieldDefinitionWithIdentity_return retval = new tableFieldDefinitionWithIdentity_return();
        retval.start = input.LT(1);
        int tableFieldDefinitionWithIdentity_StartIndex = input.index();
        Token i=null;
        tableFieldDefinition_return tfd = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 77) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1311:2: (tfd= tableFieldDefinition (i= 'IDENTITY' )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1311:4: tfd= tableFieldDefinition (i= 'IDENTITY' )?
            {
            pushFollow(FOLLOW_tableFieldDefinition_in_tableFieldDefinitionWithIdentity5658);
            tfd=tableFieldDefinition();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1311:30: (i= 'IDENTITY' )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==120) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: i= 'IDENTITY'
                    {
                    i=(Token)input.LT(1);
                    match(input,120,FOLLOW_120_in_tableFieldDefinitionWithIdentity5662); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {
              retval.def = tfd.def; retval.def.setIdentityFlag(!(i == null));
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 77, tableFieldDefinitionWithIdentity_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end tableFieldDefinitionWithIdentity

    public static class formFieldDefinition_return extends ParserRuleReturnScope {
        public TableFieldDefinition def;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start formFieldDefinition
    // /Users/michaelarace/CodaServer_Src/Coda.g:1314:1: formFieldDefinition returns [TableFieldDefinition def] : fn= objectName ft= fieldType (da= displayedAs )? ( 'DEFAULT' (sv= systemVariable | sl= stringLiteral | al= arrayLiteral ) )? ;
    public final formFieldDefinition_return formFieldDefinition() throws RecognitionException {
        formFieldDefinition_return retval = new formFieldDefinition_return();
        retval.start = input.LT(1);
        int formFieldDefinition_StartIndex = input.index();
        objectName_return fn = null;

        fieldType_return ft = null;

        displayedAs_return da = null;

        systemVariable_return sv = null;

        stringLiteral_return sl = null;

        arrayLiteral_return al = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 78) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1315:2: (fn= objectName ft= fieldType (da= displayedAs )? ( 'DEFAULT' (sv= systemVariable | sl= stringLiteral | al= arrayLiteral ) )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1315:4: fn= objectName ft= fieldType (da= displayedAs )? ( 'DEFAULT' (sv= systemVariable | sl= stringLiteral | al= arrayLiteral ) )?
            {
            pushFollow(FOLLOW_objectName_in_formFieldDefinition5683);
            fn=objectName();
            _fsp--;
            if (failed) return retval;
            pushFollow(FOLLOW_fieldType_in_formFieldDefinition5687);
            ft=fieldType();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1315:33: (da= displayedAs )?
            int alt157=2;
            int LA157_0 = input.LA(1);

            if ( (LA157_0==163) ) {
                alt157=1;
            }
            switch (alt157) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: da= displayedAs
                    {
                    pushFollow(FOLLOW_displayedAs_in_formFieldDefinition5691);
                    da=displayedAs();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:1315:47: ( 'DEFAULT' (sv= systemVariable | sl= stringLiteral | al= arrayLiteral ) )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==155) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1315:48: 'DEFAULT' (sv= systemVariable | sl= stringLiteral | al= arrayLiteral )
                    {
                    match(input,155,FOLLOW_155_in_formFieldDefinition5695); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1315:58: (sv= systemVariable | sl= stringLiteral | al= arrayLiteral )
                    int alt158=3;
                    switch ( input.LA(1) ) {
                    case 195:
                    case 196:
                    case 197:
                    case 198:
                        {
                        alt158=1;
                        }
                        break;
                    case UnicodeStringLiteral:
                    case ASCIIStringLiteral:
                        {
                        alt158=2;
                        }
                        break;
                    case 161:
                        {
                        alt158=3;
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("1315:58: (sv= systemVariable | sl= stringLiteral | al= arrayLiteral )", 158, 0, input);

                        throw nvae;
                    }

                    switch (alt158) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1315:59: sv= systemVariable
                            {
                            pushFollow(FOLLOW_systemVariable_in_formFieldDefinition5700);
                            sv=systemVariable();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1315:79: sl= stringLiteral
                            {
                            pushFollow(FOLLOW_stringLiteral_in_formFieldDefinition5706);
                            sl=stringLiteral();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;
                        case 3 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1315:98: al= arrayLiteral
                            {
                            pushFollow(FOLLOW_arrayLiteral_in_formFieldDefinition5712);
                            al=arrayLiteral();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( backtracking==0 ) {
              retval.def =new TableFieldDefinition(input.toString(fn.start,fn.stop), ft.typeName, da != null ? da.displayName : null, ft.arrayFlag, ft.refFlag, ft.refTable, (al != null ? input.toString(al.start,al.stop) : (sl != null ? sl.value : (sv != null ? input.toString(sv.start,sv.stop) : null))));
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 78, formFieldDefinition_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formFieldDefinition

    public static class formFieldDefinitionWithIdentity_return extends ParserRuleReturnScope {
        public TableFieldDefinition def;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start formFieldDefinitionWithIdentity
    // /Users/michaelarace/CodaServer_Src/Coda.g:1318:1: formFieldDefinitionWithIdentity returns [TableFieldDefinition def] : tfd= tableFieldDefinition (i= 'IDENTITY' )? ;
    public final formFieldDefinitionWithIdentity_return formFieldDefinitionWithIdentity() throws RecognitionException {
        formFieldDefinitionWithIdentity_return retval = new formFieldDefinitionWithIdentity_return();
        retval.start = input.LT(1);
        int formFieldDefinitionWithIdentity_StartIndex = input.index();
        Token i=null;
        tableFieldDefinition_return tfd = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 79) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1319:2: (tfd= tableFieldDefinition (i= 'IDENTITY' )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1319:4: tfd= tableFieldDefinition (i= 'IDENTITY' )?
            {
            pushFollow(FOLLOW_tableFieldDefinition_in_formFieldDefinitionWithIdentity5737);
            tfd=tableFieldDefinition();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1319:30: (i= 'IDENTITY' )?
            int alt160=2;
            int LA160_0 = input.LA(1);

            if ( (LA160_0==120) ) {
                alt160=1;
            }
            switch (alt160) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: i= 'IDENTITY'
                    {
                    i=(Token)input.LT(1);
                    match(input,120,FOLLOW_120_in_formFieldDefinitionWithIdentity5741); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {
              retval.def = tfd.def; retval.def.setIdentityFlag(!(i == null));
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 79, formFieldDefinitionWithIdentity_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formFieldDefinitionWithIdentity

    public static class formStatusDefinition_return extends ParserRuleReturnScope {
        public FormStatusLeadsTo status;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start formStatusDefinition
    // /Users/michaelarace/CodaServer_Src/Coda.g:1322:1: formStatusDefinition returns [FormStatusLeadsTo status] : sa= objectName 'LEADS' 'TO' ( '(' sna= objectName ( ',' sna= objectName )* ')' | 'NOTHING' ) ;
    public final formStatusDefinition_return formStatusDefinition() throws RecognitionException {
        formStatusDefinition_return retval = new formStatusDefinition_return();
        retval.start = input.LT(1);
        int formStatusDefinition_StartIndex = input.index();
        objectName_return sa = null;

        objectName_return sna = null;



        	Vector<String> statuses = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 80) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1326:2: (sa= objectName 'LEADS' 'TO' ( '(' sna= objectName ( ',' sna= objectName )* ')' | 'NOTHING' ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1326:4: sa= objectName 'LEADS' 'TO' ( '(' sna= objectName ( ',' sna= objectName )* ')' | 'NOTHING' )
            {
            pushFollow(FOLLOW_objectName_in_formStatusDefinition5767);
            sa=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,156,FOLLOW_156_in_formStatusDefinition5769); if (failed) return retval;
            match(input,75,FOLLOW_75_in_formStatusDefinition5771); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1326:31: ( '(' sna= objectName ( ',' sna= objectName )* ')' | 'NOTHING' )
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==84) ) {
                alt162=1;
            }
            else if ( (LA162_0==157) ) {
                alt162=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1326:31: ( '(' sna= objectName ( ',' sna= objectName )* ')' | 'NOTHING' )", 162, 0, input);

                throw nvae;
            }
            switch (alt162) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1326:33: '(' sna= objectName ( ',' sna= objectName )* ')'
                    {
                    match(input,84,FOLLOW_84_in_formStatusDefinition5775); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_formStatusDefinition5779);
                    sna=objectName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       statuses.add(input.toString(sna.start,sna.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1326:82: ( ',' sna= objectName )*
                    loop161:
                    do {
                        int alt161=2;
                        int LA161_0 = input.LA(1);

                        if ( (LA161_0==85) ) {
                            alt161=1;
                        }


                        switch (alt161) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1326:83: ',' sna= objectName
                    	    {
                    	    match(input,85,FOLLOW_85_in_formStatusDefinition5785); if (failed) return retval;
                    	    pushFollow(FOLLOW_objectName_in_formStatusDefinition5789);
                    	    sna=objectName();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       statuses.add(input.toString(sna.start,sna.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop161;
                        }
                    } while (true);

                    match(input,86,FOLLOW_86_in_formStatusDefinition5796); if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1326:140: 'NOTHING'
                    {
                    match(input,157,FOLLOW_157_in_formStatusDefinition5800); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              			retval.status = new FormStatusLeadsTo( input.toString(sa.start,sa.stop), (statuses.size() == 0 ? null : statuses ));
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 80, formStatusDefinition_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formStatusDefinition

    public static class formStatusCreationDefinition_return extends ParserRuleReturnScope {
        public FormStatusDefinition def;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start formStatusCreationDefinition
    // /Users/michaelarace/CodaServer_Src/Coda.g:1331:1: formStatusCreationDefinition returns [FormStatusDefinition def ] : '(' sa= objectName (sad= displayedAs )? ',' sv= objectName (svd= displayedAs )? (ini= 'INITIAL' )? ')' ;
    public final formStatusCreationDefinition_return formStatusCreationDefinition() throws RecognitionException {
        formStatusCreationDefinition_return retval = new formStatusCreationDefinition_return();
        retval.start = input.LT(1);
        int formStatusCreationDefinition_StartIndex = input.index();
        Token ini=null;
        objectName_return sa = null;

        displayedAs_return sad = null;

        objectName_return sv = null;

        displayedAs_return svd = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 81) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1332:2: ( '(' sa= objectName (sad= displayedAs )? ',' sv= objectName (svd= displayedAs )? (ini= 'INITIAL' )? ')' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1332:4: '(' sa= objectName (sad= displayedAs )? ',' sv= objectName (svd= displayedAs )? (ini= 'INITIAL' )? ')'
            {
            match(input,84,FOLLOW_84_in_formStatusCreationDefinition5821); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_formStatusCreationDefinition5825);
            sa=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1332:25: (sad= displayedAs )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==163) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: sad= displayedAs
                    {
                    pushFollow(FOLLOW_displayedAs_in_formStatusCreationDefinition5829);
                    sad=displayedAs();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            match(input,85,FOLLOW_85_in_formStatusCreationDefinition5832); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_formStatusCreationDefinition5836);
            sv=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1332:60: (svd= displayedAs )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==163) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: svd= displayedAs
                    {
                    pushFollow(FOLLOW_displayedAs_in_formStatusCreationDefinition5840);
                    svd=displayedAs();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:1332:74: (ini= 'INITIAL' )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==158) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1332:75: ini= 'INITIAL'
                    {
                    ini=(Token)input.LT(1);
                    match(input,158,FOLLOW_158_in_formStatusCreationDefinition5846); if (failed) return retval;

                    }
                    break;

            }

            match(input,86,FOLLOW_86_in_formStatusCreationDefinition5850); if (failed) return retval;
            if ( backtracking==0 ) {

              			retval.def = new FormStatusDefinition(input.toString(sa.start,sa.stop), sad != null ? sad.displayName : null, input.toString(sv.start,sv.stop), svd != null ? svd.displayName : null, (ini != null));
              		
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 81, formStatusCreationDefinition_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formStatusCreationDefinition

    public static class insertValuesList_return extends ParserRuleReturnScope {
        public Vector<String> values;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start insertValuesList
    // /Users/michaelarace/CodaServer_Src/Coda.g:1338:1: insertValuesList returns [Vector<String> values] : '(' vl= insertUpdateValue ( ',' vl= insertUpdateValue )* ')' ;
    public final insertValuesList_return insertValuesList() throws RecognitionException {
        insertValuesList_return retval = new insertValuesList_return();
        retval.start = input.LT(1);
        int insertValuesList_StartIndex = input.index();
        insertUpdateValue_return vl = null;



        	Vector<CodaConstant> constants = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 82) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1342:2: ( '(' vl= insertUpdateValue ( ',' vl= insertUpdateValue )* ')' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1342:4: '(' vl= insertUpdateValue ( ',' vl= insertUpdateValue )* ')'
            {
            match(input,84,FOLLOW_84_in_insertValuesList5876); if (failed) return retval;
            pushFollow(FOLLOW_insertUpdateValue_in_insertValuesList5880);
            vl=insertUpdateValue();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               constants.add(vl.value); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1342:60: ( ',' vl= insertUpdateValue )*
            loop166:
            do {
                int alt166=2;
                int LA166_0 = input.LA(1);

                if ( (LA166_0==85) ) {
                    alt166=1;
                }


                switch (alt166) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:1342:61: ',' vl= insertUpdateValue
            	    {
            	    match(input,85,FOLLOW_85_in_insertValuesList5886); if (failed) return retval;
            	    pushFollow(FOLLOW_insertUpdateValue_in_insertValuesList5890);
            	    vl=insertUpdateValue();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       constants.add(vl.value); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop166;
                }
            } while (true);

            match(input,86,FOLLOW_86_in_insertValuesList5899); if (failed) return retval;
            if ( backtracking==0 ) {

              		retval.values = new Vector();
              		for (int i = 0; i < constants.size(); i++) {
              			CodaConstant temp = constants.get(i);
              			switch (temp.getSysvar()) {
              				case CodaConstant.SYSVAR_CURRENT_TIMESTAMP:
              					retval.values.add("CURRENT_TIMESTAMP");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_USER_ID:
              					retval.values.add("CURRENT_USER_ID");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_USERNAME:
              					retval.values.add("CURRENT_USERNAME");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_GROUP_NAME:
              					retval.values.add("CURRENT_GROUP_NAME");
              					break;
              				case CodaConstant.SYSVAR_NULL:
              					retval.values.add(null);
              					break;
              				default:
              					retval.values.add(temp.getValue());
              			}
              		}
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 82, insertValuesList_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end insertValuesList

    public static class insertUpdateValue_return extends ParserRuleReturnScope {
        public CodaConstant value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start insertUpdateValue
    // /Users/michaelarace/CodaServer_Src/Coda.g:1370:1: insertUpdateValue returns [CodaConstant value] : (n= 'NULL' | sv= systemVariable | sl= stringLiteral | al= arrayLiteral ) ;
    public final insertUpdateValue_return insertUpdateValue() throws RecognitionException {
        insertUpdateValue_return retval = new insertUpdateValue_return();
        retval.start = input.LT(1);
        int insertUpdateValue_StartIndex = input.index();
        Token n=null;
        systemVariable_return sv = null;

        stringLiteral_return sl = null;

        arrayLiteral_return al = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 83) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1371:2: ( (n= 'NULL' | sv= systemVariable | sl= stringLiteral | al= arrayLiteral ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1371:5: (n= 'NULL' | sv= systemVariable | sl= stringLiteral | al= arrayLiteral )
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:1371:5: (n= 'NULL' | sv= systemVariable | sl= stringLiteral | al= arrayLiteral )
            int alt167=4;
            switch ( input.LA(1) ) {
            case 153:
                {
                alt167=1;
                }
                break;
            case 195:
            case 196:
            case 197:
            case 198:
                {
                alt167=2;
                }
                break;
            case UnicodeStringLiteral:
            case ASCIIStringLiteral:
                {
                alt167=3;
                }
                break;
            case 161:
                {
                alt167=4;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1371:5: (n= 'NULL' | sv= systemVariable | sl= stringLiteral | al= arrayLiteral )", 167, 0, input);

                throw nvae;
            }

            switch (alt167) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1371:6: n= 'NULL'
                    {
                    n=(Token)input.LT(1);
                    match(input,153,FOLLOW_153_in_insertUpdateValue5922); if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1371:17: sv= systemVariable
                    {
                    pushFollow(FOLLOW_systemVariable_in_insertUpdateValue5928);
                    sv=systemVariable();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1371:37: sl= stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_insertUpdateValue5934);
                    sl=stringLiteral();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1371:56: al= arrayLiteral
                    {
                    pushFollow(FOLLOW_arrayLiteral_in_insertUpdateValue5940);
                    al=arrayLiteral();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              		if (n != null) {
              	    		retval.value = new CodaConstant(CodaConstant.SYSVAR_NULL);
              	    	} else if (sv != null) {
              	    		if (input.toString(sv.start,sv.stop).equalsIgnoreCase("CURRENT_TIMESTAMP")) {
              	    			retval.value = new CodaConstant(CodaConstant.SYSVAR_CURRENT_TIMESTAMP);
              	    		} else if (input.toString(sv.start,sv.stop).equalsIgnoreCase("CURRENT_USER_ID")) {
              	    			retval.value = new CodaConstant(CodaConstant.SYSVAR_CURRENT_USER_ID);
              	    		} else if (input.toString(sv.start,sv.stop).equalsIgnoreCase("CURRENT_USERNAME")) {
              	    			retval.value = new CodaConstant(CodaConstant.SYSVAR_CURRENT_USERNAME);
              	    		} else if (input.toString(sv.start,sv.stop).equalsIgnoreCase("CURRENT_GROUP_NAME")) {
              	    			retval.value = new CodaConstant(CodaConstant.SYSVAR_CURRENT_GROUP_NAME);
              	    		} 
              	    	} else if (al != null) {
              	    		retval.value = new CodaConstant(input.toString(al.start,al.stop), true);
              	    	} else {
              	    		retval.value = new CodaConstant(sl.value);
              	    	}		
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 83, insertUpdateValue_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end insertUpdateValue

    public static class setDisplay_return extends ParserRuleReturnScope {
        public String displayName;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start setDisplay
    // /Users/michaelarace/CodaServer_Src/Coda.g:1401:1: setDisplay returns [String displayName] : 'SET' 'DISPLAY' dn= stringLiteral ;
    public final setDisplay_return setDisplay() throws RecognitionException {
        setDisplay_return retval = new setDisplay_return();
        retval.start = input.LT(1);
        int setDisplay_StartIndex = input.index();
        stringLiteral_return dn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 84) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1402:2: ( 'SET' 'DISPLAY' dn= stringLiteral )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1402:4: 'SET' 'DISPLAY' dn= stringLiteral
            {
            match(input,81,FOLLOW_81_in_setDisplay5965); if (failed) return retval;
            match(input,159,FOLLOW_159_in_setDisplay5967); if (failed) return retval;
            pushFollow(FOLLOW_stringLiteral_in_setDisplay5971);
            dn=stringLiteral();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
              retval.displayName =dn.value;
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 84, setDisplay_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end setDisplay

    public static class renameTo_return extends ParserRuleReturnScope {
        public String newName;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start renameTo
    // /Users/michaelarace/CodaServer_Src/Coda.g:1405:1: renameTo returns [String newName] : 'RENAME' 'TO' nn= objectName ;
    public final renameTo_return renameTo() throws RecognitionException {
        renameTo_return retval = new renameTo_return();
        retval.start = input.LT(1);
        int renameTo_StartIndex = input.index();
        objectName_return nn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 85) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1406:2: ( 'RENAME' 'TO' nn= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1406:4: 'RENAME' 'TO' nn= objectName
            {
            match(input,160,FOLLOW_160_in_renameTo5989); if (failed) return retval;
            match(input,75,FOLLOW_75_in_renameTo5991); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_renameTo5995);
            nn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               retval.newName =input.toString(nn.start,nn.stop);
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 85, renameTo_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end renameTo

    public static class arrayLiteral_return extends ParserRuleReturnScope {
        public Vector values;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start arrayLiteral
    // /Users/michaelarace/CodaServer_Src/Coda.g:1409:1: arrayLiteral returns [Vector values] : '[' val= stringLiteral ( ',' val= stringLiteral )* ']' ;
    public final arrayLiteral_return arrayLiteral() throws RecognitionException {
        arrayLiteral_return retval = new arrayLiteral_return();
        retval.start = input.LT(1);
        int arrayLiteral_StartIndex = input.index();
        stringLiteral_return val = null;



        	retval.values = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 86) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1413:2: ( '[' val= stringLiteral ( ',' val= stringLiteral )* ']' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1413:4: '[' val= stringLiteral ( ',' val= stringLiteral )* ']'
            {
            match(input,161,FOLLOW_161_in_arrayLiteral6018); if (failed) return retval;
            pushFollow(FOLLOW_stringLiteral_in_arrayLiteral6022);
            val=stringLiteral();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               retval.values.add(val.value); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1413:55: ( ',' val= stringLiteral )*
            loop168:
            do {
                int alt168=2;
                int LA168_0 = input.LA(1);

                if ( (LA168_0==85) ) {
                    alt168=1;
                }


                switch (alt168) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:1413:56: ',' val= stringLiteral
            	    {
            	    match(input,85,FOLLOW_85_in_arrayLiteral6027); if (failed) return retval;
            	    pushFollow(FOLLOW_stringLiteral_in_arrayLiteral6031);
            	    val=stringLiteral();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       retval.values.add(val.value); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop168;
                }
            } while (true);

            match(input,162,FOLLOW_162_in_arrayLiteral6038); if (failed) return retval;

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 86, arrayLiteral_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end arrayLiteral

    public static class displayedAs_return extends ParserRuleReturnScope {
        public String displayName;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start displayedAs
    // /Users/michaelarace/CodaServer_Src/Coda.g:1416:1: displayedAs returns [String displayName] : 'DISPLAYED' 'AS' dn= stringLiteral ;
    public final displayedAs_return displayedAs() throws RecognitionException {
        displayedAs_return retval = new displayedAs_return();
        retval.start = input.LT(1);
        int displayedAs_StartIndex = input.index();
        stringLiteral_return dn = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 87) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1417:2: ( 'DISPLAYED' 'AS' dn= stringLiteral )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1417:4: 'DISPLAYED' 'AS' dn= stringLiteral
            {
            match(input,163,FOLLOW_163_in_displayedAs6055); if (failed) return retval;
            match(input,97,FOLLOW_97_in_displayedAs6057); if (failed) return retval;
            pushFollow(FOLLOW_stringLiteral_in_displayedAs6061);
            dn=stringLiteral();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
              retval.displayName =dn.value;
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 87, displayedAs_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end displayedAs

    public static class select_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start select
    // /Users/michaelarace/CodaServer_Src/Coda.g:1486:1: select returns [CodaResponse response] : sc= selectClause (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )? ;
    public final select_return select() throws RecognitionException {
        select_return retval = new select_return();
        retval.start = input.LT(1);
        int select_StartIndex = input.index();
        selectClause_return sc = null;

        fromClause_return fc = null;

        whereClause_return wc = null;

        groupByClause_return gb = null;

        havingClause_return hc = null;

        orderByClause_return oc = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 88) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1487:5: (sc= selectClause (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1488:5: sc= selectClause (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )?
            {
            pushFollow(FOLLOW_selectClause_in_select6097);
            sc=selectClause();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1489:5: (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )?
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==113) ) {
                alt173=1;
            }
            switch (alt173) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1489:6: fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )?
                    {
                    pushFollow(FOLLOW_fromClause_in_select6106);
                    fc=fromClause();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1490:6: (wc= whereClause )?
                    int alt169=2;
                    int LA169_0 = input.LA(1);

                    if ( (LA169_0==130) ) {
                        alt169=1;
                    }
                    switch (alt169) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1490:7: wc= whereClause
                            {
                            pushFollow(FOLLOW_whereClause_in_select6116);
                            wc=whereClause();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:1491:6: (gb= groupByClause (hc= havingClause )? )?
                    int alt171=2;
                    int LA171_0 = input.LA(1);

                    if ( (LA171_0==79) ) {
                        alt171=1;
                    }
                    switch (alt171) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1491:7: gb= groupByClause (hc= havingClause )?
                            {
                            pushFollow(FOLLOW_groupByClause_in_select6128);
                            gb=groupByClause();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1491:24: (hc= havingClause )?
                            int alt170=2;
                            int LA170_0 = input.LA(1);

                            if ( (LA170_0==201) ) {
                                alt170=1;
                            }
                            switch (alt170) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1491:25: hc= havingClause
                                    {
                                    pushFollow(FOLLOW_havingClause_in_select6133);
                                    hc=havingClause();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:1492:6: (oc= orderByClause )?
                    int alt172=2;
                    int LA172_0 = input.LA(1);

                    if ( (LA172_0==124) ) {
                        alt172=1;
                    }
                    switch (alt172) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1492:7: oc= orderByClause
                            {
                            pushFollow(FOLLOW_orderByClause_in_select6148);
                            oc=orderByClause();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( backtracking==0 ) {

                  	CodaFromClause localFromClause = fc.value;
                  	localFromClause.setFromClause(input.toString(fc.start,fc.stop));
                  	try {
                  		retval.response = server.select(sessionKey, sc.value, (fc != null ? localFromClause : null), (wc != null ? wc.value : null), gb != null ? gb.value.toString() : null, hc != null ? hc.value.print(localFromClause) : null, oc != null ? oc.value.toString() : null, sc.top, sc.startingAt, null); 
                  	} catch (CodaException e) {
                  		retval.response = new CodaResponse(true, null, 8004);
                  	}
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 88, select_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end select

    public static class selectNoCommit_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start selectNoCommit
    // /Users/michaelarace/CodaServer_Src/Coda.g:1505:1: selectNoCommit[CodaConnection connection] returns [CodaResponse response] : sc= selectClause (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )? ;
    public final selectNoCommit_return selectNoCommit(CodaConnection connection) throws RecognitionException {
        selectNoCommit_return retval = new selectNoCommit_return();
        retval.start = input.LT(1);
        int selectNoCommit_StartIndex = input.index();
        selectClause_return sc = null;

        fromClause_return fc = null;

        whereClause_return wc = null;

        groupByClause_return gb = null;

        havingClause_return hc = null;

        orderByClause_return oc = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 89) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1506:5: (sc= selectClause (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1507:5: sc= selectClause (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )?
            {
            pushFollow(FOLLOW_selectClause_in_selectNoCommit6192);
            sc=selectClause();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1508:5: (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )?
            int alt178=2;
            int LA178_0 = input.LA(1);

            if ( (LA178_0==113) ) {
                alt178=1;
            }
            switch (alt178) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1508:6: fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )?
                    {
                    pushFollow(FOLLOW_fromClause_in_selectNoCommit6201);
                    fc=fromClause();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1509:6: (wc= whereClause )?
                    int alt174=2;
                    int LA174_0 = input.LA(1);

                    if ( (LA174_0==130) ) {
                        alt174=1;
                    }
                    switch (alt174) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1509:7: wc= whereClause
                            {
                            pushFollow(FOLLOW_whereClause_in_selectNoCommit6211);
                            wc=whereClause();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:1510:6: (gb= groupByClause (hc= havingClause )? )?
                    int alt176=2;
                    int LA176_0 = input.LA(1);

                    if ( (LA176_0==79) ) {
                        alt176=1;
                    }
                    switch (alt176) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1510:7: gb= groupByClause (hc= havingClause )?
                            {
                            pushFollow(FOLLOW_groupByClause_in_selectNoCommit6223);
                            gb=groupByClause();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1510:24: (hc= havingClause )?
                            int alt175=2;
                            int LA175_0 = input.LA(1);

                            if ( (LA175_0==201) ) {
                                alt175=1;
                            }
                            switch (alt175) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1510:25: hc= havingClause
                                    {
                                    pushFollow(FOLLOW_havingClause_in_selectNoCommit6228);
                                    hc=havingClause();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:1511:6: (oc= orderByClause )?
                    int alt177=2;
                    int LA177_0 = input.LA(1);

                    if ( (LA177_0==124) ) {
                        alt177=1;
                    }
                    switch (alt177) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1511:7: oc= orderByClause
                            {
                            pushFollow(FOLLOW_orderByClause_in_selectNoCommit6243);
                            oc=orderByClause();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( backtracking==0 ) {

                  	CodaFromClause localFromClause = fc.value;
                  	localFromClause.setFromClause(input.toString(fc.start,fc.stop));
                  	try {
                  		retval.response = server.select(sessionKey, sc.value, (fc != null ? localFromClause : null), (wc != null ? wc.value : null), gb != null ? gb.value.toString() : null, hc != null ? hc.value.print(localFromClause) : null, oc != null ? oc.value.toString() : null, sc.top, sc.startingAt, connection); 
                  	} catch (CodaException e) {
                  		retval.response = new CodaResponse(true, null, 8004);
                  	}
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 89, selectNoCommit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end selectNoCommit

    public static class sysSelect_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start sysSelect
    // /Users/michaelarace/CodaServer_Src/Coda.g:1524:1: sysSelect returns [CodaResponse response] : sc= sysSelectClause (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )? ;
    public final sysSelect_return sysSelect() throws RecognitionException {
        sysSelect_return retval = new sysSelect_return();
        retval.start = input.LT(1);
        int sysSelect_StartIndex = input.index();
        sysSelectClause_return sc = null;

        fromClause_return fc = null;

        whereClause_return wc = null;

        groupByClause_return gb = null;

        havingClause_return hc = null;

        orderByClause_return oc = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 90) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1525:5: (sc= sysSelectClause (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1526:5: sc= sysSelectClause (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )?
            {
            pushFollow(FOLLOW_sysSelectClause_in_sysSelect6290);
            sc=sysSelectClause();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1527:5: (fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )? )?
            int alt183=2;
            int LA183_0 = input.LA(1);

            if ( (LA183_0==113) ) {
                alt183=1;
            }
            switch (alt183) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1527:6: fc= fromClause (wc= whereClause )? (gb= groupByClause (hc= havingClause )? )? (oc= orderByClause )?
                    {
                    pushFollow(FOLLOW_fromClause_in_sysSelect6299);
                    fc=fromClause();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1528:6: (wc= whereClause )?
                    int alt179=2;
                    int LA179_0 = input.LA(1);

                    if ( (LA179_0==130) ) {
                        alt179=1;
                    }
                    switch (alt179) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1528:7: wc= whereClause
                            {
                            pushFollow(FOLLOW_whereClause_in_sysSelect6309);
                            wc=whereClause();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:1529:6: (gb= groupByClause (hc= havingClause )? )?
                    int alt181=2;
                    int LA181_0 = input.LA(1);

                    if ( (LA181_0==79) ) {
                        alt181=1;
                    }
                    switch (alt181) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1529:7: gb= groupByClause (hc= havingClause )?
                            {
                            pushFollow(FOLLOW_groupByClause_in_sysSelect6321);
                            gb=groupByClause();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1529:24: (hc= havingClause )?
                            int alt180=2;
                            int LA180_0 = input.LA(1);

                            if ( (LA180_0==201) ) {
                                alt180=1;
                            }
                            switch (alt180) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1529:25: hc= havingClause
                                    {
                                    pushFollow(FOLLOW_havingClause_in_sysSelect6326);
                                    hc=havingClause();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:1530:6: (oc= orderByClause )?
                    int alt182=2;
                    int LA182_0 = input.LA(1);

                    if ( (LA182_0==124) ) {
                        alt182=1;
                    }
                    switch (alt182) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1530:7: oc= orderByClause
                            {
                            pushFollow(FOLLOW_orderByClause_in_sysSelect6341);
                            oc=orderByClause();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( backtracking==0 ) {

                  	CodaFromClause localFromClause = fc.value;
                  	localFromClause.setFromClause(input.toString(fc.start,fc.stop));
                  	try {
                  		retval.response = server.sysSelect(sessionKey, sc.value, (fc != null ? localFromClause : null), (wc != null ? wc.value : null), gb != null ? gb.value.toString() : null, hc != null ? hc.value.print(localFromClause) : null, oc != null ? oc.value.toString() : null, sc.top, sc.startingAt); 
                  	} catch (CodaException e) {
                  		retval.response = new CodaResponse(true, null, 8004);
                  	}
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 90, sysSelect_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end sysSelect

    public static class insert_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start insert
    // /Users/michaelarace/CodaServer_Src/Coda.g:1543:1: insert returns [CodaResponse response] : 'INSERT' 'INTO' tn= objectName ( '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )* | 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* ) ;
    public final insert_return insert() throws RecognitionException {
        insert_return retval = new insert_return();
        retval.start = input.LT(1);
        int insert_StartIndex = input.index();
        objectName_return tn = null;

        objectName_return fn = null;

        insertValuesList_return ivl = null;

        insertUpdateValue_return iv = null;



        	Vector<String> fields = new Vector();
        	Vector<CodaConstant> values = new Vector();
        	Vector<Vector> rows = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 91) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1549:2: ( 'INSERT' 'INTO' tn= objectName ( '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )* | 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1549:4: 'INSERT' 'INTO' tn= objectName ( '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )* | 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* )
            {
            match(input,69,FOLLOW_69_in_insert6384); if (failed) return retval;
            match(input,164,FOLLOW_164_in_insert6386); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_insert6390);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1550:2: ( '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )* | 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* )
            int alt187=2;
            int LA187_0 = input.LA(1);

            if ( (LA187_0==84) ) {
                alt187=1;
            }
            else if ( (LA187_0==81) ) {
                alt187=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1550:2: ( '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )* | 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* )", 187, 0, input);

                throw nvae;
            }
            switch (alt187) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1550:4: '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )*
                    {
                    match(input,84,FOLLOW_84_in_insert6395); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_insert6399);
                    fn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       fields.add(input.toString(fn.start,fn.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1550:48: ( ',' fn= objectName )*
                    loop184:
                    do {
                        int alt184=2;
                        int LA184_0 = input.LA(1);

                        if ( (LA184_0==85) ) {
                            alt184=1;
                        }


                        switch (alt184) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1550:49: ',' fn= objectName
                    	    {
                    	    match(input,85,FOLLOW_85_in_insert6404); if (failed) return retval;
                    	    pushFollow(FOLLOW_objectName_in_insert6408);
                    	    fn=objectName();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       fields.add(input.toString(fn.start,fn.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop184;
                        }
                    } while (true);

                    match(input,86,FOLLOW_86_in_insert6416); if (failed) return retval;
                    match(input,165,FOLLOW_165_in_insert6418); if (failed) return retval;
                    pushFollow(FOLLOW_insertValuesList_in_insert6422);
                    ivl=insertValuesList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       rows.add(ivl.values); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1550:158: ( ',' ivl= insertValuesList )*
                    loop185:
                    do {
                        int alt185=2;
                        int LA185_0 = input.LA(1);

                        if ( (LA185_0==85) ) {
                            alt185=1;
                        }


                        switch (alt185) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1550:159: ',' ivl= insertValuesList
                    	    {
                    	    match(input,85,FOLLOW_85_in_insert6427); if (failed) return retval;
                    	    pushFollow(FOLLOW_insertValuesList_in_insert6431);
                    	    ivl=insertValuesList();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       rows.add(ivl.values); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop185;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1551:4: 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )*
                    {
                    match(input,81,FOLLOW_81_in_insert6441); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_insert6445);
                    fn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       fields.add(input.toString(fn.start,fn.stop)); 
                    }
                    match(input,99,FOLLOW_99_in_insert6450); if (failed) return retval;
                    pushFollow(FOLLOW_insertUpdateValue_in_insert6454);
                    iv=insertUpdateValue();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       values.add(iv.value); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1551:103: ( ',' fn= objectName '=' iv= insertUpdateValue )*
                    loop186:
                    do {
                        int alt186=2;
                        int LA186_0 = input.LA(1);

                        if ( (LA186_0==85) ) {
                            alt186=1;
                        }


                        switch (alt186) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1551:104: ',' fn= objectName '=' iv= insertUpdateValue
                    	    {
                    	    match(input,85,FOLLOW_85_in_insert6459); if (failed) return retval;
                    	    pushFollow(FOLLOW_objectName_in_insert6463);
                    	    fn=objectName();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       fields.add(input.toString(fn.start,fn.stop)); 
                    	    }
                    	    match(input,99,FOLLOW_99_in_insert6468); if (failed) return retval;
                    	    pushFollow(FOLLOW_insertUpdateValue_in_insert6472);
                    	    iv=insertUpdateValue();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       values.add(iv.value); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop186;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( backtracking==0 ) {

              		if (values.size() == 0) {
              			Vector<String> row = new Vector();
              			for (int i = 0; i < values.size(); i++) {
              				CodaConstant temp = (CodaConstant)values.get(i);
              				switch (temp.getSysvar()) {
              					case CodaConstant.SYSVAR_CURRENT_TIMESTAMP:
              						row.add("CURRENT_TIMESTAMP");
              						break;
              					case CodaConstant.SYSVAR_CURRENT_USER_ID:
              						row.add("CURRENT_USER_ID");
              						break;
              					case CodaConstant.SYSVAR_CURRENT_USERNAME:
              						row.add("CURRENT_USERNAME");
              						break;
              					case CodaConstant.SYSVAR_CURRENT_GROUP_NAME:
              						row.add("CURRENT_GROUP_NAME");
              						break;
              					case CodaConstant.SYSVAR_NULL:
              						row.add(null);
              						break;
              					default:
              						row.add(temp.getValue());
              				}
              			}
              			rows.add(row);
              		}
              	
              		retval.response = server.insert(sessionKey, input.toString(tn.start,tn.stop), fields, rows, null);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 91, insert_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end insert

    public static class insertNoCommit_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start insertNoCommit
    // /Users/michaelarace/CodaServer_Src/Coda.g:1584:1: insertNoCommit[CodaConnection connection] returns [CodaResponse response] : 'INSERT' 'INTO' tn= objectName ( '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )* | 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* ) ;
    public final insertNoCommit_return insertNoCommit(CodaConnection connection) throws RecognitionException {
        insertNoCommit_return retval = new insertNoCommit_return();
        retval.start = input.LT(1);
        int insertNoCommit_StartIndex = input.index();
        objectName_return tn = null;

        objectName_return fn = null;

        insertValuesList_return ivl = null;

        insertUpdateValue_return iv = null;



        	Vector<String> fields = new Vector();
        	Vector<CodaConstant> values = new Vector();
        	Vector<Vector> rows = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 92) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1590:2: ( 'INSERT' 'INTO' tn= objectName ( '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )* | 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1590:4: 'INSERT' 'INTO' tn= objectName ( '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )* | 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* )
            {
            match(input,69,FOLLOW_69_in_insertNoCommit6504); if (failed) return retval;
            match(input,164,FOLLOW_164_in_insertNoCommit6506); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_insertNoCommit6510);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1591:2: ( '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )* | 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* )
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==84) ) {
                alt191=1;
            }
            else if ( (LA191_0==81) ) {
                alt191=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1591:2: ( '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )* | 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* )", 191, 0, input);

                throw nvae;
            }
            switch (alt191) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1591:4: '(' fn= objectName ( ',' fn= objectName )* ')' 'VALUES' ivl= insertValuesList ( ',' ivl= insertValuesList )*
                    {
                    match(input,84,FOLLOW_84_in_insertNoCommit6515); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_insertNoCommit6519);
                    fn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       fields.add(input.toString(fn.start,fn.stop)); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1591:48: ( ',' fn= objectName )*
                    loop188:
                    do {
                        int alt188=2;
                        int LA188_0 = input.LA(1);

                        if ( (LA188_0==85) ) {
                            alt188=1;
                        }


                        switch (alt188) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1591:49: ',' fn= objectName
                    	    {
                    	    match(input,85,FOLLOW_85_in_insertNoCommit6524); if (failed) return retval;
                    	    pushFollow(FOLLOW_objectName_in_insertNoCommit6528);
                    	    fn=objectName();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       fields.add(input.toString(fn.start,fn.stop)); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop188;
                        }
                    } while (true);

                    match(input,86,FOLLOW_86_in_insertNoCommit6536); if (failed) return retval;
                    match(input,165,FOLLOW_165_in_insertNoCommit6538); if (failed) return retval;
                    pushFollow(FOLLOW_insertValuesList_in_insertNoCommit6542);
                    ivl=insertValuesList();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       rows.add(ivl.values); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1591:158: ( ',' ivl= insertValuesList )*
                    loop189:
                    do {
                        int alt189=2;
                        int LA189_0 = input.LA(1);

                        if ( (LA189_0==85) ) {
                            alt189=1;
                        }


                        switch (alt189) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1591:159: ',' ivl= insertValuesList
                    	    {
                    	    match(input,85,FOLLOW_85_in_insertNoCommit6547); if (failed) return retval;
                    	    pushFollow(FOLLOW_insertValuesList_in_insertNoCommit6551);
                    	    ivl=insertValuesList();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       rows.add(ivl.values); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop189;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1592:4: 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )*
                    {
                    match(input,81,FOLLOW_81_in_insertNoCommit6561); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_insertNoCommit6565);
                    fn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       fields.add(input.toString(fn.start,fn.stop)); 
                    }
                    match(input,99,FOLLOW_99_in_insertNoCommit6570); if (failed) return retval;
                    pushFollow(FOLLOW_insertUpdateValue_in_insertNoCommit6574);
                    iv=insertUpdateValue();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       values.add(iv.value); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1592:103: ( ',' fn= objectName '=' iv= insertUpdateValue )*
                    loop190:
                    do {
                        int alt190=2;
                        int LA190_0 = input.LA(1);

                        if ( (LA190_0==85) ) {
                            alt190=1;
                        }


                        switch (alt190) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1592:104: ',' fn= objectName '=' iv= insertUpdateValue
                    	    {
                    	    match(input,85,FOLLOW_85_in_insertNoCommit6579); if (failed) return retval;
                    	    pushFollow(FOLLOW_objectName_in_insertNoCommit6583);
                    	    fn=objectName();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       fields.add(input.toString(fn.start,fn.stop)); 
                    	    }
                    	    match(input,99,FOLLOW_99_in_insertNoCommit6588); if (failed) return retval;
                    	    pushFollow(FOLLOW_insertUpdateValue_in_insertNoCommit6592);
                    	    iv=insertUpdateValue();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       values.add(iv.value); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop190;
                        }
                    } while (true);


                    }
                    break;

            }

            if ( backtracking==0 ) {

              		if (values.size() == 0) {
              			Vector<String> row = new Vector();
              			for (int i = 0; i < values.size(); i++) {
              				CodaConstant temp = (CodaConstant)values.get(i);
              				switch (temp.getSysvar()) {
              					case CodaConstant.SYSVAR_CURRENT_TIMESTAMP:
              						row.add("CURRENT_TIMESTAMP");
              						break;
              					case CodaConstant.SYSVAR_CURRENT_USER_ID:
              						row.add("CURRENT_USER_ID");
              						break;
              					case CodaConstant.SYSVAR_CURRENT_USERNAME:
              						row.add("CURRENT_USERNAME");
              						break;
              					case CodaConstant.SYSVAR_CURRENT_GROUP_NAME:
              						row.add("CURRENT_GROUP_NAME");
              						break;
              					case CodaConstant.SYSVAR_NULL:
              						row.add(null);
              						break;
              					default:
              						row.add(temp.getValue());
              				}
              			}
              			rows.add(row);
              		}
              	
              		retval.response = server.insert(sessionKey, input.toString(tn.start,tn.stop), fields, rows, connection);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 92, insertNoCommit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end insertNoCommit

    public static class update_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start update
    // /Users/michaelarace/CodaServer_Src/Coda.g:1625:1: update returns [CodaResponse response] : 'UPDATE' tn= objectName 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* (wc= whereClause )? ;
    public final update_return update() throws RecognitionException {
        update_return retval = new update_return();
        retval.start = input.LT(1);
        int update_StartIndex = input.index();
        objectName_return tn = null;

        objectName_return fn = null;

        insertUpdateValue_return iv = null;

        whereClause_return wc = null;



        	Vector<String> fields = new Vector();
        	Vector<CodaConstant> values = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 93) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1630:2: ( 'UPDATE' tn= objectName 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* (wc= whereClause )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1630:4: 'UPDATE' tn= objectName 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* (wc= whereClause )?
            {
            match(input,70,FOLLOW_70_in_update6624); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_update6628);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,81,FOLLOW_81_in_update6632); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_update6636);
            fn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               fields.add(input.toString(fn.start,fn.stop)); 
            }
            match(input,99,FOLLOW_99_in_update6640); if (failed) return retval;
            pushFollow(FOLLOW_insertUpdateValue_in_update6644);
            iv=insertUpdateValue();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               values.add(iv.value); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1631:101: ( ',' fn= objectName '=' iv= insertUpdateValue )*
            loop192:
            do {
                int alt192=2;
                int LA192_0 = input.LA(1);

                if ( (LA192_0==85) ) {
                    alt192=1;
                }


                switch (alt192) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:1631:102: ',' fn= objectName '=' iv= insertUpdateValue
            	    {
            	    match(input,85,FOLLOW_85_in_update6649); if (failed) return retval;
            	    pushFollow(FOLLOW_objectName_in_update6653);
            	    fn=objectName();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       fields.add(input.toString(fn.start,fn.stop)); 
            	    }
            	    match(input,99,FOLLOW_99_in_update6657); if (failed) return retval;
            	    pushFollow(FOLLOW_insertUpdateValue_in_update6661);
            	    iv=insertUpdateValue();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       values.add(iv.value); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);

            // /Users/michaelarace/CodaServer_Src/Coda.g:1632:3: (wc= whereClause )?
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( (LA193_0==130) ) {
                alt193=1;
            }
            switch (alt193) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1632:4: wc= whereClause
                    {
                    pushFollow(FOLLOW_whereClause_in_update6674);
                    wc=whereClause();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              		Vector<String> row = new Vector();
              		for (int i = 0; i < values.size(); i++) {
              			CodaConstant temp = (CodaConstant)values.get(i);
              			switch (temp.getSysvar()) {
              				case CodaConstant.SYSVAR_CURRENT_TIMESTAMP:
              					row.add("CURRENT_TIMESTAMP");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_USER_ID:
              					row.add("CURRENT_USER_ID");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_USERNAME:
              					row.add("CURRENT_USERNAME");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_GROUP_NAME:
              					row.add("CURRENT_GROUP_NAME");
              					break;
              				case CodaConstant.SYSVAR_NULL:
              					row.add(null);
              					break;
              				default:
              					row.add(temp.getValue());
              			}
              		}
              		
              		retval.response = server.update(sessionKey, input.toString(tn.start,tn.stop), fields, row, (wc != null ? wc.value : null), null);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 93, update_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end update

    public static class updateNoCommit_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start updateNoCommit
    // /Users/michaelarace/CodaServer_Src/Coda.g:1662:1: updateNoCommit[CodaConnection connection] returns [CodaResponse response] : 'UPDATE' tn= objectName 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* (wc= whereClause )? ;
    public final updateNoCommit_return updateNoCommit(CodaConnection connection) throws RecognitionException {
        updateNoCommit_return retval = new updateNoCommit_return();
        retval.start = input.LT(1);
        int updateNoCommit_StartIndex = input.index();
        objectName_return tn = null;

        objectName_return fn = null;

        insertUpdateValue_return iv = null;

        whereClause_return wc = null;



        	Vector<String> fields = new Vector();
        	Vector<CodaConstant> values = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 94) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1667:2: ( 'UPDATE' tn= objectName 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* (wc= whereClause )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1667:4: 'UPDATE' tn= objectName 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* (wc= whereClause )?
            {
            match(input,70,FOLLOW_70_in_updateNoCommit6701); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_updateNoCommit6705);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,81,FOLLOW_81_in_updateNoCommit6709); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_updateNoCommit6713);
            fn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               fields.add(input.toString(fn.start,fn.stop)); 
            }
            match(input,99,FOLLOW_99_in_updateNoCommit6717); if (failed) return retval;
            pushFollow(FOLLOW_insertUpdateValue_in_updateNoCommit6721);
            iv=insertUpdateValue();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               values.add(iv.value); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1668:101: ( ',' fn= objectName '=' iv= insertUpdateValue )*
            loop194:
            do {
                int alt194=2;
                int LA194_0 = input.LA(1);

                if ( (LA194_0==85) ) {
                    alt194=1;
                }


                switch (alt194) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:1668:102: ',' fn= objectName '=' iv= insertUpdateValue
            	    {
            	    match(input,85,FOLLOW_85_in_updateNoCommit6726); if (failed) return retval;
            	    pushFollow(FOLLOW_objectName_in_updateNoCommit6730);
            	    fn=objectName();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       fields.add(input.toString(fn.start,fn.stop)); 
            	    }
            	    match(input,99,FOLLOW_99_in_updateNoCommit6734); if (failed) return retval;
            	    pushFollow(FOLLOW_insertUpdateValue_in_updateNoCommit6738);
            	    iv=insertUpdateValue();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       values.add(iv.value); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop194;
                }
            } while (true);

            // /Users/michaelarace/CodaServer_Src/Coda.g:1669:3: (wc= whereClause )?
            int alt195=2;
            int LA195_0 = input.LA(1);

            if ( (LA195_0==130) ) {
                alt195=1;
            }
            switch (alt195) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1669:4: wc= whereClause
                    {
                    pushFollow(FOLLOW_whereClause_in_updateNoCommit6751);
                    wc=whereClause();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              		Vector<String> row = new Vector();
              		for (int i = 0; i < values.size(); i++) {
              			CodaConstant temp = (CodaConstant)values.get(i);
              			switch (temp.getSysvar()) {
              				case CodaConstant.SYSVAR_CURRENT_TIMESTAMP:
              					row.add("CURRENT_TIMESTAMP");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_USER_ID:
              					row.add("CURRENT_USER_ID");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_USERNAME:
              					row.add("CURRENT_USERNAME");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_GROUP_NAME:
              					row.add("CURRENT_GROUP_NAME");
              					break;
              				case CodaConstant.SYSVAR_NULL:
              					row.add(null);
              					break;
              				default:
              					row.add(temp.getValue());
              			}
              		}
              		
              		retval.response = server.update(sessionKey, input.toString(tn.start,tn.stop), fields, row, (wc != null ? wc.value : null), connection);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 94, updateNoCommit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end updateNoCommit

    public static class delete_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start delete
    // /Users/michaelarace/CodaServer_Src/Coda.g:1700:1: delete returns [CodaResponse response] : 'DELETE' 'FROM' tn= objectName (wc= whereClause )? ;
    public final delete_return delete() throws RecognitionException {
        delete_return retval = new delete_return();
        retval.start = input.LT(1);
        int delete_StartIndex = input.index();
        objectName_return tn = null;

        whereClause_return wc = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 95) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1701:2: ( 'DELETE' 'FROM' tn= objectName (wc= whereClause )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1701:4: 'DELETE' 'FROM' tn= objectName (wc= whereClause )?
            {
            match(input,71,FOLLOW_71_in_delete6772); if (failed) return retval;
            match(input,113,FOLLOW_113_in_delete6774); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_delete6778);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1702:3: (wc= whereClause )?
            int alt196=2;
            int LA196_0 = input.LA(1);

            if ( (LA196_0==130) ) {
                alt196=1;
            }
            switch (alt196) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1702:4: wc= whereClause
                    {
                    pushFollow(FOLLOW_whereClause_in_delete6785);
                    wc=whereClause();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              		retval.response = server.delete(sessionKey, input.toString(tn.start,tn.stop), (wc != null ? wc.value : null), null);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 95, delete_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end delete

    public static class deleteNoCommit_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start deleteNoCommit
    // /Users/michaelarace/CodaServer_Src/Coda.g:1708:1: deleteNoCommit[CodaConnection connection] returns [CodaResponse response] : 'DELETE' 'FROM' tn= objectName (wc= whereClause )? ;
    public final deleteNoCommit_return deleteNoCommit(CodaConnection connection) throws RecognitionException {
        deleteNoCommit_return retval = new deleteNoCommit_return();
        retval.start = input.LT(1);
        int deleteNoCommit_StartIndex = input.index();
        objectName_return tn = null;

        whereClause_return wc = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 96) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1709:2: ( 'DELETE' 'FROM' tn= objectName (wc= whereClause )? )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1709:4: 'DELETE' 'FROM' tn= objectName (wc= whereClause )?
            {
            match(input,71,FOLLOW_71_in_deleteNoCommit6807); if (failed) return retval;
            match(input,113,FOLLOW_113_in_deleteNoCommit6809); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_deleteNoCommit6813);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1710:3: (wc= whereClause )?
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==130) ) {
                alt197=1;
            }
            switch (alt197) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1710:4: wc= whereClause
                    {
                    pushFollow(FOLLOW_whereClause_in_deleteNoCommit6820);
                    wc=whereClause();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

              		retval.response = server.delete(sessionKey, input.toString(tn.start,tn.stop), (wc != null ? wc.value : null), connection);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 96, deleteNoCommit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end deleteNoCommit

    public static class formUpdate_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start formUpdate
    // /Users/michaelarace/CodaServer_Src/Coda.g:1716:1: formUpdate returns [CodaResponse response] : fav= objectName tn= objectName ( 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* )? ( 'AS' anf= 'NEW' 'FORM' | (wc= whereClause )? ) ;
    public final formUpdate_return formUpdate() throws RecognitionException {
        formUpdate_return retval = new formUpdate_return();
        retval.start = input.LT(1);
        int formUpdate_StartIndex = input.index();
        Token anf=null;
        objectName_return fav = null;

        objectName_return tn = null;

        objectName_return fn = null;

        insertUpdateValue_return iv = null;

        whereClause_return wc = null;



        	Vector<String> fields = new Vector();
        	Vector<CodaConstant> values = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 97) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1721:2: (fav= objectName tn= objectName ( 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* )? ( 'AS' anf= 'NEW' 'FORM' | (wc= whereClause )? ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1721:4: fav= objectName tn= objectName ( 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* )? ( 'AS' anf= 'NEW' 'FORM' | (wc= whereClause )? )
            {
            pushFollow(FOLLOW_objectName_in_formUpdate6848);
            fav=objectName();
            _fsp--;
            if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_formUpdate6852);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1722:3: ( 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* )?
            int alt199=2;
            int LA199_0 = input.LA(1);

            if ( (LA199_0==81) ) {
                alt199=1;
            }
            switch (alt199) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1722:5: 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )*
                    {
                    match(input,81,FOLLOW_81_in_formUpdate6859); if (failed) return retval;
                    pushFollow(FOLLOW_objectName_in_formUpdate6863);
                    fn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       fields.add(input.toString(fn.start,fn.stop)); 
                    }
                    match(input,99,FOLLOW_99_in_formUpdate6867); if (failed) return retval;
                    pushFollow(FOLLOW_insertUpdateValue_in_formUpdate6871);
                    iv=insertUpdateValue();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       values.add(iv.value); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1722:103: ( ',' fn= objectName '=' iv= insertUpdateValue )*
                    loop198:
                    do {
                        int alt198=2;
                        int LA198_0 = input.LA(1);

                        if ( (LA198_0==85) ) {
                            alt198=1;
                        }


                        switch (alt198) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:1722:104: ',' fn= objectName '=' iv= insertUpdateValue
                    	    {
                    	    match(input,85,FOLLOW_85_in_formUpdate6876); if (failed) return retval;
                    	    pushFollow(FOLLOW_objectName_in_formUpdate6880);
                    	    fn=objectName();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       fields.add(input.toString(fn.start,fn.stop)); 
                    	    }
                    	    match(input,99,FOLLOW_99_in_formUpdate6884); if (failed) return retval;
                    	    pushFollow(FOLLOW_insertUpdateValue_in_formUpdate6888);
                    	    iv=insertUpdateValue();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       values.add(iv.value); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop198;
                        }
                    } while (true);


                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:1723:3: ( 'AS' anf= 'NEW' 'FORM' | (wc= whereClause )? )
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==97) ) {
                alt201=1;
            }
            else if ( (LA201_0==EOF||LA201_0==130) ) {
                alt201=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1723:3: ( 'AS' anf= 'NEW' 'FORM' | (wc= whereClause )? )", 201, 0, input);

                throw nvae;
            }
            switch (alt201) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1723:5: 'AS' anf= 'NEW' 'FORM'
                    {
                    match(input,97,FOLLOW_97_in_formUpdate6902); if (failed) return retval;
                    anf=(Token)input.LT(1);
                    match(input,166,FOLLOW_166_in_formUpdate6906); if (failed) return retval;
                    match(input,110,FOLLOW_110_in_formUpdate6908); if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1723:29: (wc= whereClause )?
                    {
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1723:29: (wc= whereClause )?
                    int alt200=2;
                    int LA200_0 = input.LA(1);

                    if ( (LA200_0==130) ) {
                        alt200=1;
                    }
                    switch (alt200) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1723:30: wc= whereClause
                            {
                            pushFollow(FOLLOW_whereClause_in_formUpdate6915);
                            wc=whereClause();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( backtracking==0 ) {

              		Vector<String> row = new Vector();
              		for (int i = 0; i < values.size(); i++) {
              			CodaConstant temp = (CodaConstant)values.get(i);
              			switch (temp.getSysvar()) {
              				case CodaConstant.SYSVAR_CURRENT_TIMESTAMP:
              					row.add("CURRENT_TIMESTAMP");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_USER_ID:
              					row.add("CURRENT_USER_ID");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_USERNAME:
              					row.add("CURRENT_USERNAME");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_GROUP_NAME:
              					row.add("CURRENT_GROUP_NAME");
              					break;
              				case CodaConstant.SYSVAR_NULL:
              					row.add(null);
              					break;
              				default:
              					row.add(temp.getValue());
              			}
              		}
              		
              		retval.response = server.formUpdate(sessionKey, input.toString(fav.start,fav.stop), input.toString(tn.start,tn.stop), fields, row, (anf != null ? true : false), (wc != null ? wc.value : null), null);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 97, formUpdate_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formUpdate

    public static class formUpdateNoCommit_return extends ParserRuleReturnScope {
        public CodaResponse response;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start formUpdateNoCommit
    // /Users/michaelarace/CodaServer_Src/Coda.g:1752:1: formUpdateNoCommit[CodaConnection connection] returns [CodaResponse response] : fav= objectName tn= objectName 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* ( 'AS' anf= 'NEW' 'FORM' | (wc= whereClause )? ) ;
    public final formUpdateNoCommit_return formUpdateNoCommit(CodaConnection connection) throws RecognitionException {
        formUpdateNoCommit_return retval = new formUpdateNoCommit_return();
        retval.start = input.LT(1);
        int formUpdateNoCommit_StartIndex = input.index();
        Token anf=null;
        objectName_return fav = null;

        objectName_return tn = null;

        objectName_return fn = null;

        insertUpdateValue_return iv = null;

        whereClause_return wc = null;



        	Vector<String> fields = new Vector();
        	Vector<CodaConstant> values = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 98) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1757:2: (fav= objectName tn= objectName 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* ( 'AS' anf= 'NEW' 'FORM' | (wc= whereClause )? ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1757:4: fav= objectName tn= objectName 'SET' fn= objectName '=' iv= insertUpdateValue ( ',' fn= objectName '=' iv= insertUpdateValue )* ( 'AS' anf= 'NEW' 'FORM' | (wc= whereClause )? )
            {
            pushFollow(FOLLOW_objectName_in_formUpdateNoCommit6944);
            fav=objectName();
            _fsp--;
            if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_formUpdateNoCommit6948);
            tn=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,81,FOLLOW_81_in_formUpdateNoCommit6953); if (failed) return retval;
            pushFollow(FOLLOW_objectName_in_formUpdateNoCommit6957);
            fn=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               fields.add(input.toString(fn.start,fn.stop)); 
            }
            match(input,99,FOLLOW_99_in_formUpdateNoCommit6961); if (failed) return retval;
            pushFollow(FOLLOW_insertUpdateValue_in_formUpdateNoCommit6965);
            iv=insertUpdateValue();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               values.add(iv.value); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1758:101: ( ',' fn= objectName '=' iv= insertUpdateValue )*
            loop202:
            do {
                int alt202=2;
                int LA202_0 = input.LA(1);

                if ( (LA202_0==85) ) {
                    alt202=1;
                }


                switch (alt202) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:1758:102: ',' fn= objectName '=' iv= insertUpdateValue
            	    {
            	    match(input,85,FOLLOW_85_in_formUpdateNoCommit6970); if (failed) return retval;
            	    pushFollow(FOLLOW_objectName_in_formUpdateNoCommit6974);
            	    fn=objectName();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       fields.add(input.toString(fn.start,fn.stop)); 
            	    }
            	    match(input,99,FOLLOW_99_in_formUpdateNoCommit6978); if (failed) return retval;
            	    pushFollow(FOLLOW_insertUpdateValue_in_formUpdateNoCommit6982);
            	    iv=insertUpdateValue();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       values.add(iv.value); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop202;
                }
            } while (true);

            // /Users/michaelarace/CodaServer_Src/Coda.g:1759:3: ( 'AS' anf= 'NEW' 'FORM' | (wc= whereClause )? )
            int alt204=2;
            int LA204_0 = input.LA(1);

            if ( (LA204_0==97) ) {
                alt204=1;
            }
            else if ( (LA204_0==EOF||LA204_0==130) ) {
                alt204=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1759:3: ( 'AS' anf= 'NEW' 'FORM' | (wc= whereClause )? )", 204, 0, input);

                throw nvae;
            }
            switch (alt204) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1759:5: 'AS' anf= 'NEW' 'FORM'
                    {
                    match(input,97,FOLLOW_97_in_formUpdateNoCommit6994); if (failed) return retval;
                    anf=(Token)input.LT(1);
                    match(input,166,FOLLOW_166_in_formUpdateNoCommit6998); if (failed) return retval;
                    match(input,110,FOLLOW_110_in_formUpdateNoCommit7000); if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1759:29: (wc= whereClause )?
                    {
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1759:29: (wc= whereClause )?
                    int alt203=2;
                    int LA203_0 = input.LA(1);

                    if ( (LA203_0==130) ) {
                        alt203=1;
                    }
                    switch (alt203) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1759:30: wc= whereClause
                            {
                            pushFollow(FOLLOW_whereClause_in_formUpdateNoCommit7007);
                            wc=whereClause();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( backtracking==0 ) {

              		Vector<String> row = new Vector();
              		for (int i = 0; i < values.size(); i++) {
              			CodaConstant temp = (CodaConstant)values.get(i);
              			switch (temp.getSysvar()) {
              				case CodaConstant.SYSVAR_CURRENT_TIMESTAMP:
              					row.add("CURRENT_TIMESTAMP");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_USER_ID:
              					row.add("CURRENT_USER_ID");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_USERNAME:
              					row.add("CURRENT_USERNAME");
              					break;
              				case CodaConstant.SYSVAR_CURRENT_GROUP_NAME:
              					row.add("CURRENT_GROUP_NAME");
              					break;
              				case CodaConstant.SYSVAR_NULL:
              					row.add(null);
              					break;
              				default:
              					row.add(temp.getValue());
              			}
              		}
              		
              		retval.response = server.formUpdate(sessionKey, input.toString(fav.start,fav.stop), input.toString(tn.start,tn.stop), fields, row, (anf != null ? false : true), (wc != null ? wc.value : null), connection);
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 98, formUpdateNoCommit_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formUpdateNoCommit

    public static class whereClause_return extends ParserRuleReturnScope {
        public CodaSearchCondition value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start whereClause
    // /Users/michaelarace/CodaServer_Src/Coda.g:1789:1: whereClause returns [CodaSearchCondition value] : 'WHERE' sc= searchCondition ;
    public final whereClause_return whereClause() throws RecognitionException {
        whereClause_return retval = new whereClause_return();
        retval.start = input.LT(1);
        int whereClause_StartIndex = input.index();
        searchCondition_return sc = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 99) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1790:5: ( 'WHERE' sc= searchCondition )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1790:7: 'WHERE' sc= searchCondition
            {
            match(input,130,FOLLOW_130_in_whereClause7036); if (failed) return retval;
            pushFollow(FOLLOW_searchCondition_in_whereClause7040);
            sc=searchCondition();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

                  	retval.value = sc.value;
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 99, whereClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end whereClause

    public static class fromClause_return extends ParserRuleReturnScope {
        public CodaFromClause value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start fromClause
    // /Users/michaelarace/CodaServer_Src/Coda.g:1796:1: fromClause returns [CodaFromClause value] : ( 'FROM' )=> 'FROM' tab= tableSource ( ',' tab= tableSource )* ;
    public final fromClause_return fromClause() throws RecognitionException {
        fromClause_return retval = new fromClause_return();
        retval.start = input.LT(1);
        int fromClause_StartIndex = input.index();
        tableSource_return tab = null;



        	Vector<CodaTableNameAlias> defs = new Vector();
        	Vector<CodaTableSource> tableSources = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 100) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1801:5: ( ( 'FROM' )=> 'FROM' tab= tableSource ( ',' tab= tableSource )* )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1801:7: ( 'FROM' )=> 'FROM' tab= tableSource ( ',' tab= tableSource )*
            {
            match(input,113,FOLLOW_113_in_fromClause7078); if (failed) return retval;
            pushFollow(FOLLOW_tableSource_in_fromClause7082);
            tab=tableSource();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               for (CodaTableNameAlias alias : ((tableSource_return)tab).value) { defs.add(alias); } tableSources.add(tab.retObj); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1801:163: ( ',' tab= tableSource )*
            loop205:
            do {
                int alt205=2;
                int LA205_0 = input.LA(1);

                if ( (LA205_0==85) ) {
                    alt205=1;
                }


                switch (alt205) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:1801:164: ',' tab= tableSource
            	    {
            	    match(input,85,FOLLOW_85_in_fromClause7087); if (failed) return retval;
            	    pushFollow(FOLLOW_tableSource_in_fromClause7091);
            	    tab=tableSource();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       for (CodaTableNameAlias alias : ((tableSource_return)tab).value) { defs.add(alias); } tableSources.add(tab.retObj); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop205;
                }
            } while (true);

            if ( backtracking==0 ) {

                  	
                  	retval.value = new CodaFromClause(defs, tableSources);
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 100, fromClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end fromClause

    public static class tableSource_return extends ParserRuleReturnScope {
        public Vector<CodaTableNameAlias> value;
        public CodaTableSource retObj;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start tableSource
    // /Users/michaelarace/CodaServer_Src/Coda.g:1808:1: tableSource returns [Vector<CodaTableNameAlias> value, CodaTableSource retObj] : st= subTableSource (jt= joinedTable )* ;
    public final tableSource_return tableSource() throws RecognitionException {
        tableSource_return retval = new tableSource_return();
        retval.start = input.LT(1);
        int tableSource_StartIndex = input.index();
        subTableSource_return st = null;

        joinedTable_return jt = null;



        	if (retval.value == null) {
        		retval.value = new Vector();
        	}
        	Vector<CodaJoinedTable> joinedTables = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 101) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1815:5: (st= subTableSource (jt= joinedTable )* )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1815:7: st= subTableSource (jt= joinedTable )*
            {
            pushFollow(FOLLOW_subTableSource_in_tableSource7129);
            st=subTableSource();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1815:25: (jt= joinedTable )*
            loop206:
            do {
                int alt206=2;
                int LA206_0 = input.LA(1);

                if ( ((LA206_0>=167 && LA206_0<=170)||LA206_0==172) ) {
                    alt206=1;
                }


                switch (alt206) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:1815:26: jt= joinedTable
            	    {
            	    pushFollow(FOLLOW_joinedTable_in_tableSource7134);
            	    jt=joinedTable();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       
            	          		for (CodaTableNameAlias temp : jt.value) {
            	          			retval.value.add(temp);
            	          			joinedTables.add(jt.retObj);
            	          		}
            	          	
            	          	
            	    }

            	    }
            	    break;

            	default :
            	    break loop206;
                }
            } while (true);

            if ( backtracking==0 ) {

                  	for (CodaTableNameAlias temp2 : st.value) {
                  		retval.value.add(temp2);
                  	}
                  	retval.retObj = new CodaTableSource(st.retObj, joinedTables);
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 101, tableSource_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end tableSource

    public static class subTableSource_return extends ParserRuleReturnScope {
        public Vector<CodaTableNameAlias> value;
        public CodaSubTableSource retObj;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start subTableSource
    // /Users/michaelarace/CodaServer_Src/Coda.g:1831:1: subTableSource returns [Vector<CodaTableNameAlias> value, CodaSubTableSource retObj] : (tn= objectName (al= alias1 )? | '(' jt= joinedTables ')' ) ;
    public final subTableSource_return subTableSource() throws RecognitionException {
        subTableSource_return retval = new subTableSource_return();
        retval.start = input.LT(1);
        int subTableSource_StartIndex = input.index();
        objectName_return tn = null;

        alias1_return al = null;

        joinedTables_return jt = null;



        	if (retval.value == null) {
        		retval.value = new Vector();
        	}

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 102) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1837:5: ( (tn= objectName (al= alias1 )? | '(' jt= joinedTables ')' ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1838:5: (tn= objectName (al= alias1 )? | '(' jt= joinedTables ')' )
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:1838:5: (tn= objectName (al= alias1 )? | '(' jt= joinedTables ')' )
            int alt208=2;
            int LA208_0 = input.LA(1);

            if ( (LA208_0==ObjectName||(LA208_0>=10 && LA208_0<=66)) ) {
                alt208=1;
            }
            else if ( (LA208_0==84) ) {
                alt208=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1838:5: (tn= objectName (al= alias1 )? | '(' jt= joinedTables ')' )", 208, 0, input);

                throw nvae;
            }
            switch (alt208) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1839:5: tn= objectName (al= alias1 )?
                    {
                    pushFollow(FOLLOW_objectName_in_subTableSource7188);
                    tn=objectName();
                    _fsp--;
                    if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1839:19: (al= alias1 )?
                    int alt207=2;
                    int LA207_0 = input.LA(1);

                    if ( (LA207_0==ObjectName||(LA207_0>=10 && LA207_0<=66)||LA207_0==97) ) {
                        alt207=1;
                    }
                    switch (alt207) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1839:20: al= alias1
                            {
                            pushFollow(FOLLOW_alias1_in_subTableSource7193);
                            al=alias1();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    if ( backtracking==0 ) {

                          	retval.value.add(new CodaTableNameAlias(input.toString(tn.start,tn.stop), (al == null ? null : al.value)));
                          	retval.retObj = new CodaSubTableSource(input.toString(tn.start,tn.stop).trim(), al == null ? null : al.value);
                          
                    }

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1845:6: '(' jt= joinedTables ')'
                    {
                    match(input,84,FOLLOW_84_in_subTableSource7216); if (failed) return retval;
                    pushFollow(FOLLOW_joinedTables_in_subTableSource7220);
                    jt=joinedTables();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {

                           	retval.value = jt.value;
                           	retval.retObj = new CodaSubTableSource(jt.retObj);
                           
                    }
                    match(input,86,FOLLOW_86_in_subTableSource7236); if (failed) return retval;

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 102, subTableSource_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end subTableSource

    public static class alias1_return extends ParserRuleReturnScope {
        public String value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alias1
    // /Users/michaelarace/CodaServer_Src/Coda.g:1854:1: alias1 returns [String value] : ( 'AS' )? al= objectName ;
    public final alias1_return alias1() throws RecognitionException {
        alias1_return retval = new alias1_return();
        retval.start = input.LT(1);
        int alias1_StartIndex = input.index();
        objectName_return al = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 103) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1855:5: ( ( 'AS' )? al= objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1856:5: ( 'AS' )? al= objectName
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:1856:5: ( 'AS' )?
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==97) ) {
                alt209=1;
            }
            switch (alt209) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1856:6: 'AS'
                    {
                    match(input,97,FOLLOW_97_in_alias17269); if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_objectName_in_alias17275);
            al=objectName();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

                  	retval.value = input.toString(al.start,al.stop);
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 103, alias1_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alias1

    public static class alias2_return extends ParserRuleReturnScope {
        public String value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start alias2
    // /Users/michaelarace/CodaServer_Src/Coda.g:1862:1: alias2 returns [String value] : al= objectName '.' ;
    public final alias2_return alias2() throws RecognitionException {
        alias2_return retval = new alias2_return();
        retval.start = input.LT(1);
        int alias2_StartIndex = input.index();
        objectName_return al = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 104) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1863:5: (al= objectName '.' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1864:5: al= objectName '.'
            {
            pushFollow(FOLLOW_objectName_in_alias27309);
            al=objectName();
            _fsp--;
            if (failed) return retval;
            match(input,77,FOLLOW_77_in_alias27311); if (failed) return retval;
            if ( backtracking==0 ) {

                  	retval.value = input.toString(al.start,al.stop);
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 104, alias2_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end alias2

    public static class joinedTable_return extends ParserRuleReturnScope {
        public Vector<CodaTableNameAlias> value;
        public CodaJoinedTable retObj;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start joinedTable
    // /Users/michaelarace/CodaServer_Src/Coda.g:1870:1: joinedTable returns [Vector<CodaTableNameAlias> value, CodaJoinedTable retObj] : ( (inn= 'INNER' | joint= ( 'LEFT' | 'RIGHT' | 'FULL' ) (oute= 'OUTER' )? ) )? 'JOIN' ts= tableSource 'ON' sc= searchCondition ;
    public final joinedTable_return joinedTable() throws RecognitionException {
        joinedTable_return retval = new joinedTable_return();
        retval.start = input.LT(1);
        int joinedTable_StartIndex = input.index();
        Token inn=null;
        Token joint=null;
        Token oute=null;
        tableSource_return ts = null;

        searchCondition_return sc = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 105) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1871:5: ( ( (inn= 'INNER' | joint= ( 'LEFT' | 'RIGHT' | 'FULL' ) (oute= 'OUTER' )? ) )? 'JOIN' ts= tableSource 'ON' sc= searchCondition )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1872:6: ( (inn= 'INNER' | joint= ( 'LEFT' | 'RIGHT' | 'FULL' ) (oute= 'OUTER' )? ) )? 'JOIN' ts= tableSource 'ON' sc= searchCondition
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:1872:6: ( (inn= 'INNER' | joint= ( 'LEFT' | 'RIGHT' | 'FULL' ) (oute= 'OUTER' )? ) )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( ((LA212_0>=167 && LA212_0<=170)) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1872:8: (inn= 'INNER' | joint= ( 'LEFT' | 'RIGHT' | 'FULL' ) (oute= 'OUTER' )? )
                    {
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1872:8: (inn= 'INNER' | joint= ( 'LEFT' | 'RIGHT' | 'FULL' ) (oute= 'OUTER' )? )
                    int alt211=2;
                    int LA211_0 = input.LA(1);

                    if ( (LA211_0==167) ) {
                        alt211=1;
                    }
                    else if ( ((LA211_0>=168 && LA211_0<=170)) ) {
                        alt211=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("1872:8: (inn= 'INNER' | joint= ( 'LEFT' | 'RIGHT' | 'FULL' ) (oute= 'OUTER' )? )", 211, 0, input);

                        throw nvae;
                    }
                    switch (alt211) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1872:9: inn= 'INNER'
                            {
                            inn=(Token)input.LT(1);
                            match(input,167,FOLLOW_167_in_joinedTable7348); if (failed) return retval;

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1872:23: joint= ( 'LEFT' | 'RIGHT' | 'FULL' ) (oute= 'OUTER' )?
                            {
                            joint=(Token)input.LT(1);
                            if ( (input.LA(1)>=168 && input.LA(1)<=170) ) {
                                input.consume();
                                errorRecovery=false;failed=false;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                MismatchedSetException mse =
                                    new MismatchedSetException(null,input);
                                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_joinedTable7354);    throw mse;
                            }

                            // /Users/michaelarace/CodaServer_Src/Coda.g:1872:57: (oute= 'OUTER' )?
                            int alt210=2;
                            int LA210_0 = input.LA(1);

                            if ( (LA210_0==171) ) {
                                alt210=1;
                            }
                            switch (alt210) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1872:58: oute= 'OUTER'
                                    {
                                    oute=(Token)input.LT(1);
                                    match(input,171,FOLLOW_171_in_joinedTable7369); if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            match(input,172,FOLLOW_172_in_joinedTable7378); if (failed) return retval;
            pushFollow(FOLLOW_tableSource_in_joinedTable7382);
            ts=tableSource();
            _fsp--;
            if (failed) return retval;
            match(input,93,FOLLOW_93_in_joinedTable7384); if (failed) return retval;
            pushFollow(FOLLOW_searchCondition_in_joinedTable7388);
            sc=searchCondition();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

                   	retval.value = ts.value;
                   	retval.retObj = new CodaJoinedTable(ts.retObj, inn != null, joint == null ? null : joint.getText().toUpperCase(), sc.value);
                   
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 105, joinedTable_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end joinedTable

    public static class joinedTables_return extends ParserRuleReturnScope {
        public Vector<CodaTableNameAlias> value;
        public CodaJoinedTables retObj;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start joinedTables
    // /Users/michaelarace/CodaServer_Src/Coda.g:1879:1: joinedTables returns [Vector<CodaTableNameAlias> value, CodaJoinedTables retObj] : sts= subTableSource (jt= joinedTable )+ ;
    public final joinedTables_return joinedTables() throws RecognitionException {
        joinedTables_return retval = new joinedTables_return();
        retval.start = input.LT(1);
        int joinedTables_StartIndex = input.index();
        subTableSource_return sts = null;

        joinedTable_return jt = null;



        	if (retval.value == null) {
        		retval.value = new Vector();
        	}
        	Vector<CodaJoinedTable> joinedTables = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 106) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1886:5: (sts= subTableSource (jt= joinedTable )+ )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1886:7: sts= subTableSource (jt= joinedTable )+
            {
            pushFollow(FOLLOW_subTableSource_in_joinedTables7426);
            sts=subTableSource();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1886:26: (jt= joinedTable )+
            int cnt213=0;
            loop213:
            do {
                int alt213=2;
                int LA213_0 = input.LA(1);

                if ( ((LA213_0>=167 && LA213_0<=170)||LA213_0==172) ) {
                    alt213=1;
                }


                switch (alt213) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:1886:27: jt= joinedTable
            	    {
            	    pushFollow(FOLLOW_joinedTable_in_joinedTables7431);
            	    jt=joinedTable();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       
            	          	for (CodaTableNameAlias temp : jt.value) {
            	          		retval.value.add(temp);
            	          	}
            	          	joinedTables.add(jt.retObj);
            	          
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt213 >= 1 ) break loop213;
            	    if (backtracking>0) {failed=true; return retval;}
                        EarlyExitException eee =
                            new EarlyExitException(213, input);
                        throw eee;
                }
                cnt213++;
            } while (true);

            if ( backtracking==0 ) {

                  	for (CodaTableNameAlias temp : sts.value) {
                  		retval.value.add(temp);
                  	}
                  	retval.retObj = new CodaJoinedTables(sts.retObj, joinedTables);
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 106, joinedTables_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end joinedTables

    public static class selectClause_return extends ParserRuleReturnScope {
        public String value;
        public long top;
        public long startingAt;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start selectClause
    // /Users/michaelarace/CodaServer_Src/Coda.g:1904:1: selectClause returns [String value, long top, long startingAt] : 'SELECT' ( 'TOP' topi= Integer ( 'STARTING' 'AT' sa= Integer )? )? (dist= 'DISTINCT' )? sl= selectList ;
    public final selectClause_return selectClause() throws RecognitionException {
        selectClause_return retval = new selectClause_return();
        retval.start = input.LT(1);
        int selectClause_StartIndex = input.index();
        Token topi=null;
        Token sa=null;
        Token dist=null;
        selectList_return sl = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 107) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1905:5: ( 'SELECT' ( 'TOP' topi= Integer ( 'STARTING' 'AT' sa= Integer )? )? (dist= 'DISTINCT' )? sl= selectList )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1905:7: 'SELECT' ( 'TOP' topi= Integer ( 'STARTING' 'AT' sa= Integer )? )? (dist= 'DISTINCT' )? sl= selectList
            {
            match(input,134,FOLLOW_134_in_selectClause7486); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1905:16: ( 'TOP' topi= Integer ( 'STARTING' 'AT' sa= Integer )? )?
            int alt215=2;
            int LA215_0 = input.LA(1);

            if ( (LA215_0==173) ) {
                alt215=1;
            }
            switch (alt215) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1905:17: 'TOP' topi= Integer ( 'STARTING' 'AT' sa= Integer )?
                    {
                    match(input,173,FOLLOW_173_in_selectClause7489); if (failed) return retval;
                    topi=(Token)input.LT(1);
                    match(input,Integer,FOLLOW_Integer_in_selectClause7493); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1905:36: ( 'STARTING' 'AT' sa= Integer )?
                    int alt214=2;
                    int LA214_0 = input.LA(1);

                    if ( (LA214_0==174) ) {
                        alt214=1;
                    }
                    switch (alt214) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1905:37: 'STARTING' 'AT' sa= Integer
                            {
                            match(input,174,FOLLOW_174_in_selectClause7496); if (failed) return retval;
                            match(input,175,FOLLOW_175_in_selectClause7498); if (failed) return retval;
                            sa=(Token)input.LT(1);
                            match(input,Integer,FOLLOW_Integer_in_selectClause7502); if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:1905:69: (dist= 'DISTINCT' )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==176) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1905:70: dist= 'DISTINCT'
                    {
                    dist=(Token)input.LT(1);
                    match(input,176,FOLLOW_176_in_selectClause7512); if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_selectList_in_selectClause7518);
            sl=selectList();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

                  	retval.value = "SELECT " + (dist == null ? "" : "DISTINCT ") + sl.value;
                  	if (topi != null) {
                  		retval.top = Long.parseLong(topi.getText());
                  	} else {
                  		retval.top = -1;
                  	} 
                  	if (sa != null) {
                  		retval.startingAt = Long.parseLong(sa.getText());
                  	} else {
                  		retval.startingAt = -1;
                  	}
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 107, selectClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end selectClause

    public static class sysSelectClause_return extends ParserRuleReturnScope {
        public String value;
        public long top;
        public long startingAt;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start sysSelectClause
    // /Users/michaelarace/CodaServer_Src/Coda.g:1921:1: sysSelectClause returns [String value, long top, long startingAt] : 'SYSSELECT' (dist= 'DISTINCT' )? ( 'TOP' topi= Integer ( 'STARTING' 'AT' sa= Integer )? )? sl= selectList ;
    public final sysSelectClause_return sysSelectClause() throws RecognitionException {
        sysSelectClause_return retval = new sysSelectClause_return();
        retval.start = input.LT(1);
        int sysSelectClause_StartIndex = input.index();
        Token dist=null;
        Token topi=null;
        Token sa=null;
        selectList_return sl = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 108) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1922:5: ( 'SYSSELECT' (dist= 'DISTINCT' )? ( 'TOP' topi= Integer ( 'STARTING' 'AT' sa= Integer )? )? sl= selectList )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1922:7: 'SYSSELECT' (dist= 'DISTINCT' )? ( 'TOP' topi= Integer ( 'STARTING' 'AT' sa= Integer )? )? sl= selectList
            {
            match(input,177,FOLLOW_177_in_sysSelectClause7550); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:1922:19: (dist= 'DISTINCT' )?
            int alt217=2;
            int LA217_0 = input.LA(1);

            if ( (LA217_0==176) ) {
                alt217=1;
            }
            switch (alt217) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1922:20: dist= 'DISTINCT'
                    {
                    dist=(Token)input.LT(1);
                    match(input,176,FOLLOW_176_in_sysSelectClause7555); if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:1922:38: ( 'TOP' topi= Integer ( 'STARTING' 'AT' sa= Integer )? )?
            int alt219=2;
            int LA219_0 = input.LA(1);

            if ( (LA219_0==173) ) {
                alt219=1;
            }
            switch (alt219) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1922:39: 'TOP' topi= Integer ( 'STARTING' 'AT' sa= Integer )?
                    {
                    match(input,173,FOLLOW_173_in_sysSelectClause7560); if (failed) return retval;
                    topi=(Token)input.LT(1);
                    match(input,Integer,FOLLOW_Integer_in_sysSelectClause7564); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1922:58: ( 'STARTING' 'AT' sa= Integer )?
                    int alt218=2;
                    int LA218_0 = input.LA(1);

                    if ( (LA218_0==174) ) {
                        alt218=1;
                    }
                    switch (alt218) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1922:59: 'STARTING' 'AT' sa= Integer
                            {
                            match(input,174,FOLLOW_174_in_sysSelectClause7567); if (failed) return retval;
                            match(input,175,FOLLOW_175_in_sysSelectClause7569); if (failed) return retval;
                            sa=(Token)input.LT(1);
                            match(input,Integer,FOLLOW_Integer_in_sysSelectClause7573); if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            pushFollow(FOLLOW_selectList_in_sysSelectClause7582);
            sl=selectList();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

                  	retval.value = "SELECT " + (dist == null ? "" : "DISTINCT ") + sl.value;
                  	if (topi != null) {
                  		retval.top = Long.parseLong(topi.getText());
                  	} else {
                  		retval.top = -1;
                  	} 
                  	if (sa != null) {
                  		retval.startingAt = Long.parseLong(sa.getText());
                  	} else {
                  		retval.startingAt = -1;
                  	}
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 108, sysSelectClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end sysSelectClause

    public static class selectList_return extends ParserRuleReturnScope {
        public String value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start selectList
    // /Users/michaelarace/CodaServer_Src/Coda.g:1938:1: selectList returns [String value] : it= selectItem ( ',' it= selectItem )* ;
    public final selectList_return selectList() throws RecognitionException {
        selectList_return retval = new selectList_return();
        retval.start = input.LT(1);
        int selectList_StartIndex = input.index();
        selectItem_return it = null;



        	retval.value = "";

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 109) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1942:5: (it= selectItem ( ',' it= selectItem )* )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1942:7: it= selectItem ( ',' it= selectItem )*
            {
            pushFollow(FOLLOW_selectItem_in_selectList7620);
            it=selectItem();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               retval.value += it.value + " ";
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1942:52: ( ',' it= selectItem )*
            loop220:
            do {
                int alt220=2;
                int LA220_0 = input.LA(1);

                if ( (LA220_0==85) ) {
                    alt220=1;
                }


                switch (alt220) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:1942:54: ',' it= selectItem
            	    {
            	    match(input,85,FOLLOW_85_in_selectList7627); if (failed) return retval;
            	    pushFollow(FOLLOW_selectItem_in_selectList7631);
            	    it=selectItem();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       retval.value += ", " + it.value + " ";
            	    }

            	    }
            	    break;

            	default :
            	    break loop220;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 109, selectList_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end selectList

    public static class selectItem_return extends ParserRuleReturnScope {
        public String value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start selectItem
    // /Users/michaelarace/CodaServer_Src/Coda.g:1945:1: selectItem returns [String value] : (st1= '*' | ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? ) );
    public final selectItem_return selectItem() throws RecognitionException {
        selectItem_return retval = new selectItem_return();
        retval.start = input.LT(1);
        int selectItem_StartIndex = input.index();
        Token st1=null;
        Token st2=null;
        alias2_return a2 = null;

        column_return co = null;

        expression_return ex = null;

        alias1_return a1 = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 110) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1946:5: (st1= '*' | ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? ) )
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==178) ) {
                alt227=1;
            }
            else if ( (LA227_0==ObjectName||(LA227_0>=UnicodeStringLiteral && LA227_0<=ASCIIStringLiteral)||(LA227_0>=10 && LA227_0<=66)||LA227_0==84||LA227_0==153||(LA227_0>=190 && LA227_0<=192)||(LA227_0>=195 && LA227_0<=198)) ) {
                alt227=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("1945:1: selectItem returns [String value] : (st1= '*' | ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? ) );", 227, 0, input);

                throw nvae;
            }
            switch (alt227) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1947:7: st1= '*'
                    {
                    st1=(Token)input.LT(1);
                    match(input,178,FOLLOW_178_in_selectItem7669); if (failed) return retval;
                    if ( backtracking==0 ) {
                      if (st1 != null) { retval.value = "* ";}
                    }

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )
                    {
                    // /Users/michaelarace/CodaServer_Src/Coda.g:1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )
                    int alt226=5;
                    switch ( input.LA(1) ) {
                    case ObjectName:
                        {
                        int LA226_1 = input.LA(2);

                        if ( (LA226_1==77) && (synpred448())) {
                            alt226=1;
                        }
                        else if ( (synpred456()) ) {
                            alt226=2;
                        }
                        else if ( (synpred459()) ) {
                            alt226=3;
                        }
                        else if ( (synpred461()) ) {
                            alt226=4;
                        }
                        else if ( (synpred463()) ) {
                            alt226=5;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 10:
                    case 11:
                    case 12:
                    case 13:
                    case 14:
                    case 15:
                    case 16:
                    case 17:
                    case 18:
                    case 19:
                    case 20:
                    case 21:
                    case 22:
                    case 23:
                    case 24:
                    case 25:
                    case 26:
                    case 27:
                    case 28:
                    case 29:
                    case 30:
                    case 31:
                    case 32:
                    case 33:
                    case 34:
                    case 35:
                    case 36:
                    case 37:
                    case 38:
                    case 39:
                    case 40:
                    case 41:
                    case 42:
                    case 43:
                    case 44:
                    case 45:
                    case 46:
                    case 47:
                    case 48:
                    case 49:
                    case 50:
                    case 51:
                    case 52:
                    case 53:
                    case 54:
                    case 55:
                    case 56:
                    case 57:
                    case 58:
                    case 59:
                    case 60:
                    case 61:
                    case 62:
                    case 63:
                    case 64:
                    case 65:
                    case 66:
                        {
                        int LA226_2 = input.LA(2);

                        if ( (LA226_2==77) && (synpred448())) {
                            alt226=1;
                        }
                        else if ( (synpred456()) ) {
                            alt226=2;
                        }
                        else if ( (synpred459()) ) {
                            alt226=3;
                        }
                        else if ( (synpred461()) ) {
                            alt226=4;
                        }
                        else if ( (synpred463()) ) {
                            alt226=5;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 190:
                    case 191:
                    case 192:
                        {
                        switch ( input.LA(2) ) {
                        case ObjectName:
                            {
                            int LA226_34 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 34, input);

                                throw nvae;
                            }
                            }
                            break;
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 65:
                        case 66:
                            {
                            int LA226_35 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 35, input);

                                throw nvae;
                            }
                            }
                            break;
                        case 84:
                            {
                            int LA226_36 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 36, input);

                                throw nvae;
                            }
                            }
                            break;
                        case 153:
                            {
                            int LA226_37 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 37, input);

                                throw nvae;
                            }
                            }
                            break;
                        case UnicodeStringLiteral:
                        case ASCIIStringLiteral:
                            {
                            int LA226_38 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 38, input);

                                throw nvae;
                            }
                            }
                            break;
                        case 195:
                        case 196:
                        case 197:
                        case 198:
                            {
                            int LA226_39 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 39, input);

                                throw nvae;
                            }
                            }
                            break;
                        default:
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 3, input);

                            throw nvae;
                        }

                        }
                        break;
                    case 84:
                        {
                        switch ( input.LA(2) ) {
                        case 190:
                        case 191:
                        case 192:
                            {
                            int LA226_40 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 40, input);

                                throw nvae;
                            }
                            }
                            break;
                        case ObjectName:
                            {
                            int LA226_41 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 41, input);

                                throw nvae;
                            }
                            }
                            break;
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 48:
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 65:
                        case 66:
                            {
                            int LA226_42 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 42, input);

                                throw nvae;
                            }
                            }
                            break;
                        case 84:
                            {
                            int LA226_43 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 43, input);

                                throw nvae;
                            }
                            }
                            break;
                        case 153:
                            {
                            int LA226_44 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 44, input);

                                throw nvae;
                            }
                            }
                            break;
                        case UnicodeStringLiteral:
                        case ASCIIStringLiteral:
                            {
                            int LA226_45 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 45, input);

                                throw nvae;
                            }
                            }
                            break;
                        case 195:
                        case 196:
                        case 197:
                        case 198:
                            {
                            int LA226_46 = input.LA(3);

                            if ( (synpred459()) ) {
                                alt226=3;
                            }
                            else if ( (synpred463()) ) {
                                alt226=5;
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 46, input);

                                throw nvae;
                            }
                            }
                            break;
                        default:
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 4, input);

                            throw nvae;
                        }

                        }
                        break;
                    case 153:
                        {
                        int LA226_5 = input.LA(2);

                        if ( (synpred459()) ) {
                            alt226=3;
                        }
                        else if ( (synpred463()) ) {
                            alt226=5;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 5, input);

                            throw nvae;
                        }
                        }
                        break;
                    case UnicodeStringLiteral:
                    case ASCIIStringLiteral:
                        {
                        int LA226_6 = input.LA(2);

                        if ( (synpred459()) ) {
                            alt226=3;
                        }
                        else if ( (synpred463()) ) {
                            alt226=5;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 6, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 195:
                    case 196:
                    case 197:
                    case 198:
                        {
                        int LA226_7 = input.LA(2);

                        if ( (synpred459()) ) {
                            alt226=3;
                        }
                        else if ( (synpred463()) ) {
                            alt226=5;
                        }
                        else {
                            if (backtracking>0) {failed=true; return retval;}
                            NoViableAltException nvae =
                                new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 7, input);

                            throw nvae;
                        }
                        }
                        break;
                    default:
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("1948:7: ( ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression ) | ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )? | ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )? | ( column )=>co= column (a1= alias1 )? | ( expression )=>ex= expression (a1= alias1 )? )", 226, 0, input);

                        throw nvae;
                    }

                    switch (alt226) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1950:7: ( alias2 )=> ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression )
                            {
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1950:19: ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression )
                            int alt221=5;
                            int LA221_0 = input.LA(1);

                            if ( (LA221_0==ObjectName) ) {
                                int LA221_1 = input.LA(2);

                                if ( (LA221_1==77) ) {
                                    int LA221_3 = input.LA(3);

                                    if ( (synpred449()) ) {
                                        alt221=1;
                                    }
                                    else if ( (synpred450()) ) {
                                        alt221=2;
                                    }
                                    else if ( (synpred452()) ) {
                                        alt221=3;
                                    }
                                    else if ( (synpred453()) ) {
                                        alt221=4;
                                    }
                                    else if ( (synpred454()) ) {
                                        alt221=5;
                                    }
                                    else {
                                        if (backtracking>0) {failed=true; return retval;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("1950:19: ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression )", 221, 3, input);

                                        throw nvae;
                                    }
                                }
                                else {
                                    if (backtracking>0) {failed=true; return retval;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("1950:19: ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression )", 221, 1, input);

                                    throw nvae;
                                }
                            }
                            else if ( ((LA221_0>=10 && LA221_0<=66)) ) {
                                int LA221_2 = input.LA(2);

                                if ( (LA221_2==77) ) {
                                    int LA221_4 = input.LA(3);

                                    if ( (synpred449()) ) {
                                        alt221=1;
                                    }
                                    else if ( (synpred450()) ) {
                                        alt221=2;
                                    }
                                    else if ( (synpred452()) ) {
                                        alt221=3;
                                    }
                                    else if ( (synpred453()) ) {
                                        alt221=4;
                                    }
                                    else if ( (synpred454()) ) {
                                        alt221=5;
                                    }
                                    else {
                                        if (backtracking>0) {failed=true; return retval;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("1950:19: ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression )", 221, 4, input);

                                        throw nvae;
                                    }
                                }
                                else {
                                    if (backtracking>0) {failed=true; return retval;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("1950:19: ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression )", 221, 2, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (backtracking>0) {failed=true; return retval;}
                                NoViableAltException nvae =
                                    new NoViableAltException("1950:19: ( ( alias2 '*' )=>a2= alias2 st2= '*' | ( alias2 dbObject ',' )=>a2= alias2 co= column | ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression | ( alias2 column )=>a2= alias2 co= column | ( alias2 expression )=>a2= alias2 ex= expression )", 221, 0, input);

                                throw nvae;
                            }
                            switch (alt221) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1951:11: ( alias2 '*' )=>a2= alias2 st2= '*'
                                    {
                                    pushFollow(FOLLOW_alias2_in_selectItem7722);
                                    a2=alias2();
                                    _fsp--;
                                    if (failed) return retval;
                                    st2=(Token)input.LT(1);
                                    match(input,178,FOLLOW_178_in_selectItem7726); if (failed) return retval;

                                    }
                                    break;
                                case 2 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1952:11: ( alias2 dbObject ',' )=>a2= alias2 co= column
                                    {
                                    pushFollow(FOLLOW_alias2_in_selectItem7750);
                                    a2=alias2();
                                    _fsp--;
                                    if (failed) return retval;
                                    pushFollow(FOLLOW_column_in_selectItem7754);
                                    co=column();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;
                                case 3 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1953:11: ( alias2 dbObject ( arithmeticOperator | '(' ) )=>a2= alias2 ex= expression
                                    {
                                    pushFollow(FOLLOW_alias2_in_selectItem7784);
                                    a2=alias2();
                                    _fsp--;
                                    if (failed) return retval;
                                    pushFollow(FOLLOW_expression_in_selectItem7788);
                                    ex=expression();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;
                                case 4 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1954:11: ( alias2 column )=>a2= alias2 co= column
                                    {
                                    pushFollow(FOLLOW_alias2_in_selectItem7810);
                                    a2=alias2();
                                    _fsp--;
                                    if (failed) return retval;
                                    pushFollow(FOLLOW_column_in_selectItem7814);
                                    co=column();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;
                                case 5 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1955:11: ( alias2 expression )=>a2= alias2 ex= expression
                                    {
                                    pushFollow(FOLLOW_alias2_in_selectItem7836);
                                    a2=alias2();
                                    _fsp--;
                                    if (failed) return retval;
                                    pushFollow(FOLLOW_expression_in_selectItem7840);
                                    ex=expression();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1958:7: ( dbObject ( alias1 )? ',' )=>co= column (a1= alias1 )?
                            {
                            pushFollow(FOLLOW_column_in_selectItem7880);
                            co=column();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1958:45: (a1= alias1 )?
                            int alt222=2;
                            int LA222_0 = input.LA(1);

                            if ( (LA222_0==ObjectName||(LA222_0>=10 && LA222_0<=66)||LA222_0==97) ) {
                                alt222=1;
                            }
                            switch (alt222) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1958:46: a1= alias1
                                    {
                                    pushFollow(FOLLOW_alias1_in_selectItem7885);
                                    a1=alias1();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;
                        case 3 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1959:7: ( dbObject ( arithmeticOperator | '(' ) )=>ex= expression (a1= alias1 )?
                            {
                            pushFollow(FOLLOW_expression_in_selectItem7912);
                            ex=expression();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1959:63: (a1= alias1 )?
                            int alt223=2;
                            int LA223_0 = input.LA(1);

                            if ( (LA223_0==ObjectName||(LA223_0>=10 && LA223_0<=66)||LA223_0==97) ) {
                                alt223=1;
                            }
                            switch (alt223) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1959:64: a1= alias1
                                    {
                                    pushFollow(FOLLOW_alias1_in_selectItem7917);
                                    a1=alias1();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;
                        case 4 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1962:7: ( column )=>co= column (a1= alias1 )?
                            {
                            pushFollow(FOLLOW_column_in_selectItem7947);
                            co=column();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1962:29: (a1= alias1 )?
                            int alt224=2;
                            int LA224_0 = input.LA(1);

                            if ( (LA224_0==ObjectName||(LA224_0>=10 && LA224_0<=66)||LA224_0==97) ) {
                                alt224=1;
                            }
                            switch (alt224) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1962:30: a1= alias1
                                    {
                                    pushFollow(FOLLOW_alias1_in_selectItem7952);
                                    a1=alias1();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;
                        case 5 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1963:7: ( expression )=>ex= expression (a1= alias1 )?
                            {
                            pushFollow(FOLLOW_expression_in_selectItem7970);
                            ex=expression();
                            _fsp--;
                            if (failed) return retval;
                            // /Users/michaelarace/CodaServer_Src/Coda.g:1963:37: (a1= alias1 )?
                            int alt225=2;
                            int LA225_0 = input.LA(1);

                            if ( (LA225_0==ObjectName||(LA225_0>=10 && LA225_0<=66)||LA225_0==97) ) {
                                alt225=1;
                            }
                            switch (alt225) {
                                case 1 :
                                    // /Users/michaelarace/CodaServer_Src/Coda.g:1963:38: a1= alias1
                                    {
                                    pushFollow(FOLLOW_alias1_in_selectItem7975);
                                    a1=alias1();
                                    _fsp--;
                                    if (failed) return retval;

                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    if ( backtracking==0 ) {

                          	if (st1 != null) {
                          		retval.value = "* ";
                          	} else if (a2 != null) {
                          		if (st2 != null) {
                          			retval.value = a2.value + ".* "; 
                          		} else if (ex != null) {
                          			retval.value = a2.value + "." + ex.value.toString() + " ";
                          		} else {
                          			retval.value = a2.value + "." + input.toString(co.start,co.stop) + " ";
                          		}
                          	} else if (co != null) {
                          		retval.value = input.toString(co.start,co.stop) + " ";
                          		if (a1 != null) {
                          			retval.value += " AS " + a1.value + " ";
                          		}
                          	} else if (ex != null) {
                          		retval.value = ex.value.toString() + " ";
                          		if (a1 != null) {
                          			retval.value += " AS " + a1.value + " ";
                          		}
                          	} else {
                          		retval.value = " ";
                          	}
                          	
                          
                    }

                    }
                    break;

            }
            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 110, selectItem_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end selectItem

    public static class column_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start column
    // /Users/michaelarace/CodaServer_Src/Coda.g:1994:1: column : dbObject ;
    public final column_return column() throws RecognitionException {
        column_return retval = new column_return();
        retval.start = input.LT(1);
        int column_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 111) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:1995:5: ( dbObject )
            // /Users/michaelarace/CodaServer_Src/Coda.g:1996:7: dbObject
            {
            pushFollow(FOLLOW_dbObject_in_column8021);
            dbObject();
            _fsp--;
            if (failed) return retval;

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 111, column_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end column

    public static class searchCondition_return extends ParserRuleReturnScope {
        public CodaSearchCondition value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start searchCondition
    // /Users/michaelarace/CodaServer_Src/Coda.g:1999:1: searchCondition returns [CodaSearchCondition value] : ssc= subSearchCondition (op= ( 'AND' | 'OR' ) ssc= subSearchCondition )* ;
    public final searchCondition_return searchCondition() throws RecognitionException {
        searchCondition_return retval = new searchCondition_return();
        retval.start = input.LT(1);
        int searchCondition_StartIndex = input.index();
        Token op=null;
        subSearchCondition_return ssc = null;



        Vector operators = new Vector();
        Vector subConditions = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 112) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2003:3: (ssc= subSearchCondition (op= ( 'AND' | 'OR' ) ssc= subSearchCondition )* )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2004:5: ssc= subSearchCondition (op= ( 'AND' | 'OR' ) ssc= subSearchCondition )*
            {
            pushFollow(FOLLOW_subSearchCondition_in_searchCondition8054);
            ssc=subSearchCondition();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
               subConditions.add(ssc.value);
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2004:62: (op= ( 'AND' | 'OR' ) ssc= subSearchCondition )*
            loop228:
            do {
                int alt228=2;
                int LA228_0 = input.LA(1);

                if ( ((LA228_0>=179 && LA228_0<=180)) ) {
                    alt228=1;
                }


                switch (alt228) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:2004:63: op= ( 'AND' | 'OR' ) ssc= subSearchCondition
            	    {
            	    op=(Token)input.LT(1);
            	    if ( (input.LA(1)>=179 && input.LA(1)<=180) ) {
            	        input.consume();
            	        errorRecovery=false;failed=false;
            	    }
            	    else {
            	        if (backtracking>0) {failed=true; return retval;}
            	        MismatchedSetException mse =
            	            new MismatchedSetException(null,input);
            	        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_searchCondition8061);    throw mse;
            	    }

            	    if ( backtracking==0 ) {
            	       operators.add(op.getText());
            	    }
            	    pushFollow(FOLLOW_subSearchCondition_in_searchCondition8073);
            	    ssc=subSearchCondition();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	       subConditions.add(ssc.value); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop228;
                }
            } while (true);

            if ( backtracking==0 ) {

                  	retval.value = new CodaSearchCondition(subConditions, operators);
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 112, searchCondition_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end searchCondition

    public static class subSearchCondition_return extends ParserRuleReturnScope {
        public CodaSubSearchCondition value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start subSearchCondition
    // /Users/michaelarace/CodaServer_Src/Coda.g:2010:1: subSearchCondition returns [CodaSubSearchCondition value] : (not= 'NOT' )? ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate ) ;
    public final subSearchCondition_return subSearchCondition() throws RecognitionException {
        subSearchCondition_return retval = new subSearchCondition_return();
        retval.start = input.LT(1);
        int subSearchCondition_StartIndex = input.index();
        Token not=null;
        searchCondition_return sc = null;

        predicate_return pred = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 113) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2011:5: ( (not= 'NOT' )? ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2012:5: (not= 'NOT' )? ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate )
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:2012:5: (not= 'NOT' )?
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==154) ) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2012:6: not= 'NOT'
                    {
                    not=(Token)input.LT(1);
                    match(input,154,FOLLOW_154_in_subSearchCondition8116); if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:2012:18: ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate )
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==84) ) {
                int LA230_1 = input.LA(2);

                if ( (LA230_1==154) && (synpred468())) {
                    alt230=1;
                }
                else if ( (LA230_1==84) ) {
                    int LA230_9 = input.LA(3);

                    if ( (synpred468()) ) {
                        alt230=1;
                    }
                    else if ( (true) ) {
                        alt230=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("2012:18: ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate )", 230, 9, input);

                        throw nvae;
                    }
                }
                else if ( ((LA230_1>=190 && LA230_1<=192)) ) {
                    int LA230_10 = input.LA(3);

                    if ( (synpred468()) ) {
                        alt230=1;
                    }
                    else if ( (true) ) {
                        alt230=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("2012:18: ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate )", 230, 10, input);

                        throw nvae;
                    }
                }
                else if ( (LA230_1==ObjectName) ) {
                    int LA230_11 = input.LA(3);

                    if ( (synpred468()) ) {
                        alt230=1;
                    }
                    else if ( (true) ) {
                        alt230=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("2012:18: ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate )", 230, 11, input);

                        throw nvae;
                    }
                }
                else if ( ((LA230_1>=10 && LA230_1<=66)) ) {
                    int LA230_12 = input.LA(3);

                    if ( (synpred468()) ) {
                        alt230=1;
                    }
                    else if ( (true) ) {
                        alt230=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("2012:18: ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate )", 230, 12, input);

                        throw nvae;
                    }
                }
                else if ( (LA230_1==153) ) {
                    int LA230_13 = input.LA(3);

                    if ( (synpred468()) ) {
                        alt230=1;
                    }
                    else if ( (true) ) {
                        alt230=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("2012:18: ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate )", 230, 13, input);

                        throw nvae;
                    }
                }
                else if ( ((LA230_1>=UnicodeStringLiteral && LA230_1<=ASCIIStringLiteral)) ) {
                    int LA230_14 = input.LA(3);

                    if ( (synpred468()) ) {
                        alt230=1;
                    }
                    else if ( (true) ) {
                        alt230=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("2012:18: ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate )", 230, 14, input);

                        throw nvae;
                    }
                }
                else if ( ((LA230_1>=195 && LA230_1<=198)) ) {
                    int LA230_15 = input.LA(3);

                    if ( (synpred468()) ) {
                        alt230=1;
                    }
                    else if ( (true) ) {
                        alt230=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("2012:18: ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate )", 230, 15, input);

                        throw nvae;
                    }
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("2012:18: ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate )", 230, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA230_0==ObjectName||(LA230_0>=UnicodeStringLiteral && LA230_0<=ASCIIStringLiteral)||(LA230_0>=10 && LA230_0<=66)||LA230_0==153||(LA230_0>=190 && LA230_0<=192)||(LA230_0>=195 && LA230_0<=198)) ) {
                alt230=2;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("2012:18: ( ( '(' searchCondition ')' )=> '(' sc= searchCondition ')' | pred= predicate )", 230, 0, input);

                throw nvae;
            }
            switch (alt230) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2013:10: ( '(' searchCondition ')' )=> '(' sc= searchCondition ')'
                    {
                    match(input,84,FOLLOW_84_in_subSearchCondition8142); if (failed) return retval;
                    pushFollow(FOLLOW_searchCondition_in_subSearchCondition8146);
                    sc=searchCondition();
                    _fsp--;
                    if (failed) return retval;
                    match(input,86,FOLLOW_86_in_subSearchCondition8148); if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2014:11: pred= predicate
                    {
                    pushFollow(FOLLOW_predicate_in_subSearchCondition8162);
                    pred=predicate();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

                  	if (sc != null) {
                  		retval.value = new CodaSubSearchCondition((not != null ? true : false), sc.value);
                  	} else {
                  		retval.value = new CodaSubSearchCondition((not != null ? true : false), pred.value);
                  	}
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 113, subSearchCondition_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end subSearchCondition

    public static class predicate_return extends ParserRuleReturnScope {
        public CodaPredicate value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start predicate
    // /Users/michaelarace/CodaServer_Src/Coda.g:2025:1: predicate returns [CodaPredicate value] : exp1= expression (co= comparisonOperator exp2= expression | 'IS' (not= 'NOT' )? nil= 'NULL' | (not= 'NOT' )? (li= 'LIKE' exp2= expression | in= 'IN' '(' stl+= stringLiteral ( ',' stl+= stringLiteral )* ')' ) | 'CONTAINS' sl= stringLiteral ) ;
    public final predicate_return predicate() throws RecognitionException {
        predicate_return retval = new predicate_return();
        retval.start = input.LT(1);
        int predicate_StartIndex = input.index();
        Token not=null;
        Token nil=null;
        Token li=null;
        Token in=null;
        List list_stl=null;
        expression_return exp1 = null;

        comparisonOperator_return co = null;

        expression_return exp2 = null;

        stringLiteral_return sl = null;

        RuleReturnScope stl = null;
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 114) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2026:5: (exp1= expression (co= comparisonOperator exp2= expression | 'IS' (not= 'NOT' )? nil= 'NULL' | (not= 'NOT' )? (li= 'LIKE' exp2= expression | in= 'IN' '(' stl+= stringLiteral ( ',' stl+= stringLiteral )* ')' ) | 'CONTAINS' sl= stringLiteral ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2028:7: exp1= expression (co= comparisonOperator exp2= expression | 'IS' (not= 'NOT' )? nil= 'NULL' | (not= 'NOT' )? (li= 'LIKE' exp2= expression | in= 'IN' '(' stl+= stringLiteral ( ',' stl+= stringLiteral )* ')' ) | 'CONTAINS' sl= stringLiteral )
            {
            pushFollow(FOLLOW_expression_in_predicate8216);
            exp1=expression();
            _fsp--;
            if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:2028:23: (co= comparisonOperator exp2= expression | 'IS' (not= 'NOT' )? nil= 'NULL' | (not= 'NOT' )? (li= 'LIKE' exp2= expression | in= 'IN' '(' stl+= stringLiteral ( ',' stl+= stringLiteral )* ')' ) | 'CONTAINS' sl= stringLiteral )
            int alt235=4;
            switch ( input.LA(1) ) {
            case 99:
            case 183:
            case 184:
            case 185:
            case 186:
            case 187:
            case 188:
                {
                alt235=1;
                }
                break;
            case 128:
                {
                alt235=2;
                }
                break;
            case 78:
            case 154:
            case 181:
                {
                alt235=3;
                }
                break;
            case 182:
                {
                alt235=4;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("2028:23: (co= comparisonOperator exp2= expression | 'IS' (not= 'NOT' )? nil= 'NULL' | (not= 'NOT' )? (li= 'LIKE' exp2= expression | in= 'IN' '(' stl+= stringLiteral ( ',' stl+= stringLiteral )* ')' ) | 'CONTAINS' sl= stringLiteral )", 235, 0, input);

                throw nvae;
            }

            switch (alt235) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2030:9: co= comparisonOperator exp2= expression
                    {
                    pushFollow(FOLLOW_comparisonOperator_in_predicate8239);
                    co=comparisonOperator();
                    _fsp--;
                    if (failed) return retval;
                    pushFollow(FOLLOW_expression_in_predicate8243);
                    exp2=expression();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2031:9: 'IS' (not= 'NOT' )? nil= 'NULL'
                    {
                    match(input,128,FOLLOW_128_in_predicate8254); if (failed) return retval;
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2031:14: (not= 'NOT' )?
                    int alt231=2;
                    int LA231_0 = input.LA(1);

                    if ( (LA231_0==154) ) {
                        alt231=1;
                    }
                    switch (alt231) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:2031:15: not= 'NOT'
                            {
                            not=(Token)input.LT(1);
                            match(input,154,FOLLOW_154_in_predicate8259); if (failed) return retval;

                            }
                            break;

                    }

                    nil=(Token)input.LT(1);
                    match(input,153,FOLLOW_153_in_predicate8265); if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2032:9: (not= 'NOT' )? (li= 'LIKE' exp2= expression | in= 'IN' '(' stl+= stringLiteral ( ',' stl+= stringLiteral )* ')' )
                    {
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2032:9: (not= 'NOT' )?
                    int alt232=2;
                    int LA232_0 = input.LA(1);

                    if ( (LA232_0==154) ) {
                        alt232=1;
                    }
                    switch (alt232) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:2032:10: not= 'NOT'
                            {
                            not=(Token)input.LT(1);
                            match(input,154,FOLLOW_154_in_predicate8279); if (failed) return retval;

                            }
                            break;

                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:2032:22: (li= 'LIKE' exp2= expression | in= 'IN' '(' stl+= stringLiteral ( ',' stl+= stringLiteral )* ')' )
                    int alt234=2;
                    int LA234_0 = input.LA(1);

                    if ( (LA234_0==181) ) {
                        alt234=1;
                    }
                    else if ( (LA234_0==78) ) {
                        alt234=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("2032:22: (li= 'LIKE' exp2= expression | in= 'IN' '(' stl+= stringLiteral ( ',' stl+= stringLiteral )* ')' )", 234, 0, input);

                        throw nvae;
                    }
                    switch (alt234) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:2033:13: li= 'LIKE' exp2= expression
                            {
                            li=(Token)input.LT(1);
                            match(input,181,FOLLOW_181_in_predicate8299); if (failed) return retval;
                            pushFollow(FOLLOW_expression_in_predicate8303);
                            exp2=expression();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:2034:13: in= 'IN' '(' stl+= stringLiteral ( ',' stl+= stringLiteral )* ')'
                            {
                            in=(Token)input.LT(1);
                            match(input,78,FOLLOW_78_in_predicate8320); if (failed) return retval;
                            match(input,84,FOLLOW_84_in_predicate8322); if (failed) return retval;
                            pushFollow(FOLLOW_stringLiteral_in_predicate8326);
                            stl=stringLiteral();
                            _fsp--;
                            if (failed) return retval;
                            if (list_stl==null) list_stl=new ArrayList();
                            list_stl.add(stl.getTemplate());

                            // /Users/michaelarace/CodaServer_Src/Coda.g:2034:44: ( ',' stl+= stringLiteral )*
                            loop233:
                            do {
                                int alt233=2;
                                int LA233_0 = input.LA(1);

                                if ( (LA233_0==85) ) {
                                    alt233=1;
                                }


                                switch (alt233) {
                            	case 1 :
                            	    // /Users/michaelarace/CodaServer_Src/Coda.g:2034:45: ',' stl+= stringLiteral
                            	    {
                            	    match(input,85,FOLLOW_85_in_predicate8329); if (failed) return retval;
                            	    pushFollow(FOLLOW_stringLiteral_in_predicate8333);
                            	    stl=stringLiteral();
                            	    _fsp--;
                            	    if (failed) return retval;
                            	    if (list_stl==null) list_stl=new ArrayList();
                            	    list_stl.add(stl.getTemplate());


                            	    }
                            	    break;

                            	default :
                            	    break loop233;
                                }
                            } while (true);

                            match(input,86,FOLLOW_86_in_predicate8337); if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2036:9: 'CONTAINS' sl= stringLiteral
                    {
                    match(input,182,FOLLOW_182_in_predicate8359); if (failed) return retval;
                    pushFollow(FOLLOW_stringLiteral_in_predicate8363);
                    sl=stringLiteral();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

                  	if (co != null) {
                  		retval.value = new CodaPredicate(exp1.value, input.toString(co.start,co.stop), exp2.value);
                  	} else if (nil != null) {
                  		retval.value = new CodaPredicate(exp1.value, (not != null ? true : false));
                  	} else if (li != null) {
                  		retval.value = new CodaPredicate(exp1.value, (not != null ? true : false), exp2.value);
                  	} else if (in != null) {
                  		retval.value = new CodaPredicate(exp1.value, (not != null ? true : false), new Vector(list_stl));
                  	} else {
                  		retval.value = new CodaPredicate(exp1.value, sl.value);
                  	}
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 114, predicate_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end predicate

    public static class comparisonOperator_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start comparisonOperator
    // /Users/michaelarace/CodaServer_Src/Coda.g:2052:1: comparisonOperator : ( '=' | '<>' | '<=' | '!=' | '<' | '>=' | '>' );
    public final comparisonOperator_return comparisonOperator() throws RecognitionException {
        comparisonOperator_return retval = new comparisonOperator_return();
        retval.start = input.LT(1);
        int comparisonOperator_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 115) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2053:5: ( '=' | '<>' | '<=' | '!=' | '<' | '>=' | '>' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:
            {
            if ( input.LA(1)==99||(input.LA(1)>=183 && input.LA(1)<=188) ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_comparisonOperator0);    throw mse;
            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 115, comparisonOperator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end comparisonOperator

    public static class expression_return extends ParserRuleReturnScope {
        public CodaExpression value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start expression
    // /Users/michaelarace/CodaServer_Src/Coda.g:2057:1: expression returns [CodaExpression value] : sube= subExpression (ae= arithmeticOperator sube= subExpression )* ;
    public final expression_return expression() throws RecognitionException {
        expression_return retval = new expression_return();
        retval.start = input.LT(1);
        int expression_StartIndex = input.index();
        subExpression_return sube = null;

        arithmeticOperator_return ae = null;



        Vector arithmeticOperators = new Vector();
        Vector subExpressions = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 116) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2062:5: (sube= subExpression (ae= arithmeticOperator sube= subExpression )* )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2063:7: sube= subExpression (ae= arithmeticOperator sube= subExpression )*
            {
            pushFollow(FOLLOW_subExpression_in_expression8465);
            sube=subExpression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
              subExpressions.add(sube.value);
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2063:61: (ae= arithmeticOperator sube= subExpression )*
            loop236:
            do {
                int alt236=2;
                int LA236_0 = input.LA(1);

                if ( (LA236_0==178||(LA236_0>=190 && LA236_0<=191)||(LA236_0>=193 && LA236_0<=194)) ) {
                    alt236=1;
                }


                switch (alt236) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:2063:62: ae= arithmeticOperator sube= subExpression
            	    {
            	    pushFollow(FOLLOW_arithmeticOperator_in_expression8472);
            	    ae=arithmeticOperator();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	      arithmeticOperators.add(input.toString(ae.start,ae.stop));
            	    }
            	    pushFollow(FOLLOW_subExpression_in_expression8478);
            	    sube=subExpression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	      subExpressions.add(sube.value);
            	    }

            	    }
            	    break;

            	default :
            	    break loop236;
                }
            } while (true);

            if ( backtracking==0 ) {

                    	retval.value = new CodaExpression(subExpressions, arithmeticOperators);
                    
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 116, expression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end expression

    public static class subExpression_return extends ParserRuleReturnScope {
        public CodaSubExpression value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start subExpression
    // /Users/michaelarace/CodaServer_Src/Coda.g:2069:1: subExpression returns [CodaSubExpression value] : (uo= unaryOperator )? ( ( function )=>funct= function | '(' exp= expression ')' | ( ( alias2 )? dbObject )=> (al= alias2 )? obj= dbObject | con= constant ) ;
    public final subExpression_return subExpression() throws RecognitionException {
        subExpression_return retval = new subExpression_return();
        retval.start = input.LT(1);
        int subExpression_StartIndex = input.index();
        unaryOperator_return uo = null;

        function_return funct = null;

        expression_return exp = null;

        alias2_return al = null;

        dbObject_return obj = null;

        constant_return con = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 117) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2070:5: ( (uo= unaryOperator )? ( ( function )=>funct= function | '(' exp= expression ')' | ( ( alias2 )? dbObject )=> (al= alias2 )? obj= dbObject | con= constant ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2071:5: (uo= unaryOperator )? ( ( function )=>funct= function | '(' exp= expression ')' | ( ( alias2 )? dbObject )=> (al= alias2 )? obj= dbObject | con= constant )
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:2071:5: (uo= unaryOperator )?
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( ((LA237_0>=190 && LA237_0<=192)) ) {
                alt237=1;
            }
            switch (alt237) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2071:6: uo= unaryOperator
                    {
                    pushFollow(FOLLOW_unaryOperator_in_subExpression8519);
                    uo=unaryOperator();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            // /Users/michaelarace/CodaServer_Src/Coda.g:2072:5: ( ( function )=>funct= function | '(' exp= expression ')' | ( ( alias2 )? dbObject )=> (al= alias2 )? obj= dbObject | con= constant )
            int alt239=4;
            switch ( input.LA(1) ) {
            case ObjectName:
                {
                int LA239_1 = input.LA(2);

                if ( (LA239_1==178||(LA239_1>=190 && LA239_1<=191)||(LA239_1>=193 && LA239_1<=194)) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==85) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==113) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==EOF) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==97) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==ObjectName) && (synpred487())) {
                    alt239=3;
                }
                else if ( ((LA239_1>=10 && LA239_1<=66)) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==99||(LA239_1>=183 && LA239_1<=188)) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==128) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==154) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==181) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==78) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==182) && (synpred487())) {
                    alt239=3;
                }
                else if ( ((LA239_1>=179 && LA239_1<=180)) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==124) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==79) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==130) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==93) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==167) && (synpred487())) {
                    alt239=3;
                }
                else if ( ((LA239_1>=168 && LA239_1<=170)) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==172) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==86) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==199) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==200) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==201) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_1==84) && (synpred484())) {
                    alt239=1;
                }
                else if ( (LA239_1==77) && (synpred487())) {
                    alt239=3;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("2072:5: ( ( function )=>funct= function | '(' exp= expression ')' | ( ( alias2 )? dbObject )=> (al= alias2 )? obj= dbObject | con= constant )", 239, 1, input);

                    throw nvae;
                }
                }
                break;
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 32:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 65:
            case 66:
                {
                int LA239_2 = input.LA(2);

                if ( (LA239_2==77) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==178||(LA239_2>=190 && LA239_2<=191)||(LA239_2>=193 && LA239_2<=194)) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==85) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==113) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==EOF) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==97) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==ObjectName) && (synpred487())) {
                    alt239=3;
                }
                else if ( ((LA239_2>=10 && LA239_2<=66)) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==99||(LA239_2>=183 && LA239_2<=188)) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==128) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==154) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==181) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==78) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==182) && (synpred487())) {
                    alt239=3;
                }
                else if ( ((LA239_2>=179 && LA239_2<=180)) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==124) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==79) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==130) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==93) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==167) && (synpred487())) {
                    alt239=3;
                }
                else if ( ((LA239_2>=168 && LA239_2<=170)) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==172) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==86) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==199) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==200) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==201) && (synpred487())) {
                    alt239=3;
                }
                else if ( (LA239_2==84) && (synpred484())) {
                    alt239=1;
                }
                else {
                    if (backtracking>0) {failed=true; return retval;}
                    NoViableAltException nvae =
                        new NoViableAltException("2072:5: ( ( function )=>funct= function | '(' exp= expression ')' | ( ( alias2 )? dbObject )=> (al= alias2 )? obj= dbObject | con= constant )", 239, 2, input);

                    throw nvae;
                }
                }
                break;
            case 84:
                {
                alt239=2;
                }
                break;
            case UnicodeStringLiteral:
            case ASCIIStringLiteral:
            case 153:
            case 195:
            case 196:
            case 197:
            case 198:
                {
                alt239=4;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("2072:5: ( ( function )=>funct= function | '(' exp= expression ')' | ( ( alias2 )? dbObject )=> (al= alias2 )? obj= dbObject | con= constant )", 239, 0, input);

                throw nvae;
            }

            switch (alt239) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2073:7: ( function )=>funct= function
                    {
                    pushFollow(FOLLOW_function_in_subExpression8543);
                    funct=function();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2074:7: '(' exp= expression ')'
                    {
                    match(input,84,FOLLOW_84_in_subExpression8551); if (failed) return retval;
                    pushFollow(FOLLOW_expression_in_subExpression8555);
                    exp=expression();
                    _fsp--;
                    if (failed) return retval;
                    match(input,86,FOLLOW_86_in_subExpression8557); if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2075:7: ( ( alias2 )? dbObject )=> (al= alias2 )? obj= dbObject
                    {
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2075:31: (al= alias2 )?
                    int alt238=2;
                    int LA238_0 = input.LA(1);

                    if ( (LA238_0==ObjectName) ) {
                        int LA238_1 = input.LA(2);

                        if ( (LA238_1==77) ) {
                            alt238=1;
                        }
                    }
                    else if ( ((LA238_0>=10 && LA238_0<=66)) ) {
                        int LA238_2 = input.LA(2);

                        if ( (LA238_2==77) ) {
                            alt238=1;
                        }
                    }
                    switch (alt238) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:2075:32: al= alias2
                            {
                            pushFollow(FOLLOW_alias2_in_subExpression8579);
                            al=alias2();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }

                    pushFollow(FOLLOW_dbObject_in_subExpression8585);
                    obj=dbObject();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 4 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2076:8: con= constant
                    {
                    pushFollow(FOLLOW_constant_in_subExpression8599);
                    con=constant();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

                  	if (funct != null) {
                  		retval.value = new CodaSubExpression(server.getSessionUsername(sessionKey), server.getSessionGroup(sessionKey), uo != null ? input.toString(uo.start,uo.stop) : null, funct.value);
                  	} else if (exp != null) {
                  		retval.value = new CodaSubExpression(server.getSessionUsername(sessionKey), server.getSessionGroup(sessionKey), uo != null ? input.toString(uo.start,uo.stop) : null, exp.value);
                  	} else if (obj != null) {
                  		retval.value = new CodaSubExpression(server.getSessionUsername(sessionKey), server.getSessionGroup(sessionKey), uo != null ? input.toString(uo.start,uo.stop) : null, al != null ? al.value : null, input.toString(obj.start,obj.stop));
                  	} else {
                  		retval.value = new CodaSubExpression(server.getSessionUsername(sessionKey), server.getSessionGroup(sessionKey), uo != null ? input.toString(uo.start,uo.stop) : null, con.value);
                  	}
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 117, subExpression_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end subExpression

    public static class function_return extends ParserRuleReturnScope {
        public CodaFunction value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start function
    // /Users/michaelarace/CodaServer_Src/Coda.g:2092:1: function returns [CodaFunction value] : fn= dbObject '(' (ex= expression ( ',' ex= expression )* | st1= '*' | agg= ( 'ALL' | 'DISTINCT' ) (st2= '*' | ex2= expression ) )? ')' ;
    public final function_return function() throws RecognitionException {
        function_return retval = new function_return();
        retval.start = input.LT(1);
        int function_StartIndex = input.index();
        Token st1=null;
        Token agg=null;
        Token st2=null;
        dbObject_return fn = null;

        expression_return ex = null;

        expression_return ex2 = null;



        	Vector<CodaExpression> expressions = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 118) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2096:5: (fn= dbObject '(' (ex= expression ( ',' ex= expression )* | st1= '*' | agg= ( 'ALL' | 'DISTINCT' ) (st2= '*' | ex2= expression ) )? ')' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2097:5: fn= dbObject '(' (ex= expression ( ',' ex= expression )* | st1= '*' | agg= ( 'ALL' | 'DISTINCT' ) (st2= '*' | ex2= expression ) )? ')'
            {
            pushFollow(FOLLOW_dbObject_in_function8644);
            fn=dbObject();
            _fsp--;
            if (failed) return retval;
            match(input,84,FOLLOW_84_in_function8646); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:2097:21: (ex= expression ( ',' ex= expression )* | st1= '*' | agg= ( 'ALL' | 'DISTINCT' ) (st2= '*' | ex2= expression ) )?
            int alt242=4;
            switch ( input.LA(1) ) {
                case ObjectName:
                case UnicodeStringLiteral:
                case ASCIIStringLiteral:
                case 10:
                case 11:
                case 12:
                case 13:
                case 14:
                case 15:
                case 16:
                case 17:
                case 18:
                case 19:
                case 20:
                case 21:
                case 22:
                case 23:
                case 24:
                case 25:
                case 26:
                case 27:
                case 28:
                case 29:
                case 30:
                case 31:
                case 32:
                case 33:
                case 34:
                case 35:
                case 36:
                case 37:
                case 38:
                case 39:
                case 40:
                case 41:
                case 42:
                case 43:
                case 44:
                case 45:
                case 46:
                case 47:
                case 48:
                case 49:
                case 50:
                case 51:
                case 52:
                case 53:
                case 54:
                case 55:
                case 56:
                case 57:
                case 58:
                case 59:
                case 60:
                case 61:
                case 62:
                case 63:
                case 64:
                case 65:
                case 66:
                case 84:
                case 153:
                case 190:
                case 191:
                case 192:
                case 195:
                case 196:
                case 197:
                case 198:
                    {
                    alt242=1;
                    }
                    break;
                case 178:
                    {
                    alt242=2;
                    }
                    break;
                case 176:
                case 189:
                    {
                    alt242=3;
                    }
                    break;
            }

            switch (alt242) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2098:11: ex= expression ( ',' ex= expression )*
                    {
                    pushFollow(FOLLOW_expression_in_function8662);
                    ex=expression();
                    _fsp--;
                    if (failed) return retval;
                    if ( backtracking==0 ) {
                       expressions.add(ex.value); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2098:57: ( ',' ex= expression )*
                    loop240:
                    do {
                        int alt240=2;
                        int LA240_0 = input.LA(1);

                        if ( (LA240_0==85) ) {
                            alt240=1;
                        }


                        switch (alt240) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:2098:58: ',' ex= expression
                    	    {
                    	    match(input,85,FOLLOW_85_in_function8667); if (failed) return retval;
                    	    pushFollow(FOLLOW_expression_in_function8671);
                    	    ex=expression();
                    	    _fsp--;
                    	    if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       expressions.add(ex.value); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop240;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2099:11: st1= '*'
                    {
                    st1=(Token)input.LT(1);
                    match(input,178,FOLLOW_178_in_function8689); if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2100:11: agg= ( 'ALL' | 'DISTINCT' ) (st2= '*' | ex2= expression )
                    {
                    agg=(Token)input.LT(1);
                    if ( input.LA(1)==176||input.LA(1)==189 ) {
                        input.consume();
                        errorRecovery=false;failed=false;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        MismatchedSetException mse =
                            new MismatchedSetException(null,input);
                        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_function8707);    throw mse;
                    }

                    // /Users/michaelarace/CodaServer_Src/Coda.g:2100:36: (st2= '*' | ex2= expression )
                    int alt241=2;
                    int LA241_0 = input.LA(1);

                    if ( (LA241_0==178) ) {
                        alt241=1;
                    }
                    else if ( (LA241_0==ObjectName||(LA241_0>=UnicodeStringLiteral && LA241_0<=ASCIIStringLiteral)||(LA241_0>=10 && LA241_0<=66)||LA241_0==84||LA241_0==153||(LA241_0>=190 && LA241_0<=192)||(LA241_0>=195 && LA241_0<=198)) ) {
                        alt241=2;
                    }
                    else {
                        if (backtracking>0) {failed=true; return retval;}
                        NoViableAltException nvae =
                            new NoViableAltException("2100:36: (st2= '*' | ex2= expression )", 241, 0, input);

                        throw nvae;
                    }
                    switch (alt241) {
                        case 1 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:2100:37: st2= '*'
                            {
                            st2=(Token)input.LT(1);
                            match(input,178,FOLLOW_178_in_function8718); if (failed) return retval;

                            }
                            break;
                        case 2 :
                            // /Users/michaelarace/CodaServer_Src/Coda.g:2100:47: ex2= expression
                            {
                            pushFollow(FOLLOW_expression_in_function8724);
                            ex2=expression();
                            _fsp--;
                            if (failed) return retval;

                            }
                            break;

                    }


                    }
                    break;

            }

            match(input,86,FOLLOW_86_in_function8743); if (failed) return retval;
            if ( backtracking==0 ) {

                  	if (expressions.size() > 0) {
                  		retval.value = new CodaFunction(input.toString(fn.start,fn.stop), expressions);
                  	} else if (st1 != null) {
               		retval.value = new CodaFunction(input.toString(fn.start,fn.stop));   	
                  	} else {
                  		retval.value = new CodaFunction(input.toString(fn.start,fn.stop), agg.getText(), (ex2 != null ? ex2.value : null));
                  	}
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 118, function_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end function

    public static class dbObject_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start dbObject
    // /Users/michaelarace/CodaServer_Src/Coda.g:2114:1: dbObject : objectName ;
    public final dbObject_return dbObject() throws RecognitionException {
        dbObject_return retval = new dbObject_return();
        retval.start = input.LT(1);
        int dbObject_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 119) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2115:2: ( objectName )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2115:4: objectName
            {
            pushFollow(FOLLOW_objectName_in_dbObject8768);
            objectName();
            _fsp--;
            if (failed) return retval;

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 119, dbObject_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end dbObject

    public static class stringLiteral_return extends ParserRuleReturnScope {
        public String value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start stringLiteral
    // /Users/michaelarace/CodaServer_Src/Coda.g:2123:1: stringLiteral returns [String value] : v= ( UnicodeStringLiteral | ASCIIStringLiteral ) ;
    public final stringLiteral_return stringLiteral() throws RecognitionException {
        stringLiteral_return retval = new stringLiteral_return();
        retval.start = input.LT(1);
        int stringLiteral_StartIndex = input.index();
        Token v=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 120) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2124:5: (v= ( UnicodeStringLiteral | ASCIIStringLiteral ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2125:8: v= ( UnicodeStringLiteral | ASCIIStringLiteral )
            {
            v=(Token)input.LT(1);
            if ( (input.LA(1)>=UnicodeStringLiteral && input.LA(1)<=ASCIIStringLiteral) ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_stringLiteral8803);    throw mse;
            }

            if ( backtracking==0 ) {

                    		retval.value =v.getText().substring(1, v.getText().length() - 1).replace("''", "'");
                    	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 120, stringLiteral_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end stringLiteral

    public static class constant_return extends ParserRuleReturnScope {
        public CodaConstant value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start constant
    // /Users/michaelarace/CodaServer_Src/Coda.g:2130:1: constant returns [CodaConstant value] : (n= 'NULL' | sl= stringLiteral | sv= systemVariable ) ;
    public final constant_return constant() throws RecognitionException {
        constant_return retval = new constant_return();
        retval.start = input.LT(1);
        int constant_StartIndex = input.index();
        Token n=null;
        stringLiteral_return sl = null;

        systemVariable_return sv = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 121) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2131:5: ( (n= 'NULL' | sl= stringLiteral | sv= systemVariable ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2131:7: (n= 'NULL' | sl= stringLiteral | sv= systemVariable )
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:2131:7: (n= 'NULL' | sl= stringLiteral | sv= systemVariable )
            int alt243=3;
            switch ( input.LA(1) ) {
            case 153:
                {
                alt243=1;
                }
                break;
            case UnicodeStringLiteral:
            case ASCIIStringLiteral:
                {
                alt243=2;
                }
                break;
            case 195:
            case 196:
            case 197:
            case 198:
                {
                alt243=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("2131:7: (n= 'NULL' | sl= stringLiteral | sv= systemVariable )", 243, 0, input);

                throw nvae;
            }

            switch (alt243) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2131:8: n= 'NULL'
                    {
                    n=(Token)input.LT(1);
                    match(input,153,FOLLOW_153_in_constant8841); if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2131:19: sl= stringLiteral
                    {
                    pushFollow(FOLLOW_stringLiteral_in_constant8847);
                    sl=stringLiteral();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2131:38: sv= systemVariable
                    {
                    pushFollow(FOLLOW_systemVariable_in_constant8853);
                    sv=systemVariable();
                    _fsp--;
                    if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {

                  	if (n != null) {
                  		retval.value = new CodaConstant(CodaConstant.SYSVAR_NULL);
                  	} else if (sv != null) {
                  		if (input.toString(sv.start,sv.stop).equalsIgnoreCase("CURRENT_TIMESTAMP")) {
                  			retval.value = new CodaConstant(CodaConstant.SYSVAR_CURRENT_TIMESTAMP);
                  		} else if (input.toString(sv.start,sv.stop).equalsIgnoreCase("CURRENT_USER_ID")) {
                  			retval.value = new CodaConstant(CodaConstant.SYSVAR_CURRENT_USER_ID);
                  		} else if (input.toString(sv.start,sv.stop).equalsIgnoreCase("CURRENT_USERNAME")) {
                  			retval.value = new CodaConstant(CodaConstant.SYSVAR_CURRENT_USERNAME);
                  		} else if (input.toString(sv.start,sv.stop).equalsIgnoreCase("CURRENT_GROUP_NAME")) {
                  			retval.value = new CodaConstant(CodaConstant.SYSVAR_CURRENT_GROUP_NAME);
                  		} 
                  	} else {
                  		retval.value = new CodaConstant(sl.value);
                  	}
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 121, constant_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end constant

    public static class unaryOperator_return extends ParserRuleReturnScope {
        public String operator;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start unaryOperator
    // /Users/michaelarace/CodaServer_Src/Coda.g:2151:1: unaryOperator returns [String operator] : op= ( '+' | '-' | '~' ) ;
    public final unaryOperator_return unaryOperator() throws RecognitionException {
        unaryOperator_return retval = new unaryOperator_return();
        retval.start = input.LT(1);
        int unaryOperator_StartIndex = input.index();
        Token op=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 122) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2152:5: (op= ( '+' | '-' | '~' ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2152:7: op= ( '+' | '-' | '~' )
            {
            op=(Token)input.LT(1);
            if ( (input.LA(1)>=190 && input.LA(1)<=192) ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_unaryOperator8883);    throw mse;
            }

            if ( backtracking==0 ) {

                  	retval.operator = op.getText().toUpperCase();
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 122, unaryOperator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end unaryOperator

    public static class arithmeticOperator_return extends ParserRuleReturnScope {
        public String operator;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start arithmeticOperator
    // /Users/michaelarace/CodaServer_Src/Coda.g:2158:1: arithmeticOperator returns [String operator] : op= ( '+' | '-' | '*' | '/' | '%' ) ;
    public final arithmeticOperator_return arithmeticOperator() throws RecognitionException {
        arithmeticOperator_return retval = new arithmeticOperator_return();
        retval.start = input.LT(1);
        int arithmeticOperator_StartIndex = input.index();
        Token op=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 123) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2159:5: (op= ( '+' | '-' | '*' | '/' | '%' ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2159:7: op= ( '+' | '-' | '*' | '/' | '%' )
            {
            op=(Token)input.LT(1);
            if ( input.LA(1)==178||(input.LA(1)>=190 && input.LA(1)<=191)||(input.LA(1)>=193 && input.LA(1)<=194) ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_arithmeticOperator8930);    throw mse;
            }

            if ( backtracking==0 ) {

                  	retval.operator = op.getText().toUpperCase();
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 123, arithmeticOperator_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end arithmeticOperator

    public static class systemVariable_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start systemVariable
    // /Users/michaelarace/CodaServer_Src/Coda.g:2164:1: systemVariable : ( 'CURRENT_TIMESTAMP' | 'CURRENT_USER_ID' | 'CURRENT_GROUP_NAME' | 'CURRENT_USERNAME' );
    public final systemVariable_return systemVariable() throws RecognitionException {
        systemVariable_return retval = new systemVariable_return();
        retval.start = input.LT(1);
        int systemVariable_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 124) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2165:6: ( 'CURRENT_TIMESTAMP' | 'CURRENT_USER_ID' | 'CURRENT_GROUP_NAME' | 'CURRENT_USERNAME' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:
            {
            if ( (input.LA(1)>=195 && input.LA(1)<=198) ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_systemVariable0);    throw mse;
            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 124, systemVariable_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end systemVariable

    public static class orderByClause_return extends ParserRuleReturnScope {
        public CodaOrderByClause value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start orderByClause
    // /Users/michaelarace/CodaServer_Src/Coda.g:2167:1: orderByClause returns [CodaOrderByClause value] : 'ORDER' 'BY' exp= expression ( 'ASC' | des= 'DESC' )? ( ',' exp= expression ( 'ASC' | des= 'DESC' )? )* ;
    public final orderByClause_return orderByClause() throws RecognitionException {
        orderByClause_return retval = new orderByClause_return();
        retval.start = input.LT(1);
        int orderByClause_StartIndex = input.index();
        Token des=null;
        expression_return exp = null;



        	Vector<CodaExpression> expressions = new Vector();
        	Vector<String> directions = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 125) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2172:5: ( 'ORDER' 'BY' exp= expression ( 'ASC' | des= 'DESC' )? ( ',' exp= expression ( 'ASC' | des= 'DESC' )? )* )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2172:7: 'ORDER' 'BY' exp= expression ( 'ASC' | des= 'DESC' )? ( ',' exp= expression ( 'ASC' | des= 'DESC' )? )*
            {
            match(input,124,FOLLOW_124_in_orderByClause9009); if (failed) return retval;
            match(input,96,FOLLOW_96_in_orderByClause9011); if (failed) return retval;
            pushFollow(FOLLOW_expression_in_orderByClause9015);
            exp=expression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
              expressions.add(exp.value); des = null; 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2172:79: ( 'ASC' | des= 'DESC' )?
            int alt244=3;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==199) ) {
                alt244=1;
            }
            else if ( (LA244_0==200) ) {
                alt244=2;
            }
            switch (alt244) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2172:80: 'ASC'
                    {
                    match(input,199,FOLLOW_199_in_orderByClause9020); if (failed) return retval;

                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2172:88: des= 'DESC'
                    {
                    des=(Token)input.LT(1);
                    match(input,200,FOLLOW_200_in_orderByClause9026); if (failed) return retval;

                    }
                    break;

            }

            if ( backtracking==0 ) {
              directions.add(des == null ? "ASC" : "DESC");
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2172:149: ( ',' exp= expression ( 'ASC' | des= 'DESC' )? )*
            loop246:
            do {
                int alt246=2;
                int LA246_0 = input.LA(1);

                if ( (LA246_0==85) ) {
                    alt246=1;
                }


                switch (alt246) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:2172:150: ',' exp= expression ( 'ASC' | des= 'DESC' )?
            	    {
            	    match(input,85,FOLLOW_85_in_orderByClause9033); if (failed) return retval;
            	    pushFollow(FOLLOW_expression_in_orderByClause9037);
            	    exp=expression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	      expressions.add(exp.value); des = null; 
            	    }
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:2172:213: ( 'ASC' | des= 'DESC' )?
            	    int alt245=3;
            	    int LA245_0 = input.LA(1);

            	    if ( (LA245_0==199) ) {
            	        alt245=1;
            	    }
            	    else if ( (LA245_0==200) ) {
            	        alt245=2;
            	    }
            	    switch (alt245) {
            	        case 1 :
            	            // /Users/michaelarace/CodaServer_Src/Coda.g:2172:214: 'ASC'
            	            {
            	            match(input,199,FOLLOW_199_in_orderByClause9042); if (failed) return retval;

            	            }
            	            break;
            	        case 2 :
            	            // /Users/michaelarace/CodaServer_Src/Coda.g:2172:222: des= 'DESC'
            	            {
            	            des=(Token)input.LT(1);
            	            match(input,200,FOLLOW_200_in_orderByClause9048); if (failed) return retval;

            	            }
            	            break;

            	    }

            	    if ( backtracking==0 ) {
            	      directions.add(des == null ? "ASC" : "DESC");
            	    }

            	    }
            	    break;

            	default :
            	    break loop246;
                }
            } while (true);

            if ( backtracking==0 ) {

                  	retval.value = new CodaOrderByClause(expressions, directions);
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 125, orderByClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end orderByClause

    public static class groupByClause_return extends ParserRuleReturnScope {
        public CodaGroupByClause value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start groupByClause
    // /Users/michaelarace/CodaServer_Src/Coda.g:2178:1: groupByClause returns [CodaGroupByClause value] : 'GROUP' 'BY' (al= 'ALL' )? ex= expression ( ',' ex= expression )* ;
    public final groupByClause_return groupByClause() throws RecognitionException {
        groupByClause_return retval = new groupByClause_return();
        retval.start = input.LT(1);
        int groupByClause_StartIndex = input.index();
        Token al=null;
        expression_return ex = null;



        	Vector<CodaExpression> expressions = new Vector();

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 126) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2182:5: ( 'GROUP' 'BY' (al= 'ALL' )? ex= expression ( ',' ex= expression )* )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2182:7: 'GROUP' 'BY' (al= 'ALL' )? ex= expression ( ',' ex= expression )*
            {
            match(input,79,FOLLOW_79_in_groupByClause9087); if (failed) return retval;
            match(input,96,FOLLOW_96_in_groupByClause9089); if (failed) return retval;
            // /Users/michaelarace/CodaServer_Src/Coda.g:2182:20: (al= 'ALL' )?
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==189) ) {
                alt247=1;
            }
            switch (alt247) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2182:21: al= 'ALL'
                    {
                    al=(Token)input.LT(1);
                    match(input,189,FOLLOW_189_in_groupByClause9094); if (failed) return retval;

                    }
                    break;

            }

            pushFollow(FOLLOW_expression_in_groupByClause9100);
            ex=expression();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {
              expressions.add(ex.value); 
            }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2182:77: ( ',' ex= expression )*
            loop248:
            do {
                int alt248=2;
                int LA248_0 = input.LA(1);

                if ( (LA248_0==85) ) {
                    alt248=1;
                }


                switch (alt248) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:2182:78: ',' ex= expression
            	    {
            	    match(input,85,FOLLOW_85_in_groupByClause9105); if (failed) return retval;
            	    pushFollow(FOLLOW_expression_in_groupByClause9109);
            	    ex=expression();
            	    _fsp--;
            	    if (failed) return retval;
            	    if ( backtracking==0 ) {
            	      expressions.add(ex.value);
            	    }

            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);

            if ( backtracking==0 ) {

                  	retval.value = new CodaGroupByClause(expressions, al != null);
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 126, groupByClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end groupByClause

    public static class havingClause_return extends ParserRuleReturnScope {
        public CodaHavingClause value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start havingClause
    // /Users/michaelarace/CodaServer_Src/Coda.g:2188:1: havingClause returns [CodaHavingClause value] : 'HAVING' sc= searchCondition ;
    public final havingClause_return havingClause() throws RecognitionException {
        havingClause_return retval = new havingClause_return();
        retval.start = input.LT(1);
        int havingClause_StartIndex = input.index();
        searchCondition_return sc = null;


        try {
            if ( backtracking>0 && alreadyParsedRule(input, 127) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2189:5: ( 'HAVING' sc= searchCondition )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2189:7: 'HAVING' sc= searchCondition
            {
            match(input,201,FOLLOW_201_in_havingClause9141); if (failed) return retval;
            pushFollow(FOLLOW_searchCondition_in_havingClause9145);
            sc=searchCondition();
            _fsp--;
            if (failed) return retval;
            if ( backtracking==0 ) {

                  	retval.value = new CodaHavingClause(sc.value);
                  
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 127, havingClause_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end havingClause

    public static class triggerBody_return extends ParserRuleReturnScope {
        public String groovy;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start triggerBody
    // /Users/michaelarace/CodaServer_Src/Coda.g:2195:1: triggerBody returns [String groovy] : (t=~ ( 'ENDTRIGGER' ) )* ;
    public final triggerBody_return triggerBody() throws RecognitionException {
        triggerBody_return retval = new triggerBody_return();
        retval.start = input.LT(1);
        int triggerBody_StartIndex = input.index();
        Token t=null;


        	((CommonTokenStream)this.getTokenStream()).discardOffChannelTokens(false);
        	retval.groovy = "";

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 128) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2200:2: ( (t=~ ( 'ENDTRIGGER' ) )* )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2200:4: (t=~ ( 'ENDTRIGGER' ) )*
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:2200:4: (t=~ ( 'ENDTRIGGER' ) )*
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( ((LA249_0>=ObjectName && LA249_0<=138)||(LA249_0>=140 && LA249_0<=205)) ) {
                    alt249=1;
                }


                switch (alt249) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:2200:5: t=~ ( 'ENDTRIGGER' )
            	    {
            	    t=(Token)input.LT(1);
            	    if ( (input.LA(1)>=ObjectName && input.LA(1)<=138)||(input.LA(1)>=140 && input.LA(1)<=205) ) {
            	        input.consume();
            	        errorRecovery=false;failed=false;
            	    }
            	    else {
            	        if (backtracking>0) {failed=true; return retval;}
            	        MismatchedSetException mse =
            	            new MismatchedSetException(null,input);
            	        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_triggerBody9181);    throw mse;
            	    }

            	    if ( backtracking==0 ) {
            	       retval.groovy += t.getText(); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 128, triggerBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end triggerBody

    public static class procedureBody_return extends ParserRuleReturnScope {
        public String groovy;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start procedureBody
    // /Users/michaelarace/CodaServer_Src/Coda.g:2202:1: procedureBody returns [String groovy] : (p=~ ( 'ENDPROCEDURE' ) )* ;
    public final procedureBody_return procedureBody() throws RecognitionException {
        procedureBody_return retval = new procedureBody_return();
        retval.start = input.LT(1);
        int procedureBody_StartIndex = input.index();
        Token p=null;


        	((CommonTokenStream)this.getTokenStream()).discardOffChannelTokens(false);
        	retval.groovy = "";

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 129) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2207:2: ( (p=~ ( 'ENDPROCEDURE' ) )* )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2207:4: (p=~ ( 'ENDPROCEDURE' ) )*
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:2207:4: (p=~ ( 'ENDPROCEDURE' ) )*
            loop250:
            do {
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( ((LA250_0>=ObjectName && LA250_0<=141)||(LA250_0>=143 && LA250_0<=205)) ) {
                    alt250=1;
                }


                switch (alt250) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:2207:5: p=~ ( 'ENDPROCEDURE' )
            	    {
            	    p=(Token)input.LT(1);
            	    if ( (input.LA(1)>=ObjectName && input.LA(1)<=141)||(input.LA(1)>=143 && input.LA(1)<=205) ) {
            	        input.consume();
            	        errorRecovery=false;failed=false;
            	    }
            	    else {
            	        if (backtracking>0) {failed=true; return retval;}
            	        MismatchedSetException mse =
            	            new MismatchedSetException(null,input);
            	        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_procedureBody9211);    throw mse;
            	    }

            	    if ( backtracking==0 ) {
            	       retval.groovy += p.getText(); 
            	    }

            	    }
            	    break;

            	default :
            	    break loop250;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 129, procedureBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end procedureBody

    public static class rawSQLBody_return extends ParserRuleReturnScope {
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start rawSQLBody
    // /Users/michaelarace/CodaServer_Src/Coda.g:2210:1: rawSQLBody : (~ EOF )* ;
    public final rawSQLBody_return rawSQLBody() throws RecognitionException {
        rawSQLBody_return retval = new rawSQLBody_return();
        retval.start = input.LT(1);
        int rawSQLBody_StartIndex = input.index();
        try {
            if ( backtracking>0 && alreadyParsedRule(input, 130) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2210:12: ( (~ EOF )* )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2210:14: (~ EOF )*
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:2210:14: (~ EOF )*
            loop251:
            do {
                int alt251=2;
                int LA251_0 = input.LA(1);

                if ( ((LA251_0>=ObjectName && LA251_0<=205)) ) {
                    alt251=1;
                }


                switch (alt251) {
            	case 1 :
            	    // /Users/michaelarace/CodaServer_Src/Coda.g:2210:15: ~ EOF
            	    {
            	    if ( (input.LA(1)>=ObjectName && input.LA(1)<=205) ) {
            	        input.consume();
            	        errorRecovery=false;failed=false;
            	    }
            	    else {
            	        if (backtracking>0) {failed=true; return retval;}
            	        MismatchedSetException mse =
            	            new MismatchedSetException(null,input);
            	        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_rawSQLBody9230);    throw mse;
            	    }


            	    }
            	    break;

            	default :
            	    break loop251;
                }
            } while (true);


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 130, rawSQLBody_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end rawSQLBody

    public static class tablePermission_return extends ParserRuleReturnScope {
        public String perm;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start tablePermission
    // /Users/michaelarace/CodaServer_Src/Coda.g:2212:1: tablePermission returns [String perm] : p= ( 'SELECT' | 'INSERT' | 'UPDATE' | 'DELETE' ) ;
    public final tablePermission_return tablePermission() throws RecognitionException {
        tablePermission_return retval = new tablePermission_return();
        retval.start = input.LT(1);
        int tablePermission_StartIndex = input.index();
        Token p=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 131) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2213:2: (p= ( 'SELECT' | 'INSERT' | 'UPDATE' | 'DELETE' ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2213:4: p= ( 'SELECT' | 'INSERT' | 'UPDATE' | 'DELETE' )
            {
            p=(Token)input.LT(1);
            if ( (input.LA(1)>=69 && input.LA(1)<=71)||input.LA(1)==134 ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_tablePermission9248);    throw mse;
            }

            if ( backtracking==0 ) {

              		retval.perm = p.getText();
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 131, tablePermission_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end tablePermission

    public static class formStatusPermission_return extends ParserRuleReturnScope {
        public String perm;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start formStatusPermission
    // /Users/michaelarace/CodaServer_Src/Coda.g:2218:1: formStatusPermission returns [String perm] : p= ( 'VIEW' | 'CALL' | 'UPDATE' ) ;
    public final formStatusPermission_return formStatusPermission() throws RecognitionException {
        formStatusPermission_return retval = new formStatusPermission_return();
        retval.start = input.LT(1);
        int formStatusPermission_StartIndex = input.index();
        Token p=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 132) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2219:2: (p= ( 'VIEW' | 'CALL' | 'UPDATE' ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2219:4: p= ( 'VIEW' | 'CALL' | 'UPDATE' )
            {
            p=(Token)input.LT(1);
            if ( input.LA(1)==70||(input.LA(1)>=202 && input.LA(1)<=203) ) {
                input.consume();
                errorRecovery=false;failed=false;
            }
            else {
                if (backtracking>0) {failed=true; return retval;}
                MismatchedSetException mse =
                    new MismatchedSetException(null,input);
                recoverFromMismatchedSet(input,mse,FOLLOW_set_in_formStatusPermission9281);    throw mse;
            }

            if ( backtracking==0 ) {

              		retval.perm = p.getText();
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 132, formStatusPermission_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end formStatusPermission

    public static class procedurePermission_return extends ParserRuleReturnScope {
        public String perm;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start procedurePermission
    // /Users/michaelarace/CodaServer_Src/Coda.g:2224:1: procedurePermission returns [String perm] : p= 'EXECUTE' ;
    public final procedurePermission_return procedurePermission() throws RecognitionException {
        procedurePermission_return retval = new procedurePermission_return();
        retval.start = input.LT(1);
        int procedurePermission_StartIndex = input.index();
        Token p=null;

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 133) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2225:2: (p= 'EXECUTE' )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2225:4: p= 'EXECUTE'
            {
            p=(Token)input.LT(1);
            match(input,204,FOLLOW_204_in_procedurePermission9310); if (failed) return retval;
            if ( backtracking==0 ) {

              		retval.perm = p.getText();
              	
            }

            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 133, procedurePermission_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end procedurePermission

    public static class cronValue_return extends ParserRuleReturnScope {
        public String value;
        public StringTemplate st;
        public Object getTemplate() { return st; }
        public String toString() { return st==null?null:st.toString(); }
    };

    // $ANTLR start cronValue
    // /Users/michaelarace/CodaServer_Src/Coda.g:2230:1: cronValue returns [String value] : (num= Integer ( ( ',' | '-' | '/' ) num= Integer )* | star= '*' | quest= '?' ) ;
    public final cronValue_return cronValue() throws RecognitionException {
        cronValue_return retval = new cronValue_return();
        retval.start = input.LT(1);
        int cronValue_StartIndex = input.index();
        Token num=null;
        Token star=null;
        Token quest=null;


        	retval.value = "";

        try {
            if ( backtracking>0 && alreadyParsedRule(input, 134) ) { return retval; }
            // /Users/michaelarace/CodaServer_Src/Coda.g:2234:2: ( (num= Integer ( ( ',' | '-' | '/' ) num= Integer )* | star= '*' | quest= '?' ) )
            // /Users/michaelarace/CodaServer_Src/Coda.g:2234:4: (num= Integer ( ( ',' | '-' | '/' ) num= Integer )* | star= '*' | quest= '?' )
            {
            // /Users/michaelarace/CodaServer_Src/Coda.g:2234:4: (num= Integer ( ( ',' | '-' | '/' ) num= Integer )* | star= '*' | quest= '?' )
            int alt253=3;
            switch ( input.LA(1) ) {
            case Integer:
                {
                alt253=1;
                }
                break;
            case 178:
                {
                alt253=2;
                }
                break;
            case 205:
                {
                alt253=3;
                }
                break;
            default:
                if (backtracking>0) {failed=true; return retval;}
                NoViableAltException nvae =
                    new NoViableAltException("2234:4: (num= Integer ( ( ',' | '-' | '/' ) num= Integer )* | star= '*' | quest= '?' )", 253, 0, input);

                throw nvae;
            }

            switch (alt253) {
                case 1 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2234:6: num= Integer ( ( ',' | '-' | '/' ) num= Integer )*
                    {
                    num=(Token)input.LT(1);
                    match(input,Integer,FOLLOW_Integer_in_cronValue9338); if (failed) return retval;
                    if ( backtracking==0 ) {
                       retval.value += num.getText(); 
                    }
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2234:44: ( ( ',' | '-' | '/' ) num= Integer )*
                    loop252:
                    do {
                        int alt252=2;
                        int LA252_0 = input.LA(1);

                        if ( (LA252_0==85||LA252_0==191||LA252_0==193) ) {
                            alt252=1;
                        }


                        switch (alt252) {
                    	case 1 :
                    	    // /Users/michaelarace/CodaServer_Src/Coda.g:2234:46: ( ',' | '-' | '/' ) num= Integer
                    	    {
                    	    if ( input.LA(1)==85||input.LA(1)==191||input.LA(1)==193 ) {
                    	        input.consume();
                    	        errorRecovery=false;failed=false;
                    	    }
                    	    else {
                    	        if (backtracking>0) {failed=true; return retval;}
                    	        MismatchedSetException mse =
                    	            new MismatchedSetException(null,input);
                    	        recoverFromMismatchedSet(input,mse,FOLLOW_set_in_cronValue9345);    throw mse;
                    	    }

                    	    num=(Token)input.LT(1);
                    	    match(input,Integer,FOLLOW_Integer_in_cronValue9360); if (failed) return retval;
                    	    if ( backtracking==0 ) {
                    	       retval.value += num.getText(); 
                    	    }

                    	    }
                    	    break;

                    	default :
                    	    break loop252;
                        }
                    } while (true);


                    }
                    break;
                case 2 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2234:107: star= '*'
                    {
                    star=(Token)input.LT(1);
                    match(input,178,FOLLOW_178_in_cronValue9371); if (failed) return retval;
                    if ( backtracking==0 ) {
                       retval.value += star.getText(); 
                    }

                    }
                    break;
                case 3 :
                    // /Users/michaelarace/CodaServer_Src/Coda.g:2234:144: quest= '?'
                    {
                    quest=(Token)input.LT(1);
                    match(input,205,FOLLOW_205_in_cronValue9379); if (failed) return retval;
                    if ( backtracking==0 ) {
                       retval.value += quest.getText(); 
                    }

                    }
                    break;

            }


            }

            retval.stop = input.LT(-1);

        }

        	catch (RecognitionException e) {
        		throw e;
        	}
        	
            
        finally {
            if ( backtracking>0 ) { memoize(input, 134, cronValue_StartIndex); }
        }
        return retval;
    }
    // $ANTLR end cronValue

    // $ANTLR start synpred1
    public final void synpred1_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:83:4: ( connect )
        // /Users/michaelarace/CodaServer_Src/Coda.g:83:4: connect
        {
        pushFollow(FOLLOW_connect_in_synpred185);
        connect();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred1

    // $ANTLR start synpred9
    public final void synpred9_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:91:4: ( createApplication )
        // /Users/michaelarace/CodaServer_Src/Coda.g:91:4: createApplication
        {
        pushFollow(FOLLOW_createApplication_in_synpred9143);
        createApplication();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred9

    // $ANTLR start synpred15
    public final void synpred15_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:97:4: ( createGroup )
        // /Users/michaelarace/CodaServer_Src/Coda.g:97:4: createGroup
        {
        pushFollow(FOLLOW_createGroup_in_synpred15185);
        createGroup();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred15

    // $ANTLR start synpred29
    public final void synpred29_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:111:4: ( createTable )
        // /Users/michaelarace/CodaServer_Src/Coda.g:111:4: createTable
        {
        pushFollow(FOLLOW_createTable_in_synpred29283);
        createTable();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred29

    // $ANTLR start synpred32
    public final void synpred32_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:114:4: ( createForm )
        // /Users/michaelarace/CodaServer_Src/Coda.g:114:4: createForm
        {
        pushFollow(FOLLOW_createForm_in_synpred32304);
        createForm();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred32

    // $ANTLR start synpred42
    public final void synpred42_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:124:4: ( insert )
        // /Users/michaelarace/CodaServer_Src/Coda.g:124:5: insert
        {
        pushFollow(FOLLOW_insert_in_synpred42373);
        insert();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred42

    // $ANTLR start synpred43
    public final void synpred43_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:125:4: ( update )
        // /Users/michaelarace/CodaServer_Src/Coda.g:125:5: update
        {
        pushFollow(FOLLOW_update_in_synpred43386);
        update();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred43

    // $ANTLR start synpred44
    public final void synpred44_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:126:4: ( delete )
        // /Users/michaelarace/CodaServer_Src/Coda.g:126:5: delete
        {
        pushFollow(FOLLOW_delete_in_synpred44399);
        delete();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred44

    // $ANTLR start synpred45
    public final void synpred45_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:127:4: ( formUpdate )
        // /Users/michaelarace/CodaServer_Src/Coda.g:127:4: formUpdate
        {
        pushFollow(FOLLOW_formUpdate_in_synpred45413);
        formUpdate();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred45

    // $ANTLR start synpred185
    public final void synpred185_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:630:4: ( serverPermission ( ',' serverPermission )* 'TO' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:630:4: serverPermission ( ',' serverPermission )* 'TO' objectName
        {
        pushFollow(FOLLOW_serverPermission_in_synpred1852192);
        serverPermission();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:630:55: ( ',' serverPermission )*
        loop258:
        do {
            int alt258=2;
            int LA258_0 = input.LA(1);

            if ( (LA258_0==85) ) {
                alt258=1;
            }


            switch (alt258) {
        	case 1 :
        	    // /Users/michaelarace/CodaServer_Src/Coda.g:630:56: ',' serverPermission
        	    {
        	    match(input,85,FOLLOW_85_in_synpred1852197); if (failed) return ;
        	    pushFollow(FOLLOW_serverPermission_in_synpred1852201);
        	    serverPermission();
        	    _fsp--;
        	    if (failed) return ;

        	    }
        	    break;

        	default :
        	    break loop258;
            }
        } while (true);

        match(input,75,FOLLOW_75_in_synpred1852208); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred1852212);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred185

    // $ANTLR start synpred189
    public final void synpred189_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:631:5: ( applicationPermission ( ',' applicationPermission )* 'ON' objectName ( '.' environmentName )? ( 'FOR' 'GROUP' objectName )? 'TO' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:631:5: applicationPermission ( ',' applicationPermission )* 'ON' objectName ( '.' environmentName )? ( 'FOR' 'GROUP' objectName )? 'TO' objectName
        {
        pushFollow(FOLLOW_applicationPermission_in_synpred1892220);
        applicationPermission();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:631:61: ( ',' applicationPermission )*
        loop259:
        do {
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==85) ) {
                alt259=1;
            }


            switch (alt259) {
        	case 1 :
        	    // /Users/michaelarace/CodaServer_Src/Coda.g:631:62: ',' applicationPermission
        	    {
        	    match(input,85,FOLLOW_85_in_synpred1892225); if (failed) return ;
        	    pushFollow(FOLLOW_applicationPermission_in_synpred1892229);
        	    applicationPermission();
        	    _fsp--;
        	    if (failed) return ;

        	    }
        	    break;

        	default :
        	    break loop259;
            }
        } while (true);

        match(input,93,FOLLOW_93_in_synpred1892236); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred1892240);
        objectName();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:631:144: ( '.' environmentName )?
        int alt260=2;
        int LA260_0 = input.LA(1);

        if ( (LA260_0==77) ) {
            alt260=1;
        }
        switch (alt260) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:631:145: '.' environmentName
                {
                match(input,77,FOLLOW_77_in_synpred1892243); if (failed) return ;
                pushFollow(FOLLOW_environmentName_in_synpred1892247);
                environmentName();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        // /Users/michaelarace/CodaServer_Src/Coda.g:631:172: ( 'FOR' 'GROUP' objectName )?
        int alt261=2;
        int LA261_0 = input.LA(1);

        if ( (LA261_0==103) ) {
            alt261=1;
        }
        switch (alt261) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:631:173: 'FOR' 'GROUP' objectName
                {
                match(input,103,FOLLOW_103_in_synpred1892253); if (failed) return ;
                match(input,79,FOLLOW_79_in_synpred1892255); if (failed) return ;
                pushFollow(FOLLOW_objectName_in_synpred1892259);
                objectName();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        match(input,75,FOLLOW_75_in_synpred1892264); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred1892268);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred189

    // $ANTLR start synpred190
    public final void synpred190_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:632:5: ( 'CONNECT' 'ON' objectName 'TO' 'GROUP' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:632:5: 'CONNECT' 'ON' objectName 'TO' 'GROUP' objectName
        {
        match(input,14,FOLLOW_14_in_synpred1902274); if (failed) return ;
        match(input,93,FOLLOW_93_in_synpred1902276); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred1902280);
        objectName();
        _fsp--;
        if (failed) return ;
        match(input,75,FOLLOW_75_in_synpred1902282); if (failed) return ;
        match(input,79,FOLLOW_79_in_synpred1902284); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred1902288);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred190

    // $ANTLR start synpred195
    public final void synpred195_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:634:5: ( objectName ( ',' objectName )? ( 'IN' objectName )? 'TO' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:634:5: objectName ( ',' objectName )? ( 'IN' objectName )? 'TO' objectName
        {
        pushFollow(FOLLOW_objectName_in_synpred1952336);
        objectName();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:634:66: ( ',' objectName )?
        int alt263=2;
        int LA263_0 = input.LA(1);

        if ( (LA263_0==85) ) {
            alt263=1;
        }
        switch (alt263) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:634:67: ',' objectName
                {
                match(input,85,FOLLOW_85_in_synpred1952341); if (failed) return ;
                pushFollow(FOLLOW_objectName_in_synpred1952345);
                objectName();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        // /Users/michaelarace/CodaServer_Src/Coda.g:634:135: ( 'IN' objectName )?
        int alt264=2;
        int LA264_0 = input.LA(1);

        if ( (LA264_0==78) ) {
            alt264=1;
        }
        switch (alt264) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:634:136: 'IN' objectName
                {
                match(input,78,FOLLOW_78_in_synpred1952353); if (failed) return ;
                pushFollow(FOLLOW_objectName_in_synpred1952357);
                objectName();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        match(input,75,FOLLOW_75_in_synpred1952362); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred1952366);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred195

    // $ANTLR start synpred198
    public final void synpred198_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:635:5: ( tablePermission ( ',' tablePermission )* 'ON' 'TABLE' ( applicationPrefix )? objectName 'TO' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:635:5: tablePermission ( ',' tablePermission )* 'ON' 'TABLE' ( applicationPrefix )? objectName 'TO' objectName
        {
        pushFollow(FOLLOW_tablePermission_in_synpred1982374);
        tablePermission();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:635:83: ( ',' tablePermission )*
        loop265:
        do {
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==85) ) {
                alt265=1;
            }


            switch (alt265) {
        	case 1 :
        	    // /Users/michaelarace/CodaServer_Src/Coda.g:635:84: ',' tablePermission
        	    {
        	    match(input,85,FOLLOW_85_in_synpred1982379); if (failed) return ;
        	    pushFollow(FOLLOW_tablePermission_in_synpred1982383);
        	    tablePermission();
        	    _fsp--;
        	    if (failed) return ;

        	    }
        	    break;

        	default :
        	    break loop265;
            }
        } while (true);

        match(input,93,FOLLOW_93_in_synpred1982390); if (failed) return ;
        match(input,109,FOLLOW_109_in_synpred1982392); if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:635:187: ( applicationPrefix )?
        int alt266=2;
        int LA266_0 = input.LA(1);

        if ( (LA266_0==ObjectName) ) {
            int LA266_1 = input.LA(2);

            if ( (LA266_1==77) ) {
                alt266=1;
            }
        }
        else if ( ((LA266_0>=10 && LA266_0<=66)) ) {
            int LA266_2 = input.LA(2);

            if ( (LA266_2==77) ) {
                alt266=1;
            }
        }
        switch (alt266) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: applicationPrefix
                {
                pushFollow(FOLLOW_applicationPrefix_in_synpred1982396);
                applicationPrefix();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        pushFollow(FOLLOW_objectName_in_synpred1982401);
        objectName();
        _fsp--;
        if (failed) return ;
        match(input,75,FOLLOW_75_in_synpred1982403); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred1982407);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred198

    // $ANTLR start synpred201
    public final void synpred201_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:636:5: ( formStatusPermission ( ',' formStatusPermission )* 'ON' 'FORM' ( applicationPrefix )? objectName ':' objectName 'TO' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:636:5: formStatusPermission ( ',' formStatusPermission )* 'ON' 'FORM' ( applicationPrefix )? objectName ':' objectName 'TO' objectName
        {
        pushFollow(FOLLOW_formStatusPermission_in_synpred2012415);
        formStatusPermission();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:636:84: ( ',' formStatusPermission )*
        loop267:
        do {
            int alt267=2;
            int LA267_0 = input.LA(1);

            if ( (LA267_0==85) ) {
                alt267=1;
            }


            switch (alt267) {
        	case 1 :
        	    // /Users/michaelarace/CodaServer_Src/Coda.g:636:85: ',' formStatusPermission
        	    {
        	    match(input,85,FOLLOW_85_in_synpred2012420); if (failed) return ;
        	    pushFollow(FOLLOW_formStatusPermission_in_synpred2012424);
        	    formStatusPermission();
        	    _fsp--;
        	    if (failed) return ;

        	    }
        	    break;

        	default :
        	    break loop267;
            }
        } while (true);

        match(input,93,FOLLOW_93_in_synpred2012431); if (failed) return ;
        match(input,110,FOLLOW_110_in_synpred2012433); if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:636:188: ( applicationPrefix )?
        int alt268=2;
        int LA268_0 = input.LA(1);

        if ( (LA268_0==ObjectName) ) {
            int LA268_1 = input.LA(2);

            if ( (LA268_1==77) ) {
                alt268=1;
            }
        }
        else if ( ((LA268_0>=10 && LA268_0<=66)) ) {
            int LA268_2 = input.LA(2);

            if ( (LA268_2==77) ) {
                alt268=1;
            }
        }
        switch (alt268) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: applicationPrefix
                {
                pushFollow(FOLLOW_applicationPrefix_in_synpred2012437);
                applicationPrefix();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        pushFollow(FOLLOW_objectName_in_synpred2012442);
        objectName();
        _fsp--;
        if (failed) return ;
        match(input,74,FOLLOW_74_in_synpred2012444); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred2012448);
        objectName();
        _fsp--;
        if (failed) return ;
        match(input,75,FOLLOW_75_in_synpred2012450); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred2012454);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred201

    // $ANTLR start synpred205
    public final void synpred205_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:683:4: ( serverPermission ( ',' serverPermission )* 'FROM' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:683:4: serverPermission ( ',' serverPermission )* 'FROM' objectName
        {
        pushFollow(FOLLOW_serverPermission_in_synpred2052538);
        serverPermission();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:683:55: ( ',' serverPermission )*
        loop269:
        do {
            int alt269=2;
            int LA269_0 = input.LA(1);

            if ( (LA269_0==85) ) {
                alt269=1;
            }


            switch (alt269) {
        	case 1 :
        	    // /Users/michaelarace/CodaServer_Src/Coda.g:683:56: ',' serverPermission
        	    {
        	    match(input,85,FOLLOW_85_in_synpred2052543); if (failed) return ;
        	    pushFollow(FOLLOW_serverPermission_in_synpred2052547);
        	    serverPermission();
        	    _fsp--;
        	    if (failed) return ;

        	    }
        	    break;

        	default :
        	    break loop269;
            }
        } while (true);

        match(input,113,FOLLOW_113_in_synpred2052554); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred2052558);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred205

    // $ANTLR start synpred209
    public final void synpred209_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:684:5: ( applicationPermission ( ',' applicationPermission )* 'ON' objectName ( '.' environmentName )? ( 'FOR' 'GROUP' objectName )? 'FROM' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:684:5: applicationPermission ( ',' applicationPermission )* 'ON' objectName ( '.' environmentName )? ( 'FOR' 'GROUP' objectName )? 'FROM' objectName
        {
        pushFollow(FOLLOW_applicationPermission_in_synpred2092568);
        applicationPermission();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:684:61: ( ',' applicationPermission )*
        loop270:
        do {
            int alt270=2;
            int LA270_0 = input.LA(1);

            if ( (LA270_0==85) ) {
                alt270=1;
            }


            switch (alt270) {
        	case 1 :
        	    // /Users/michaelarace/CodaServer_Src/Coda.g:684:62: ',' applicationPermission
        	    {
        	    match(input,85,FOLLOW_85_in_synpred2092573); if (failed) return ;
        	    pushFollow(FOLLOW_applicationPermission_in_synpred2092577);
        	    applicationPermission();
        	    _fsp--;
        	    if (failed) return ;

        	    }
        	    break;

        	default :
        	    break loop270;
            }
        } while (true);

        match(input,93,FOLLOW_93_in_synpred2092584); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred2092588);
        objectName();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:684:144: ( '.' environmentName )?
        int alt271=2;
        int LA271_0 = input.LA(1);

        if ( (LA271_0==77) ) {
            alt271=1;
        }
        switch (alt271) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:684:145: '.' environmentName
                {
                match(input,77,FOLLOW_77_in_synpred2092591); if (failed) return ;
                pushFollow(FOLLOW_environmentName_in_synpred2092595);
                environmentName();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        // /Users/michaelarace/CodaServer_Src/Coda.g:684:172: ( 'FOR' 'GROUP' objectName )?
        int alt272=2;
        int LA272_0 = input.LA(1);

        if ( (LA272_0==103) ) {
            alt272=1;
        }
        switch (alt272) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:684:173: 'FOR' 'GROUP' objectName
                {
                match(input,103,FOLLOW_103_in_synpred2092601); if (failed) return ;
                match(input,79,FOLLOW_79_in_synpred2092603); if (failed) return ;
                pushFollow(FOLLOW_objectName_in_synpred2092607);
                objectName();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        match(input,113,FOLLOW_113_in_synpred2092612); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred2092616);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred209

    // $ANTLR start synpred210
    public final void synpred210_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:685:5: ( 'CONNECT' 'ON' objectName 'FROM' 'GROUP' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:685:5: 'CONNECT' 'ON' objectName 'FROM' 'GROUP' objectName
        {
        match(input,14,FOLLOW_14_in_synpred2102622); if (failed) return ;
        match(input,93,FOLLOW_93_in_synpred2102624); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred2102628);
        objectName();
        _fsp--;
        if (failed) return ;
        match(input,113,FOLLOW_113_in_synpred2102630); if (failed) return ;
        match(input,79,FOLLOW_79_in_synpred2102632); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred2102636);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred210

    // $ANTLR start synpred215
    public final void synpred215_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:687:5: ( objectName ( ',' objectName )? ( 'IN' objectName )? 'FROM' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:687:5: objectName ( ',' objectName )? ( 'IN' objectName )? 'FROM' objectName
        {
        pushFollow(FOLLOW_objectName_in_synpred2152685);
        objectName();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:687:66: ( ',' objectName )?
        int alt274=2;
        int LA274_0 = input.LA(1);

        if ( (LA274_0==85) ) {
            alt274=1;
        }
        switch (alt274) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:687:67: ',' objectName
                {
                match(input,85,FOLLOW_85_in_synpred2152690); if (failed) return ;
                pushFollow(FOLLOW_objectName_in_synpred2152694);
                objectName();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        // /Users/michaelarace/CodaServer_Src/Coda.g:687:135: ( 'IN' objectName )?
        int alt275=2;
        int LA275_0 = input.LA(1);

        if ( (LA275_0==78) ) {
            alt275=1;
        }
        switch (alt275) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:687:136: 'IN' objectName
                {
                match(input,78,FOLLOW_78_in_synpred2152702); if (failed) return ;
                pushFollow(FOLLOW_objectName_in_synpred2152706);
                objectName();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        match(input,113,FOLLOW_113_in_synpred2152711); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred2152715);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred215

    // $ANTLR start synpred218
    public final void synpred218_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:688:5: ( tablePermission ( ',' tablePermission )* 'ON' 'TABLE' ( applicationPrefix )? objectName 'FROM' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:688:5: tablePermission ( ',' tablePermission )* 'ON' 'TABLE' ( applicationPrefix )? objectName 'FROM' objectName
        {
        pushFollow(FOLLOW_tablePermission_in_synpred2182723);
        tablePermission();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:688:83: ( ',' tablePermission )*
        loop276:
        do {
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( (LA276_0==85) ) {
                alt276=1;
            }


            switch (alt276) {
        	case 1 :
        	    // /Users/michaelarace/CodaServer_Src/Coda.g:688:84: ',' tablePermission
        	    {
        	    match(input,85,FOLLOW_85_in_synpred2182728); if (failed) return ;
        	    pushFollow(FOLLOW_tablePermission_in_synpred2182732);
        	    tablePermission();
        	    _fsp--;
        	    if (failed) return ;

        	    }
        	    break;

        	default :
        	    break loop276;
            }
        } while (true);

        match(input,93,FOLLOW_93_in_synpred2182739); if (failed) return ;
        match(input,109,FOLLOW_109_in_synpred2182741); if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:688:187: ( applicationPrefix )?
        int alt277=2;
        int LA277_0 = input.LA(1);

        if ( (LA277_0==ObjectName) ) {
            int LA277_1 = input.LA(2);

            if ( (LA277_1==77) ) {
                alt277=1;
            }
        }
        else if ( ((LA277_0>=10 && LA277_0<=66)) ) {
            int LA277_2 = input.LA(2);

            if ( (LA277_2==77) ) {
                alt277=1;
            }
        }
        switch (alt277) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: applicationPrefix
                {
                pushFollow(FOLLOW_applicationPrefix_in_synpred2182745);
                applicationPrefix();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        pushFollow(FOLLOW_objectName_in_synpred2182750);
        objectName();
        _fsp--;
        if (failed) return ;
        match(input,113,FOLLOW_113_in_synpred2182752); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred2182756);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred218

    // $ANTLR start synpred221
    public final void synpred221_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:689:5: ( formStatusPermission ( ',' formStatusPermission )* 'ON' 'FORM' ( applicationPrefix )? objectName ':' objectName 'FROM' objectName )
        // /Users/michaelarace/CodaServer_Src/Coda.g:689:5: formStatusPermission ( ',' formStatusPermission )* 'ON' 'FORM' ( applicationPrefix )? objectName ':' objectName 'FROM' objectName
        {
        pushFollow(FOLLOW_formStatusPermission_in_synpred2212764);
        formStatusPermission();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:689:82: ( ',' formStatusPermission )*
        loop278:
        do {
            int alt278=2;
            int LA278_0 = input.LA(1);

            if ( (LA278_0==85) ) {
                alt278=1;
            }


            switch (alt278) {
        	case 1 :
        	    // /Users/michaelarace/CodaServer_Src/Coda.g:689:83: ',' formStatusPermission
        	    {
        	    match(input,85,FOLLOW_85_in_synpred2212769); if (failed) return ;
        	    pushFollow(FOLLOW_formStatusPermission_in_synpred2212773);
        	    formStatusPermission();
        	    _fsp--;
        	    if (failed) return ;

        	    }
        	    break;

        	default :
        	    break loop278;
            }
        } while (true);

        match(input,93,FOLLOW_93_in_synpred2212780); if (failed) return ;
        match(input,110,FOLLOW_110_in_synpred2212782); if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:689:184: ( applicationPrefix )?
        int alt279=2;
        int LA279_0 = input.LA(1);

        if ( (LA279_0==ObjectName) ) {
            int LA279_1 = input.LA(2);

            if ( (LA279_1==77) ) {
                alt279=1;
            }
        }
        else if ( ((LA279_0>=10 && LA279_0<=66)) ) {
            int LA279_2 = input.LA(2);

            if ( (LA279_2==77) ) {
                alt279=1;
            }
        }
        switch (alt279) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:0:0: applicationPrefix
                {
                pushFollow(FOLLOW_applicationPrefix_in_synpred2212786);
                applicationPrefix();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        pushFollow(FOLLOW_objectName_in_synpred2212791);
        objectName();
        _fsp--;
        if (failed) return ;
        match(input,74,FOLLOW_74_in_synpred2212793); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred2212797);
        objectName();
        _fsp--;
        if (failed) return ;
        match(input,113,FOLLOW_113_in_synpred2212799); if (failed) return ;
        pushFollow(FOLLOW_objectName_in_synpred2212803);
        objectName();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred221

    // $ANTLR start synpred448
    public final void synpred448_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:1950:7: ( alias2 )
        // /Users/michaelarace/CodaServer_Src/Coda.g:1950:8: alias2
        {
        pushFollow(FOLLOW_alias2_in_synpred4487695);
        alias2();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred448

    // $ANTLR start synpred449
    public final void synpred449_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:1951:11: ( alias2 '*' )
        // /Users/michaelarace/CodaServer_Src/Coda.g:1951:12: alias2 '*'
        {
        pushFollow(FOLLOW_alias2_in_synpred4497713);
        alias2();
        _fsp--;
        if (failed) return ;
        match(input,178,FOLLOW_178_in_synpred4497715); if (failed) return ;

        }
    }
    // $ANTLR end synpred449

    // $ANTLR start synpred450
    public final void synpred450_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:1952:11: ( alias2 dbObject ',' )
        // /Users/michaelarace/CodaServer_Src/Coda.g:1952:12: alias2 dbObject ','
        {
        pushFollow(FOLLOW_alias2_in_synpred4507739);
        alias2();
        _fsp--;
        if (failed) return ;
        pushFollow(FOLLOW_dbObject_in_synpred4507741);
        dbObject();
        _fsp--;
        if (failed) return ;
        match(input,85,FOLLOW_85_in_synpred4507743); if (failed) return ;

        }
    }
    // $ANTLR end synpred450

    // $ANTLR start synpred452
    public final void synpred452_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:1953:11: ( alias2 dbObject ( arithmeticOperator | '(' ) )
        // /Users/michaelarace/CodaServer_Src/Coda.g:1953:12: alias2 dbObject ( arithmeticOperator | '(' )
        {
        pushFollow(FOLLOW_alias2_in_synpred4527767);
        alias2();
        _fsp--;
        if (failed) return ;
        pushFollow(FOLLOW_dbObject_in_synpred4527769);
        dbObject();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:1953:28: ( arithmeticOperator | '(' )
        int alt348=2;
        int LA348_0 = input.LA(1);

        if ( (LA348_0==178||(LA348_0>=190 && LA348_0<=191)||(LA348_0>=193 && LA348_0<=194)) ) {
            alt348=1;
        }
        else if ( (LA348_0==84) ) {
            alt348=2;
        }
        else {
            if (backtracking>0) {failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("1953:28: ( arithmeticOperator | '(' )", 348, 0, input);

            throw nvae;
        }
        switch (alt348) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:1953:29: arithmeticOperator
                {
                pushFollow(FOLLOW_arithmeticOperator_in_synpred4527772);
                arithmeticOperator();
                _fsp--;
                if (failed) return ;

                }
                break;
            case 2 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:1953:50: '('
                {
                match(input,84,FOLLOW_84_in_synpred4527776); if (failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred452

    // $ANTLR start synpred453
    public final void synpred453_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:1954:11: ( alias2 column )
        // /Users/michaelarace/CodaServer_Src/Coda.g:1954:12: alias2 column
        {
        pushFollow(FOLLOW_alias2_in_synpred4537801);
        alias2();
        _fsp--;
        if (failed) return ;
        pushFollow(FOLLOW_column_in_synpred4537803);
        column();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred453

    // $ANTLR start synpred454
    public final void synpred454_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:1955:11: ( alias2 expression )
        // /Users/michaelarace/CodaServer_Src/Coda.g:1955:12: alias2 expression
        {
        pushFollow(FOLLOW_alias2_in_synpred4547827);
        alias2();
        _fsp--;
        if (failed) return ;
        pushFollow(FOLLOW_expression_in_synpred4547829);
        expression();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred454

    // $ANTLR start synpred456
    public final void synpred456_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:1958:7: ( dbObject ( alias1 )? ',' )
        // /Users/michaelarace/CodaServer_Src/Coda.g:1958:8: dbObject ( alias1 )? ','
        {
        pushFollow(FOLLOW_dbObject_in_synpred4567866);
        dbObject();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:1958:17: ( alias1 )?
        int alt349=2;
        int LA349_0 = input.LA(1);

        if ( (LA349_0==ObjectName||(LA349_0>=10 && LA349_0<=66)||LA349_0==97) ) {
            alt349=1;
        }
        switch (alt349) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:1958:18: alias1
                {
                pushFollow(FOLLOW_alias1_in_synpred4567869);
                alias1();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        match(input,85,FOLLOW_85_in_synpred4567873); if (failed) return ;

        }
    }
    // $ANTLR end synpred456

    // $ANTLR start synpred459
    public final void synpred459_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:1959:7: ( dbObject ( arithmeticOperator | '(' ) )
        // /Users/michaelarace/CodaServer_Src/Coda.g:1959:8: dbObject ( arithmeticOperator | '(' )
        {
        pushFollow(FOLLOW_dbObject_in_synpred4597896);
        dbObject();
        _fsp--;
        if (failed) return ;
        // /Users/michaelarace/CodaServer_Src/Coda.g:1959:17: ( arithmeticOperator | '(' )
        int alt350=2;
        int LA350_0 = input.LA(1);

        if ( (LA350_0==178||(LA350_0>=190 && LA350_0<=191)||(LA350_0>=193 && LA350_0<=194)) ) {
            alt350=1;
        }
        else if ( (LA350_0==84) ) {
            alt350=2;
        }
        else {
            if (backtracking>0) {failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("1959:17: ( arithmeticOperator | '(' )", 350, 0, input);

            throw nvae;
        }
        switch (alt350) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:1959:18: arithmeticOperator
                {
                pushFollow(FOLLOW_arithmeticOperator_in_synpred4597899);
                arithmeticOperator();
                _fsp--;
                if (failed) return ;

                }
                break;
            case 2 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:1959:39: '('
                {
                match(input,84,FOLLOW_84_in_synpred4597903); if (failed) return ;

                }
                break;

        }


        }
    }
    // $ANTLR end synpred459

    // $ANTLR start synpred461
    public final void synpred461_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:1962:7: ( column )
        // /Users/michaelarace/CodaServer_Src/Coda.g:1962:8: column
        {
        pushFollow(FOLLOW_column_in_synpred4617940);
        column();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred461

    // $ANTLR start synpred463
    public final void synpred463_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:1963:7: ( expression )
        // /Users/michaelarace/CodaServer_Src/Coda.g:1963:8: expression
        {
        pushFollow(FOLLOW_expression_in_synpred4637963);
        expression();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred463

    // $ANTLR start synpred468
    public final void synpred468_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:2013:10: ( '(' searchCondition ')' )
        // /Users/michaelarace/CodaServer_Src/Coda.g:2013:11: '(' searchCondition ')'
        {
        match(input,84,FOLLOW_84_in_synpred4688132); if (failed) return ;
        pushFollow(FOLLOW_searchCondition_in_synpred4688134);
        searchCondition();
        _fsp--;
        if (failed) return ;
        match(input,86,FOLLOW_86_in_synpred4688136); if (failed) return ;

        }
    }
    // $ANTLR end synpred468

    // $ANTLR start synpred484
    public final void synpred484_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:2073:7: ( function )
        // /Users/michaelarace/CodaServer_Src/Coda.g:2073:8: function
        {
        pushFollow(FOLLOW_function_in_synpred4848536);
        function();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred484

    // $ANTLR start synpred487
    public final void synpred487_fragment() throws RecognitionException {   
        // /Users/michaelarace/CodaServer_Src/Coda.g:2075:7: ( ( alias2 )? dbObject )
        // /Users/michaelarace/CodaServer_Src/Coda.g:2075:8: ( alias2 )? dbObject
        {
        // /Users/michaelarace/CodaServer_Src/Coda.g:2075:8: ( alias2 )?
        int alt355=2;
        int LA355_0 = input.LA(1);

        if ( (LA355_0==ObjectName) ) {
            int LA355_1 = input.LA(2);

            if ( (LA355_1==77) ) {
                alt355=1;
            }
        }
        else if ( ((LA355_0>=10 && LA355_0<=66)) ) {
            int LA355_2 = input.LA(2);

            if ( (LA355_2==77) ) {
                alt355=1;
            }
        }
        switch (alt355) {
            case 1 :
                // /Users/michaelarace/CodaServer_Src/Coda.g:2075:9: alias2
                {
                pushFollow(FOLLOW_alias2_in_synpred4878567);
                alias2();
                _fsp--;
                if (failed) return ;

                }
                break;

        }

        pushFollow(FOLLOW_dbObject_in_synpred4878571);
        dbObject();
        _fsp--;
        if (failed) return ;

        }
    }
    // $ANTLR end synpred487

    public final boolean synpred185() {
        backtracking++;
        int start = input.mark();
        try {
            synpred185_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred456() {
        backtracking++;
        int start = input.mark();
        try {
            synpred456_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred218() {
        backtracking++;
        int start = input.mark();
        try {
            synpred218_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred209() {
        backtracking++;
        int start = input.mark();
        try {
            synpred209_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred190() {
        backtracking++;
        int start = input.mark();
        try {
            synpred190_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred459() {
        backtracking++;
        int start = input.mark();
        try {
            synpred459_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred15() {
        backtracking++;
        int start = input.mark();
        try {
            synpred15_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred195() {
        backtracking++;
        int start = input.mark();
        try {
            synpred195_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred210() {
        backtracking++;
        int start = input.mark();
        try {
            synpred210_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred221() {
        backtracking++;
        int start = input.mark();
        try {
            synpred221_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred448() {
        backtracking++;
        int start = input.mark();
        try {
            synpred448_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred9() {
        backtracking++;
        int start = input.mark();
        try {
            synpred9_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred487() {
        backtracking++;
        int start = input.mark();
        try {
            synpred487_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred205() {
        backtracking++;
        int start = input.mark();
        try {
            synpred205_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred1() {
        backtracking++;
        int start = input.mark();
        try {
            synpred1_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred468() {
        backtracking++;
        int start = input.mark();
        try {
            synpred468_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred198() {
        backtracking++;
        int start = input.mark();
        try {
            synpred198_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred450() {
        backtracking++;
        int start = input.mark();
        try {
            synpred450_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred484() {
        backtracking++;
        int start = input.mark();
        try {
            synpred484_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred29() {
        backtracking++;
        int start = input.mark();
        try {
            synpred29_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred189() {
        backtracking++;
        int start = input.mark();
        try {
            synpred189_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred32() {
        backtracking++;
        int start = input.mark();
        try {
            synpred32_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred452() {
        backtracking++;
        int start = input.mark();
        try {
            synpred452_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred449() {
        backtracking++;
        int start = input.mark();
        try {
            synpred449_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred463() {
        backtracking++;
        int start = input.mark();
        try {
            synpred463_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred42() {
        backtracking++;
        int start = input.mark();
        try {
            synpred42_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred44() {
        backtracking++;
        int start = input.mark();
        try {
            synpred44_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred201() {
        backtracking++;
        int start = input.mark();
        try {
            synpred201_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred454() {
        backtracking++;
        int start = input.mark();
        try {
            synpred454_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred45() {
        backtracking++;
        int start = input.mark();
        try {
            synpred45_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred43() {
        backtracking++;
        int start = input.mark();
        try {
            synpred43_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred215() {
        backtracking++;
        int start = input.mark();
        try {
            synpred215_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred453() {
        backtracking++;
        int start = input.mark();
        try {
            synpred453_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }
    public final boolean synpred461() {
        backtracking++;
        int start = input.mark();
        try {
            synpred461_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !failed;
        input.rewind(start);
        backtracking--;
        failed=false;
        return success;
    }


 

    public static final BitSet FOLLOW_connect_in_stat85 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_disconnect_in_stat93 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setApplication_in_stat101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createDatasource_in_stat108 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alterDatasource_in_stat115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropDatasource_in_stat122 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formatDatasource_in_stat129 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_promoteApplication_in_stat136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createApplication_in_stat143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alterApplication_in_stat150 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropApplication_in_stat157 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createUser_in_stat164 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alterUser_in_stat171 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropUser_in_stat178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createGroup_in_stat185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alterGroup_in_stat192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropGroup_in_stat199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createType_in_stat206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alterType_in_stat213 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropType_in_stat220 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_grant_in_stat227 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_revoke_in_stat234 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createRole_in_stat241 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alterRole_in_stat248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropRole_in_stat255 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createPermission_in_stat262 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alterPermission_in_stat269 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropPermission_in_stat276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createTable_in_stat283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alterTable_in_stat290 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropTable_in_stat297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createForm_in_stat304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alterForm_in_stat311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropForm_in_stat318 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createIndex_in_stat325 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropIndex_in_stat332 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createTrigger_in_stat339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropTrigger_in_stat346 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createProcedure_in_stat353 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alterProcedure_in_stat360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropProcedure_in_stat367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_insert_in_stat380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_update_in_stat393 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delete_in_stat406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formUpdate_in_stat413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_execProcedure_in_stat420 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_cron_in_stat427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dropCron_in_stat434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selectObject_in_stat441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_select_in_stat450 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rawSQL_in_stat457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rawSelect_in_stat464 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sysSelect_in_stat471 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_show_in_stat478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_describe_in_stat485 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_commit_in_stat492 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rollback_in_stat499 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selectObjectNoCommit_in_query529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selectNoCommit_in_query539 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rawSelectNoCommit_in_query547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sysSelect_in_query555 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_insertNoCommit_in_dml585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_updateNoCommit_in_dml593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_deleteNoCommit_in_dml601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formUpdateNoCommit_in_dml609 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_execProcedureNoCommit_in_dml617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_rawSQLNoCommit_in_dml625 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ObjectName_in_objectName645 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_unreservedKeyword_in_objectName649 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_unreservedKeyword0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_userProperty0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_serverPermission0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_applicationPermission0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_environmentName0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_datasourceProperty0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_typeProperty0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_tableOperation0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_commit1115 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_rollback1132 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_connect1150 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_connect1154 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_connect1156 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_connect1160 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_connect1163 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_connect1165 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_connect1169 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_connect1171 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_connect1175 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_connect1178 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_connect1180 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_connect1184 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_disconnect1208 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_setApplication1227 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_setApplication1229 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_setApplication1233 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_setApplication1235 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_setApplication1239 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_78_in_setApplication1242 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_setApplication1244 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_setApplication1248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_createDatasource1276 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_createDatasource1278 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createDatasource1282 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L,0x0000000800000000L});
    public static final BitSet FOLLOW_displayedAs_in_createDatasource1287 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_createDatasource1294 = new BitSet(new long[]{0x0100100004080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_datasourceParameter_in_createDatasource1298 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_createDatasource1303 = new BitSet(new long[]{0x0100100004080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_datasourceParameter_in_createDatasource1307 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_createDatasource1313 = new BitSet(new long[]{0x0000000000000002L,0x0000000001800000L});
    public static final BitSet FOLLOW_87_in_createDatasource1319 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_createDatasource1321 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_createDatasource1323 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_propertyValuePair_in_createDatasource1327 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_createDatasource1332 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_propertyValuePair_in_createDatasource1336 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_createDatasource1343 = new BitSet(new long[]{0x0000000000000002L,0x0000000001000000L});
    public static final BitSet FOLLOW_88_in_createDatasource1351 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_createDatasource1353 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_createDatasource1357 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_createDatasource1359 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_createDatasource1363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterDatasource1390 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_alterDatasource1392 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterDatasource1396 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L,0x0000000100000000L});
    public static final BitSet FOLLOW_setDisplay_in_alterDatasource1402 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_renameTo_in_alterDatasource1408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_alterDatasource1412 = new BitSet(new long[]{0x0100100004080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_datasourceParameter_in_alterDatasource1416 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_alterDatasource1421 = new BitSet(new long[]{0x0100100004080000L,0x0000000000000001L});
    public static final BitSet FOLLOW_datasourceParameter_in_alterDatasource1425 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_81_in_alterDatasource1434 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_91_in_alterDatasource1436 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_propertyValuePair_in_alterDatasource1440 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_alterDatasource1445 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_propertyValuePair_in_alterDatasource1449 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_92_in_dropDatasource1478 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_dropDatasource1480 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropDatasource1484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_createApplication1504 = new BitSet(new long[]{0x0000000000000000L,0x0000000000009000L});
    public static final BitSet FOLLOW_79_in_createApplication1509 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_createApplication1513 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createApplication1517 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_displayedAs_in_createApplication1522 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_createApplication1527 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_createApplication1529 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createApplication1533 = new BitSet(new long[]{0x0001000000000002L});
    public static final BitSet FOLLOW_48_in_createApplication1536 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createApplication1540 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterApplication1563 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_alterApplication1565 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterApplication1569 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L,0x0000000100000000L});
    public static final BitSet FOLLOW_setDisplay_in_alterApplication1574 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_renameTo_in_alterApplication1580 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_alterApplication1584 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_alterApplication1588 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_alterApplication1590 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterApplication1594 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_dropApplication1614 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_dropApplication1616 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropApplication1620 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_createUser1644 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_createUser1646 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createUser1650 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_95_in_createUser1652 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_96_in_createUser1654 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_createUser1658 = new BitSet(new long[]{0x0000000000000002L,0x0000000200100000L});
    public static final BitSet FOLLOW_97_in_createUser1661 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_98_in_createUser1665 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_createUser1673 = new BitSet(new long[]{0x0400C5002050AC00L});
    public static final BitSet FOLLOW_userParameter_in_createUser1677 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_createUser1682 = new BitSet(new long[]{0x0400C5002050AC00L});
    public static final BitSet FOLLOW_userParameter_in_createUser1686 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_createUser1693 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterUser1720 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_alterUser1722 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterUser1726 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_alterUser1728 = new BitSet(new long[]{0x0400D5002050AC00L});
    public static final BitSet FOLLOW_44_in_alterUser1736 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_alterUser1738 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_alterUser1742 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_userParameter_in_alterUser1752 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_alterUser1757 = new BitSet(new long[]{0x0400C5002050AC00L});
    public static final BitSet FOLLOW_userParameter_in_alterUser1761 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_92_in_dropUser1788 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_dropUser1790 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropUser1794 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_createGroup1813 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_createGroup1815 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createGroup1819 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_displayedAs_in_createGroup1824 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterGroup1847 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_alterGroup1849 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterGroup1853 = new BitSet(new long[]{0x0000000000000000L,0x0000003000020000L,0x0000000100000000L});
    public static final BitSet FOLLOW_renameTo_in_alterGroup1858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setDisplay_in_alterGroup1864 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_alterGroup1868 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_alterGroup1870 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterGroup1874 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_alterGroup1878 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_alterGroup1880 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterGroup1884 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_dropGroup1904 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_dropGroup1906 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropGroup1910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_createType1936 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_102_in_createType1938 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createType1942 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_97_in_createType1944 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_createType1946 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_typeParameter_in_createType1950 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_createType1954 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_typeParameter_in_createType1958 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_createType1962 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterType1986 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_102_in_alterType1988 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterType1992 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_alterType1994 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_typeParameter_in_alterType1998 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_alterType2002 = new BitSet(new long[]{0x0080000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_typeParameter_in_alterType2006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_dropType2028 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_102_in_dropType2030 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropType2034 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_23_in_formatDatasource2054 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L});
    public static final BitSet FOLLOW_83_in_formatDatasource2056 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formatDatasource2060 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_103_in_formatDatasource2063 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_104_in_formatDatasource2067 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_formatDatasource2069 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_95_in_formatDatasource2071 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_96_in_formatDatasource2073 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_formatDatasource2077 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_formatDatasource2082 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_formatDatasource2084 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formatDatasource2088 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_48_in_formatDatasource2090 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formatDatasource2094 = new BitSet(new long[]{0x0000000000000002L,0x0000020000000000L});
    public static final BitSet FOLLOW_105_in_formatDatasource2097 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_Integer_in_formatDatasource2101 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_106_in_promoteApplication2124 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_promoteApplication2126 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_promoteApplication2130 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_promoteApplication2132 = new BitSet(new long[]{0x2004000000020000L,0x0000000000080000L});
    public static final BitSet FOLLOW_environmentName_in_promoteApplication2137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_83_in_promoteApplication2141 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_promoteApplication2145 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_promoteApplication2148 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_105_in_promoteApplication2150 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_Integer_in_promoteApplication2154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_107_in_grant2179 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x00001000000000FFL,0x0000000000000040L,0x0000000000001C00L});
    public static final BitSet FOLLOW_serverPermission_in_grant2192 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200800L});
    public static final BitSet FOLLOW_85_in_grant2197 = new BitSet(new long[]{0x000800EAC0004000L});
    public static final BitSet FOLLOW_serverPermission_in_grant2201 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200800L});
    public static final BitSet FOLLOW_75_in_grant2208 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_applicationPermission_in_grant2220 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_grant2225 = new BitSet(new long[]{0x0000008000044000L,0x0000000000000018L});
    public static final BitSet FOLLOW_applicationPermission_in_grant2229 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_grant2236 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2240 = new BitSet(new long[]{0x0000000000000000L,0x0000008000002800L});
    public static final BitSet FOLLOW_77_in_grant2243 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_grant2247 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000800L});
    public static final BitSet FOLLOW_103_in_grant2253 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_grant2255 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2259 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_grant2264 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_grant2274 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_grant2276 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2280 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_grant2282 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_grant2284 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_108_in_grant2294 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2298 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_grant2300 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2304 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_grant2306 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_grant2310 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000800L});
    public static final BitSet FOLLOW_103_in_grant2313 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_grant2315 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2319 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_grant2324 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_grant2336 = new BitSet(new long[]{0x0000000000000000L,0x0000000000204800L});
    public static final BitSet FOLLOW_85_in_grant2341 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2345 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004800L});
    public static final BitSet FOLLOW_78_in_grant2353 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2357 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_grant2362 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tablePermission_in_grant2374 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_grant2379 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000E0L,0x0000000000000040L});
    public static final BitSet FOLLOW_tablePermission_in_grant2383 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_grant2390 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_109_in_grant2392 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_grant2396 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2401 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_grant2403 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formStatusPermission_in_grant2415 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_grant2420 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000C00L});
    public static final BitSet FOLLOW_formStatusPermission_in_grant2424 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_grant2431 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_110_in_grant2433 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_grant2437 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2442 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_grant2444 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2448 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_grant2450 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_procedurePermission_in_grant2462 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_grant2467 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_procedurePermission_in_grant2471 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_grant2478 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_111_in_grant2480 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_grant2484 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2489 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_grant2491 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_grant2495 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_112_in_revoke2527 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x00001000000000FFL,0x0000000000000040L,0x0000000000001C00L});
    public static final BitSet FOLLOW_serverPermission_in_revoke2538 = new BitSet(new long[]{0x0000000000000000L,0x0002000000200000L});
    public static final BitSet FOLLOW_85_in_revoke2543 = new BitSet(new long[]{0x000800EAC0004000L});
    public static final BitSet FOLLOW_serverPermission_in_revoke2547 = new BitSet(new long[]{0x0000000000000000L,0x0002000000200000L});
    public static final BitSet FOLLOW_113_in_revoke2554 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_applicationPermission_in_revoke2568 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_revoke2573 = new BitSet(new long[]{0x0000008000044000L,0x0000000000000018L});
    public static final BitSet FOLLOW_applicationPermission_in_revoke2577 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_revoke2584 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2588 = new BitSet(new long[]{0x0000000000000000L,0x0002008000002000L});
    public static final BitSet FOLLOW_77_in_revoke2591 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_revoke2595 = new BitSet(new long[]{0x0000000000000000L,0x0002008000000000L});
    public static final BitSet FOLLOW_103_in_revoke2601 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_revoke2603 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2607 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_revoke2612 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_revoke2622 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_revoke2624 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2628 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_revoke2630 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_revoke2632 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_108_in_revoke2642 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2646 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_revoke2648 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2652 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_revoke2654 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_revoke2658 = new BitSet(new long[]{0x0000000000000000L,0x0002008000000000L});
    public static final BitSet FOLLOW_103_in_revoke2661 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_revoke2663 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2667 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_revoke2673 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_revoke2685 = new BitSet(new long[]{0x0000000000000000L,0x0002000000204000L});
    public static final BitSet FOLLOW_85_in_revoke2690 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2694 = new BitSet(new long[]{0x0000000000000000L,0x0002000000004000L});
    public static final BitSet FOLLOW_78_in_revoke2702 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2706 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_revoke2711 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tablePermission_in_revoke2723 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_revoke2728 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000E0L,0x0000000000000040L});
    public static final BitSet FOLLOW_tablePermission_in_revoke2732 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_revoke2739 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_109_in_revoke2741 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_revoke2745 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2750 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_revoke2752 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formStatusPermission_in_revoke2764 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_revoke2769 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000C00L});
    public static final BitSet FOLLOW_formStatusPermission_in_revoke2773 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_revoke2780 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_110_in_revoke2782 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_revoke2786 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2791 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_revoke2793 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2797 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_revoke2799 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_procedurePermission_in_revoke2811 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_revoke2816 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_procedurePermission_in_revoke2820 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_revoke2827 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_111_in_revoke2829 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_revoke2833 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2838 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_revoke2840 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_revoke2844 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_createRole2868 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_108_in_createRole2870 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createRole2874 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L,0x0000000800000000L});
    public static final BitSet FOLLOW_displayedAs_in_createRole2878 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_inApplication_in_createRole2883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterRole2904 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_108_in_alterRole2906 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_alterRole2910 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterRole2915 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L,0x0000000100000000L});
    public static final BitSet FOLLOW_renameTo_in_alterRole2926 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setDisplay_in_alterRole2935 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_dropRole2959 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_108_in_dropRole2961 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_dropRole2965 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropRole2970 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_createPermission2989 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_114_in_createPermission2991 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createPermission2995 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L,0x0000000800000000L});
    public static final BitSet FOLLOW_displayedAs_in_createPermission2999 = new BitSet(new long[]{0x0000000000000002L,0x0000000000004000L});
    public static final BitSet FOLLOW_inApplication_in_createPermission3004 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterPermission3025 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_114_in_alterPermission3027 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_alterPermission3031 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterPermission3036 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L,0x0000000100000000L});
    public static final BitSet FOLLOW_renameTo_in_alterPermission3047 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setDisplay_in_alterPermission3056 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_dropPermission3080 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_114_in_dropPermission3082 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_dropPermission3086 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropPermission3091 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_createTable3116 = new BitSet(new long[]{0x0000000000000000L,0x0018200000008000L});
    public static final BitSet FOLLOW_115_in_createTable3121 = new BitSet(new long[]{0x0000000000000000L,0x0010200000000000L});
    public static final BitSet FOLLOW_79_in_createTable3127 = new BitSet(new long[]{0x0000000000000000L,0x0010200000000000L});
    public static final BitSet FOLLOW_109_in_createTable3133 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createTable3137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000904000L,0x0000000800000000L});
    public static final BitSet FOLLOW_116_in_createTable3141 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createTable3145 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_117_in_createTable3147 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createTable3151 = new BitSet(new long[]{0x0000000000000000L,0x0000000000904000L,0x0000000800000000L});
    public static final BitSet FOLLOW_displayedAs_in_createTable3156 = new BitSet(new long[]{0x0000000000000000L,0x0000000000904000L});
    public static final BitSet FOLLOW_inApplication_in_createTable3161 = new BitSet(new long[]{0x0000000000000000L,0x0000000000900000L});
    public static final BitSet FOLLOW_87_in_createTable3165 = new BitSet(new long[]{0x0000000000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_118_in_createTable3167 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_71_in_createTable3171 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_createTable3178 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_tableFieldDefinitionWithIdentity_in_createTable3182 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_createTable3187 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_tableFieldDefinitionWithIdentity_in_createTable3191 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_createTable3198 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterTable3224 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_109_in_alterTable3226 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_alterTable3230 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterTable3235 = new BitSet(new long[]{0x0000000000000000L,0x0000001014020000L,0x0000000100000000L});
    public static final BitSet FOLLOW_renameTo_in_alterTable3245 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setDisplay_in_alterTable3252 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_alterTable3257 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_119_in_alterTable3259 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_tableFieldDefinition_in_alterTable3263 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterTable3268 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_119_in_alterTable3270 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterTable3274 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_alterTable3276 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_tableFieldDefinition_in_alterTable3280 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_alterTable3285 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_119_in_alterTable3287 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterTable3291 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_alterTable3296 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_120_in_alterTable3298 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_alterTable3300 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterTable3304 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_alterTable3309 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterTable3313 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_alterTable3320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_dropTable3344 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_109_in_dropTable3346 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_dropTable3350 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropTable3355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_createForm3379 = new BitSet(new long[]{0x0000000000000000L,0x0200400000008000L});
    public static final BitSet FOLLOW_79_in_createForm3385 = new BitSet(new long[]{0x0000000000000000L,0x0200400000000000L});
    public static final BitSet FOLLOW_110_in_createForm3391 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createForm3395 = new BitSet(new long[]{0x0000000000000000L,0x0000000000104000L,0x0000000800000000L});
    public static final BitSet FOLLOW_121_in_createForm3399 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createForm3403 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_117_in_createForm3405 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createForm3409 = new BitSet(new long[]{0x0000000000000000L,0x0000000000104000L,0x0000000800000000L});
    public static final BitSet FOLLOW_displayedAs_in_createForm3416 = new BitSet(new long[]{0x0000000000000000L,0x0000000000104000L});
    public static final BitSet FOLLOW_inApplication_in_createForm3421 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_createForm3426 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_formFieldDefinitionWithIdentity_in_createForm3430 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_createForm3435 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_formFieldDefinitionWithIdentity_in_createForm3439 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_createForm3446 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_87_in_createForm3451 = new BitSet(new long[]{0x0800000000000000L});
    public static final BitSet FOLLOW_59_in_createForm3453 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_formStatusCreationDefinition_in_createForm3457 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_createForm3462 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_formStatusCreationDefinition_in_createForm3466 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_90_in_alterForm3495 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_110_in_alterForm3497 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_alterForm3501 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterForm3506 = new BitSet(new long[]{0x0000000000000000L,0x0000001014020000L,0x0000000100000000L});
    public static final BitSet FOLLOW_renameTo_in_alterForm3515 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_setDisplay_in_alterForm3522 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_alterForm3527 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_122_in_alterForm3529 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_formFieldDefinition_in_alterForm3533 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterForm3538 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_122_in_alterForm3540 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterForm3544 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_alterForm3546 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_formFieldDefinition_in_alterForm3550 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_alterForm3555 = new BitSet(new long[]{0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_122_in_alterForm3557 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterForm3561 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_alterForm3566 = new BitSet(new long[]{0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_120_in_alterForm3568 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_alterForm3570 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterForm3574 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_alterForm3579 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterForm3583 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_alterForm3590 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_alterForm3595 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_123_in_alterForm3597 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_formStatusCreationDefinition_in_alterForm3601 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterForm3606 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_123_in_alterForm3608 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterForm3612 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_alterForm3614 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_formStatusCreationDefinition_in_alterForm3618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_alterForm3623 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_123_in_alterForm3625 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterForm3629 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_alterForm3634 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_123_in_alterForm3636 = new BitSet(new long[]{0x0000000000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_124_in_alterForm3638 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_formStatusDefinition_in_alterForm3642 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_alterForm3647 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_formStatusDefinition_in_alterForm3651 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_92_in_dropForm3679 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_110_in_dropForm3681 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_dropForm3685 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropForm3690 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_createIndex3714 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_125_in_createIndex3716 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createIndex3720 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_createIndex3722 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_createIndex3726 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createIndex3731 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_createIndex3733 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createIndex3737 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_createIndex3742 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createIndex3746 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_createIndex3753 = new BitSet(new long[]{0x0000000000000002L,0x4000000000000000L});
    public static final BitSet FOLLOW_126_in_createIndex3758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_dropIndex3780 = new BitSet(new long[]{0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_125_in_dropIndex3782 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_dropIndex3786 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropIndex3791 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_127_in_cron3815 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_cron3819 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_cron3821 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_cron3825 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_cron3827 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_cron3831 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_128_in_cron3833 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0004000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_cronValue_in_cron3837 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0004000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_cronValue_in_cron3841 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0004000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_cronValue_in_cron3845 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0004000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_cronValue_in_cron3849 = new BitSet(new long[]{0x0000000000000020L,0x0000000000000000L,0x0004000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_cronValue_in_cron3853 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_cron3860 = new BitSet(new long[]{0x0000000000000002L,0x0000000200100000L});
    public static final BitSet FOLLOW_84_in_cron3863 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_stringLiteral_in_cron3868 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_arrayLiteral_in_cron3876 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_cron3883 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_stringLiteral_in_cron3888 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_arrayLiteral_in_cron3896 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_cron3904 = new BitSet(new long[]{0x0000000000000002L,0x0000000200000000L});
    public static final BitSet FOLLOW_97_in_cron3912 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_cron3916 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_cron3918 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_cron3922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_dropCron3945 = new BitSet(new long[]{0x0000000000000000L,0x8000000000000000L});
    public static final BitSet FOLLOW_127_in_dropCron3947 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropCron3951 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_dropCron3953 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropCron3957 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_dropCron3959 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_dropCron3963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_129_in_selectObject3982 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_selectObject3984 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_selectObject3988 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_130_in_selectObject3990 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_selectObject3992 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_selectObject3994 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_Integer_in_selectObject3998 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_131_in_selectObject4003 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_129_in_selectObjectNoCommit4024 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_selectObjectNoCommit4026 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_selectObjectNoCommit4030 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_130_in_selectObjectNoCommit4032 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_27_in_selectObjectNoCommit4034 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_selectObjectNoCommit4036 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_Integer_in_selectObjectNoCommit4040 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_131_in_selectObjectNoCommit4045 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_132_in_rawSQL4066 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_133_in_rawSQL4068 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_rawSQL4070 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFFFFFFFFFFFFFL,0xFFFFFFFFFFFFFFFFL,0x0000000000003FFFL});
    public static final BitSet FOLLOW_rawSQLBody_in_rawSQL4074 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_132_in_rawSQLNoCommit4095 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_133_in_rawSQLNoCommit4097 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_rawSQLNoCommit4099 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFFFFFFFFFFFFFL,0xFFFFFFFFFFFFFFFFL,0x0000000000003FFFL});
    public static final BitSet FOLLOW_rawSQLBody_in_rawSQLNoCommit4103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_132_in_rawSelect4123 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_134_in_rawSelect4125 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_rawSelect4127 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFFFFFFFFFFFFFL,0xFFFFFFFFFFFFFFFFL,0x0000000000003FFFL});
    public static final BitSet FOLLOW_rawSQLBody_in_rawSelect4131 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_132_in_rawSelectNoCommit4150 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_134_in_rawSelectNoCommit4152 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_rawSelectNoCommit4154 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFFFFFFFFFFFFFL,0xFFFFFFFFFFFFFFFFL,0x0000000000003FFFL});
    public static final BitSet FOLLOW_rawSQLBody_in_rawSelectNoCommit4158 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_createTrigger4180 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_136_in_createTrigger4189 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_createTrigger4191 = new BitSet(new long[]{0x0000000000000000L,0x0000600000000000L});
    public static final BitSet FOLLOW_109_in_createTrigger4196 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_createTrigger4201 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createTrigger4207 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_137_in_createTrigger4212 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000E0L});
    public static final BitSet FOLLOW_138_in_createTrigger4216 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000E0L});
    public static final BitSet FOLLOW_tableOperation_in_createTrigger4221 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_110_in_createTrigger4226 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_createTrigger4231 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createTrigger4237 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_137_in_createTrigger4242 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_138_in_createTrigger4246 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createTrigger4251 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_97_in_createTrigger4257 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0xFFFFFFFFFFFFFFFFL,0x0000000000003FFFL});
    public static final BitSet FOLLOW_triggerBody_in_createTrigger4261 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_139_in_createTrigger4263 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_dropTrigger4281 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_136_in_dropTrigger4283 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_dropTrigger4285 = new BitSet(new long[]{0x0000000000000000L,0x0000600000000000L});
    public static final BitSet FOLLOW_109_in_dropTrigger4290 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_dropTrigger4295 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropTrigger4301 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_set_in_dropTrigger4305 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000E0L});
    public static final BitSet FOLLOW_tableOperation_in_dropTrigger4315 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_110_in_dropTrigger4320 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_dropTrigger4325 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropTrigger4331 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_set_in_dropTrigger4335 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropTrigger4345 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_createProcedure4374 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_111_in_createProcedure4382 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createProcedure4386 = new BitSet(new long[]{0x0000000000000000L,0x0000000000104000L,0x0000000000001000L});
    public static final BitSet FOLLOW_inApplication_in_createProcedure4391 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L,0x0000000000001000L});
    public static final BitSet FOLLOW_84_in_createProcedure4400 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_procedureParameter_in_createProcedure4404 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_createProcedure4410 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_procedureParameter_in_createProcedure4414 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_createProcedure4421 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_140_in_createProcedure4428 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_createProcedure4432 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_141_in_createProcedure4437 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_97_in_createProcedure4441 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF0L,0xFFFFFFFFFFFFFFFFL,0xFFFFFFFFFFFFFFFFL,0x0000000000003FFFL});
    public static final BitSet FOLLOW_procedureBody_in_createProcedure4445 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_142_in_createProcedure4447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_90_in_alterProcedure4466 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_111_in_alterProcedure4468 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_alterProcedure4473 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alterProcedure4479 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_renameTo_in_alterProcedure4483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_dropProcedure4503 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_111_in_dropProcedure4505 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_dropProcedure4510 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_dropProcedure4516 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_143_in_execProcedure4541 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_111_in_execProcedure4543 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_execProcedure4547 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_execProcedure4550 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_stringLiteral_in_execProcedure4556 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_arrayLiteral_in_execProcedure4564 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_execProcedure4571 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_stringLiteral_in_execProcedure4577 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_arrayLiteral_in_execProcedure4585 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_execProcedure4593 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_143_in_execProcedureNoCommit4617 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_111_in_execProcedureNoCommit4619 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_execProcedureNoCommit4623 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_execProcedureNoCommit4626 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_stringLiteral_in_execProcedureNoCommit4632 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_arrayLiteral_in_execProcedureNoCommit4636 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_execProcedureNoCommit4641 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_stringLiteral_in_execProcedureNoCommit4647 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_arrayLiteral_in_execProcedureNoCommit4651 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_execProcedureNoCommit4657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_144_in_show4682 = new BitSet(new long[]{0xD222200013011000L,0x0000E00000001002L,0x00000000002E0000L});
    public static final BitSet FOLLOW_65_in_show4692 = new BitSet(new long[]{0x0000000000000002L,0x1000008000004000L,0x0000000000000004L});
    public static final BitSet FOLLOW_78_in_show4695 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_show4697 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4701 = new BitSet(new long[]{0x0000000000000002L,0x1000008000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show4707 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_show4709 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4713 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_show4715 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_show4719 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_25_in_show4730 = new BitSet(new long[]{0x0000000000000002L,0x1020008000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_117_in_show4733 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_show4735 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4739 = new BitSet(new long[]{0x0000000000000002L,0x1000008000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show4744 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_show4746 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4750 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_show4752 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_show4756 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_63_in_show4766 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_145_in_show4774 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_57_in_show4782 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_12_in_show4790 = new BitSet(new long[]{0x0000000000000002L,0x1000008000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show4793 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_show4795 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4799 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_146_in_show4810 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_show4812 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_103_in_show4814 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_show4816 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4820 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_76_in_show4828 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_show4830 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_103_in_show4832 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_show4834 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4838 = new BitSet(new long[]{0x0000000000000002L,0x1000000000004000L,0x0000000000000004L});
    public static final BitSet FOLLOW_78_in_show4841 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_show4843 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4847 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_147_in_show4857 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_148_in_show4859 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_149_in_show4867 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_148_in_show4869 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_60_in_show4877 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_24_in_show4885 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_49_in_show4893 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_62_in_show4901 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_103_in_show4903 = new BitSet(new long[]{0x0000000000000000L,0x0000600000000000L});
    public static final BitSet FOLLOW_set_in_show4905 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4916 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_28_in_show4924 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_16_in_show4932 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_53_in_show4940 = new BitSet(new long[]{0x0000000000000002L,0x1000008000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show4943 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_show4945 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4949 = new BitSet(new long[]{0x0000000000000002L,0x1000000000004000L,0x0000000000000004L});
    public static final BitSet FOLLOW_78_in_show4952 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_show4954 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4958 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_45_in_show4971 = new BitSet(new long[]{0x0000000000000002L,0x1000008000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show4974 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_show4976 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4980 = new BitSet(new long[]{0x0000000000000002L,0x1000000000004000L,0x0000000000000004L});
    public static final BitSet FOLLOW_78_in_show4983 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_show4985 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show4989 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show4995 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_108_in_show4997 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show5001 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_109_in_show5012 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_show5014 = new BitSet(new long[]{0x0000000000000002L,0x1000008000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show5017 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_show5019 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show5023 = new BitSet(new long[]{0x0000000000000002L,0x1000000000004000L,0x0000000000000004L});
    public static final BitSet FOLLOW_78_in_show5026 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_show5028 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show5032 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show5038 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_108_in_show5040 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show5044 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_110_in_show5055 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_show5057 = new BitSet(new long[]{0x0000000000000002L,0x1000008000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show5060 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_show5062 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show5066 = new BitSet(new long[]{0x0000000000000002L,0x1000000000004000L,0x0000000000000004L});
    public static final BitSet FOLLOW_78_in_show5069 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_show5071 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show5075 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show5081 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_108_in_show5083 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show5087 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_111_in_show5099 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_45_in_show5101 = new BitSet(new long[]{0x0000000000000002L,0x1000008000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show5104 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_94_in_show5106 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show5110 = new BitSet(new long[]{0x0000000000000002L,0x1000000000004000L,0x0000000000000004L});
    public static final BitSet FOLLOW_78_in_show5113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_show5115 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show5119 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103_in_show5125 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_108_in_show5127 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_show5131 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_whereClause_in_show5148 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_orderByClause_in_show5155 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_150_in_describe5182 = new BitSet(new long[]{0x0000000000000000L,0xA000E04040089000L,0x0000000000000100L});
    public static final BitSet FOLLOW_94_in_describe5188 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_describe5192 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_describe5197 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_describe5201 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_describe5206 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_describe5210 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_describe5215 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_describe5219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_describe5224 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_describe5228 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_109_in_describe5233 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_describe5237 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_151_in_describe5242 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_110_in_describe5249 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_describe5253 = new BitSet(new long[]{0x0800000000200002L,0x0800000000000000L});
    public static final BitSet FOLLOW_21_in_describe5258 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_describe5264 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_123_in_describe5270 = new BitSet(new long[]{0x0010000000000000L});
    public static final BitSet FOLLOW_52_in_describe5272 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_125_in_describe5279 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_describe5283 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_151_in_describe5288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_111_in_describe5295 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_describe5299 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_43_in_describe5304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_136_in_describe5311 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_describe5315 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_137_in_describe5320 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x00000000000000E7L});
    public static final BitSet FOLLOW_138_in_describe5324 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x00000000000000E7L});
    public static final BitSet FOLLOW_tableOperation_in_describe5330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_describe5336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_127_in_describe5342 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_describe5346 = new BitSet(new long[]{0x0000080000000002L});
    public static final BitSet FOLLOW_43_in_describe5351 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_procedureParameter5377 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_procedureParameter5381 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_141_in_procedureParameter5386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_datasourceProperty_in_datasourceParameter5409 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_datasourceParameter5411 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_datasourceParameter5415 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_userProperty_in_userParameter5433 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_userParameter5435 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_userParameter5439 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_typeProperty_in_typeParameter5460 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_typeParameter5462 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_typeParameter5466 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_propertyValuePair5484 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_propertyValuePair5486 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_propertyValuePair5490 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_inApplication5506 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_76_in_inApplication5508 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_inApplication5512 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_applicationPrefix5530 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_applicationPrefix5532 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_fieldType5551 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_152_in_fieldType5557 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_fieldType5559 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_fieldType5563 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_141_in_fieldType5568 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_tableFieldDefinition5590 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L,0x0000000001000000L});
    public static final BitSet FOLLOW_fieldType_in_tableFieldDefinition5594 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000000080E000000L});
    public static final BitSet FOLLOW_displayedAs_in_tableFieldDefinition5598 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x000000000E000000L});
    public static final BitSet FOLLOW_153_in_tableFieldDefinition5602 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_154_in_tableFieldDefinition5608 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_153_in_tableFieldDefinition5610 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_155_in_tableFieldDefinition5616 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000200000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_systemVariable_in_tableFieldDefinition5621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_tableFieldDefinition5627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayLiteral_in_tableFieldDefinition5633 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tableFieldDefinition_in_tableFieldDefinitionWithIdentity5658 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_120_in_tableFieldDefinitionWithIdentity5662 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_formFieldDefinition5683 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L,0x0000000001000000L});
    public static final BitSet FOLLOW_fieldType_in_formFieldDefinition5687 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000808000000L});
    public static final BitSet FOLLOW_displayedAs_in_formFieldDefinition5691 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_155_in_formFieldDefinition5695 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000200000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_systemVariable_in_formFieldDefinition5700 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_formFieldDefinition5706 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayLiteral_in_formFieldDefinition5712 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tableFieldDefinition_in_formFieldDefinitionWithIdentity5737 = new BitSet(new long[]{0x0000000000000002L,0x0100000000000000L});
    public static final BitSet FOLLOW_120_in_formFieldDefinitionWithIdentity5741 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_formStatusDefinition5767 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_156_in_formStatusDefinition5769 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_formStatusDefinition5771 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L,0x0000000020000000L});
    public static final BitSet FOLLOW_84_in_formStatusDefinition5775 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formStatusDefinition5779 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_formStatusDefinition5785 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formStatusDefinition5789 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_formStatusDefinition5796 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_157_in_formStatusDefinition5800 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_formStatusCreationDefinition5821 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formStatusCreationDefinition5825 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L,0x0000000800000000L});
    public static final BitSet FOLLOW_displayedAs_in_formStatusCreationDefinition5829 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_formStatusCreationDefinition5832 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formStatusCreationDefinition5836 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L,0x0000000840000000L});
    public static final BitSet FOLLOW_displayedAs_in_formStatusCreationDefinition5840 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L,0x0000000040000000L});
    public static final BitSet FOLLOW_158_in_formStatusCreationDefinition5846 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_formStatusCreationDefinition5850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_insertValuesList5876 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_insertValuesList5880 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_insertValuesList5886 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_insertValuesList5890 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_insertValuesList5899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_153_in_insertUpdateValue5922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_systemVariable_in_insertUpdateValue5928 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_insertUpdateValue5934 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_arrayLiteral_in_insertUpdateValue5940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_setDisplay5965 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_159_in_setDisplay5967 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_setDisplay5971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_160_in_renameTo5989 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_renameTo5991 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_renameTo5995 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_161_in_arrayLiteral6018 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_arrayLiteral6022 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L,0x0000000400000000L});
    public static final BitSet FOLLOW_85_in_arrayLiteral6027 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_arrayLiteral6031 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L,0x0000000400000000L});
    public static final BitSet FOLLOW_162_in_arrayLiteral6038 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_163_in_displayedAs6055 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_97_in_displayedAs6057 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_displayedAs6061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selectClause_in_select6097 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L});
    public static final BitSet FOLLOW_fromClause_in_select6106 = new BitSet(new long[]{0x0000000000000002L,0x1000000000008000L,0x0000000000000004L});
    public static final BitSet FOLLOW_whereClause_in_select6116 = new BitSet(new long[]{0x0000000000000002L,0x1000000000008000L});
    public static final BitSet FOLLOW_groupByClause_in_select6128 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_havingClause_in_select6133 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_orderByClause_in_select6148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selectClause_in_selectNoCommit6192 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L});
    public static final BitSet FOLLOW_fromClause_in_selectNoCommit6201 = new BitSet(new long[]{0x0000000000000002L,0x1000000000008000L,0x0000000000000004L});
    public static final BitSet FOLLOW_whereClause_in_selectNoCommit6211 = new BitSet(new long[]{0x0000000000000002L,0x1000000000008000L});
    public static final BitSet FOLLOW_groupByClause_in_selectNoCommit6223 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_havingClause_in_selectNoCommit6228 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_orderByClause_in_selectNoCommit6243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_sysSelectClause_in_sysSelect6290 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L});
    public static final BitSet FOLLOW_fromClause_in_sysSelect6299 = new BitSet(new long[]{0x0000000000000002L,0x1000000000008000L,0x0000000000000004L});
    public static final BitSet FOLLOW_whereClause_in_sysSelect6309 = new BitSet(new long[]{0x0000000000000002L,0x1000000000008000L});
    public static final BitSet FOLLOW_groupByClause_in_sysSelect6321 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_havingClause_in_sysSelect6326 = new BitSet(new long[]{0x0000000000000002L,0x1000000000000000L});
    public static final BitSet FOLLOW_orderByClause_in_sysSelect6341 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_insert6384 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_164_in_insert6386 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_insert6390 = new BitSet(new long[]{0x0000000000000000L,0x0000000000120000L});
    public static final BitSet FOLLOW_84_in_insert6395 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_insert6399 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_insert6404 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_insert6408 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_insert6416 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_165_in_insert6418 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_insertValuesList_in_insert6422 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_insert6427 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_insertValuesList_in_insert6431 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_81_in_insert6441 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_insert6445 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_insert6450 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_insert6454 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_insert6459 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_insert6463 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_insert6468 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_insert6472 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_69_in_insertNoCommit6504 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_164_in_insertNoCommit6506 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_insertNoCommit6510 = new BitSet(new long[]{0x0000000000000000L,0x0000000000120000L});
    public static final BitSet FOLLOW_84_in_insertNoCommit6515 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_insertNoCommit6519 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_insertNoCommit6524 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_insertNoCommit6528 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_insertNoCommit6536 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_165_in_insertNoCommit6538 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_insertValuesList_in_insertNoCommit6542 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_insertNoCommit6547 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_insertValuesList_in_insertNoCommit6551 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_81_in_insertNoCommit6561 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_insertNoCommit6565 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_insertNoCommit6570 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_insertNoCommit6574 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_insertNoCommit6579 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_insertNoCommit6583 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_insertNoCommit6588 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_insertNoCommit6592 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_70_in_update6624 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_update6628 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_update6632 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_update6636 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_update6640 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_update6644 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L,0x0000000000000004L});
    public static final BitSet FOLLOW_85_in_update6649 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_update6653 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_update6657 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_update6661 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L,0x0000000000000004L});
    public static final BitSet FOLLOW_whereClause_in_update6674 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_updateNoCommit6701 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_updateNoCommit6705 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_updateNoCommit6709 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_updateNoCommit6713 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_updateNoCommit6717 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_updateNoCommit6721 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L,0x0000000000000004L});
    public static final BitSet FOLLOW_85_in_updateNoCommit6726 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_updateNoCommit6730 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_updateNoCommit6734 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_updateNoCommit6738 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L,0x0000000000000004L});
    public static final BitSet FOLLOW_whereClause_in_updateNoCommit6751 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_delete6772 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_delete6774 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_delete6778 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_whereClause_in_delete6785 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_deleteNoCommit6807 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_deleteNoCommit6809 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_deleteNoCommit6813 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_whereClause_in_deleteNoCommit6820 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_formUpdate6848 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formUpdate6852 = new BitSet(new long[]{0x0000000000000002L,0x0000000200020000L,0x0000000000000004L});
    public static final BitSet FOLLOW_81_in_formUpdate6859 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formUpdate6863 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_formUpdate6867 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_formUpdate6871 = new BitSet(new long[]{0x0000000000000002L,0x0000000200200000L,0x0000000000000004L});
    public static final BitSet FOLLOW_85_in_formUpdate6876 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formUpdate6880 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_formUpdate6884 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_formUpdate6888 = new BitSet(new long[]{0x0000000000000002L,0x0000000200200000L,0x0000000000000004L});
    public static final BitSet FOLLOW_97_in_formUpdate6902 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_166_in_formUpdate6906 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_110_in_formUpdate6908 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whereClause_in_formUpdate6915 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_formUpdateNoCommit6944 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formUpdateNoCommit6948 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_81_in_formUpdateNoCommit6953 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formUpdateNoCommit6957 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_formUpdateNoCommit6961 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_formUpdateNoCommit6965 = new BitSet(new long[]{0x0000000000000002L,0x0000000200200000L,0x0000000000000004L});
    public static final BitSet FOLLOW_85_in_formUpdateNoCommit6970 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_formUpdateNoCommit6974 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_99_in_formUpdateNoCommit6978 = new BitSet(new long[]{0x00000000000000C0L,0x0000000000000000L,0x0000000202000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_insertUpdateValue_in_formUpdateNoCommit6982 = new BitSet(new long[]{0x0000000000000002L,0x0000000200200000L,0x0000000000000004L});
    public static final BitSet FOLLOW_97_in_formUpdateNoCommit6994 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_166_in_formUpdateNoCommit6998 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_110_in_formUpdateNoCommit7000 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_whereClause_in_formUpdateNoCommit7007 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_130_in_whereClause7036 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000006000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_searchCondition_in_whereClause7040 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_113_in_fromClause7078 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000100007L});
    public static final BitSet FOLLOW_tableSource_in_fromClause7082 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_fromClause7087 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000100007L});
    public static final BitSet FOLLOW_tableSource_in_fromClause7091 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_subTableSource_in_tableSource7129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000178000000000L});
    public static final BitSet FOLLOW_joinedTable_in_tableSource7134 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000178000000000L});
    public static final BitSet FOLLOW_objectName_in_subTableSource7188 = new BitSet(new long[]{0xFFFFFFFFFFFFFC12L,0x0000000200000007L});
    public static final BitSet FOLLOW_alias1_in_subTableSource7193 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_subTableSource7216 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000100007L});
    public static final BitSet FOLLOW_joinedTables_in_subTableSource7220 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_subTableSource7236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_alias17269 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_alias17275 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_alias27309 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_77_in_alias27311 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_167_in_joinedTable7348 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_set_in_joinedTable7354 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000180000000000L});
    public static final BitSet FOLLOW_171_in_joinedTable7369 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_172_in_joinedTable7378 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000100007L});
    public static final BitSet FOLLOW_tableSource_in_joinedTable7382 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_joinedTable7384 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000006000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_searchCondition_in_joinedTable7388 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_subTableSource_in_joinedTables7426 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000178000000000L});
    public static final BitSet FOLLOW_joinedTable_in_joinedTables7431 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000178000000000L});
    public static final BitSet FOLLOW_134_in_selectClause7486 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC005200002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_173_in_selectClause7489 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_Integer_in_selectClause7493 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC005400002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_174_in_selectClause7496 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_175_in_selectClause7498 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_Integer_in_selectClause7502 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC005000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_176_in_selectClause7512 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC004000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_selectList_in_selectClause7518 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_177_in_sysSelectClause7550 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC005200002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_176_in_sysSelectClause7555 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC004200002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_173_in_sysSelectClause7560 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_Integer_in_sysSelectClause7564 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC004400002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_174_in_sysSelectClause7567 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_175_in_sysSelectClause7569 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_Integer_in_sysSelectClause7573 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC004000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_selectList_in_sysSelectClause7582 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_selectItem_in_selectList7620 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_selectList7627 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC004000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_selectItem_in_selectList7631 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_178_in_selectItem7669 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_selectItem7722 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_178_in_selectItem7726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_selectItem7750 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_column_in_selectItem7754 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_selectItem7784 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_selectItem7788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_selectItem7810 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_column_in_selectItem7814 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_selectItem7836 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_selectItem7840 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_column_in_selectItem7880 = new BitSet(new long[]{0xFFFFFFFFFFFFFC12L,0x0000000200000007L});
    public static final BitSet FOLLOW_alias1_in_selectItem7885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_selectItem7912 = new BitSet(new long[]{0xFFFFFFFFFFFFFC12L,0x0000000200000007L});
    public static final BitSet FOLLOW_alias1_in_selectItem7917 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_column_in_selectItem7947 = new BitSet(new long[]{0xFFFFFFFFFFFFFC12L,0x0000000200000007L});
    public static final BitSet FOLLOW_alias1_in_selectItem7952 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_selectItem7970 = new BitSet(new long[]{0xFFFFFFFFFFFFFC12L,0x0000000200000007L});
    public static final BitSet FOLLOW_alias1_in_selectItem7975 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dbObject_in_column8021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_subSearchCondition_in_searchCondition8054 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0018000000000000L});
    public static final BitSet FOLLOW_set_in_searchCondition8061 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000006000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_subSearchCondition_in_searchCondition8073 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0018000000000000L});
    public static final BitSet FOLLOW_154_in_subSearchCondition8116 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_84_in_subSearchCondition8142 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000006000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_searchCondition_in_subSearchCondition8146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_subSearchCondition8148 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_predicate_in_subSearchCondition8162 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_predicate8216 = new BitSet(new long[]{0x0000000000000000L,0x0000000800004000L,0x1FE0000004000001L});
    public static final BitSet FOLLOW_comparisonOperator_in_predicate8239 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_predicate8243 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_128_in_predicate8254 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000006000000L});
    public static final BitSet FOLLOW_154_in_predicate8259 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_153_in_predicate8265 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_154_in_predicate8279 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004000L,0x0020000000000000L});
    public static final BitSet FOLLOW_181_in_predicate8299 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_predicate8303 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_predicate8320 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_predicate8322 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_predicate8326 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_predicate8329 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_predicate8333 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_86_in_predicate8337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_182_in_predicate8359 = new BitSet(new long[]{0x00000000000000C0L});
    public static final BitSet FOLLOW_stringLiteral_in_predicate8363 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_comparisonOperator0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_subExpression_in_expression8465 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0xC004000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_arithmeticOperator_in_expression8472 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_subExpression_in_expression8478 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0xC004000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_unaryOperator_in_subExpression8519 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0x0000000002000000L,0x0000000000000078L});
    public static final BitSet FOLLOW_function_in_subExpression8543 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_subExpression8551 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_subExpression8555 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_subExpression8557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_subExpression8579 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_dbObject_in_subExpression8585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_constant_in_subExpression8599 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dbObject_in_function8644 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_84_in_function8646 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000500007L,0xE005000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_function8662 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_85_in_function8667 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_function8671 = new BitSet(new long[]{0x0000000000000000L,0x0000000000600000L});
    public static final BitSet FOLLOW_178_in_function8689 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_set_in_function8707 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC004000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_178_in_function8718 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_expression_in_function8724 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_function8743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_dbObject8768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_stringLiteral8803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_153_in_constant8841 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_stringLiteral_in_constant8847 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_systemVariable_in_constant8853 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_unaryOperator8883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_arithmeticOperator8930 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_systemVariable0 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_124_in_orderByClause9009 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_96_in_orderByClause9011 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_orderByClause9015 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L,0x0000000000000000L,0x0000000000000180L});
    public static final BitSet FOLLOW_199_in_orderByClause9020 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_200_in_orderByClause9026 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_orderByClause9033 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_orderByClause9037 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L,0x0000000000000000L,0x0000000000000180L});
    public static final BitSet FOLLOW_199_in_orderByClause9042 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_200_in_orderByClause9048 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_79_in_groupByClause9087 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_96_in_groupByClause9089 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xE000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_189_in_groupByClause9094 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_groupByClause9100 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_groupByClause9105 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_groupByClause9109 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_201_in_havingClause9141 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000006000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_searchCondition_in_havingClause9145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_triggerBody9181 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFFFFFFFFFFFFFL,0xFFFFFFFFFFFFF7FFL,0x0000000000003FFFL});
    public static final BitSet FOLLOW_set_in_procedureBody9211 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFFFFFFFFFFFFFL,0xFFFFFFFFFFFFBFFFL,0x0000000000003FFFL});
    public static final BitSet FOLLOW_set_in_rawSQLBody9230 = new BitSet(new long[]{0xFFFFFFFFFFFFFFF2L,0xFFFFFFFFFFFFFFFFL,0xFFFFFFFFFFFFFFFFL,0x0000000000003FFFL});
    public static final BitSet FOLLOW_set_in_tablePermission9248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_formStatusPermission9281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_204_in_procedurePermission9310 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_Integer_in_cronValue9338 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L,0x8000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_set_in_cronValue9345 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_Integer_in_cronValue9360 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L,0x8000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_178_in_cronValue9371 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_205_in_cronValue9379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_connect_in_synpred185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createApplication_in_synpred9143 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createGroup_in_synpred15185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createTable_in_synpred29283 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_createForm_in_synpred32304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_insert_in_synpred42373 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_update_in_synpred43386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_delete_in_synpred44399 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formUpdate_in_synpred45413 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_serverPermission_in_synpred1852192 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200800L});
    public static final BitSet FOLLOW_85_in_synpred1852197 = new BitSet(new long[]{0x000800EAC0004000L});
    public static final BitSet FOLLOW_serverPermission_in_synpred1852201 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200800L});
    public static final BitSet FOLLOW_75_in_synpred1852208 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred1852212 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_applicationPermission_in_synpred1892220 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_synpred1892225 = new BitSet(new long[]{0x0000008000044000L,0x0000000000000018L});
    public static final BitSet FOLLOW_applicationPermission_in_synpred1892229 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_synpred1892236 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred1892240 = new BitSet(new long[]{0x0000000000000000L,0x0000008000002800L});
    public static final BitSet FOLLOW_77_in_synpred1892243 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_synpred1892247 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000800L});
    public static final BitSet FOLLOW_103_in_synpred1892253 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_synpred1892255 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred1892259 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_synpred1892264 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred1892268 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_synpred1902274 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_synpred1902276 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred1902280 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_synpred1902282 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_synpred1902284 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred1902288 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_synpred1952336 = new BitSet(new long[]{0x0000000000000000L,0x0000000000204800L});
    public static final BitSet FOLLOW_85_in_synpred1952341 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred1952345 = new BitSet(new long[]{0x0000000000000000L,0x0000000000004800L});
    public static final BitSet FOLLOW_78_in_synpred1952353 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred1952357 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_synpred1952362 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred1952366 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tablePermission_in_synpred1982374 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_synpred1982379 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000E0L,0x0000000000000040L});
    public static final BitSet FOLLOW_tablePermission_in_synpred1982383 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_synpred1982390 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_109_in_synpred1982392 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_synpred1982396 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred1982401 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_synpred1982403 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred1982407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formStatusPermission_in_synpred2012415 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_synpred2012420 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000C00L});
    public static final BitSet FOLLOW_formStatusPermission_in_synpred2012424 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_synpred2012431 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_110_in_synpred2012433 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_synpred2012437 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2012442 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_synpred2012444 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2012448 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_75_in_synpred2012450 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2012454 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_serverPermission_in_synpred2052538 = new BitSet(new long[]{0x0000000000000000L,0x0002000000200000L});
    public static final BitSet FOLLOW_85_in_synpred2052543 = new BitSet(new long[]{0x000800EAC0004000L});
    public static final BitSet FOLLOW_serverPermission_in_synpred2052547 = new BitSet(new long[]{0x0000000000000000L,0x0002000000200000L});
    public static final BitSet FOLLOW_113_in_synpred2052554 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2052558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_applicationPermission_in_synpred2092568 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_synpred2092573 = new BitSet(new long[]{0x0000008000044000L,0x0000000000000018L});
    public static final BitSet FOLLOW_applicationPermission_in_synpred2092577 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_synpred2092584 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2092588 = new BitSet(new long[]{0x0000000000000000L,0x0002008000002000L});
    public static final BitSet FOLLOW_77_in_synpred2092591 = new BitSet(new long[]{0x2004000000020000L});
    public static final BitSet FOLLOW_environmentName_in_synpred2092595 = new BitSet(new long[]{0x0000000000000000L,0x0002008000000000L});
    public static final BitSet FOLLOW_103_in_synpred2092601 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_synpred2092603 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2092607 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_synpred2092612 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2092616 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_14_in_synpred2102622 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_93_in_synpred2102624 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2102628 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_synpred2102630 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_79_in_synpred2102632 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2102636 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_objectName_in_synpred2152685 = new BitSet(new long[]{0x0000000000000000L,0x0002000000204000L});
    public static final BitSet FOLLOW_85_in_synpred2152690 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2152694 = new BitSet(new long[]{0x0000000000000000L,0x0002000000004000L});
    public static final BitSet FOLLOW_78_in_synpred2152702 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2152706 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_synpred2152711 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2152715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_tablePermission_in_synpred2182723 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_synpred2182728 = new BitSet(new long[]{0x0000000000000000L,0x00000000000000E0L,0x0000000000000040L});
    public static final BitSet FOLLOW_tablePermission_in_synpred2182732 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_synpred2182739 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_109_in_synpred2182741 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_synpred2182745 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2182750 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_synpred2182752 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2182756 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_formStatusPermission_in_synpred2212764 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_85_in_synpred2212769 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000C00L});
    public static final BitSet FOLLOW_formStatusPermission_in_synpred2212773 = new BitSet(new long[]{0x0000000000000000L,0x0000000020200000L});
    public static final BitSet FOLLOW_93_in_synpred2212780 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_110_in_synpred2212782 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_applicationPrefix_in_synpred2212786 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2212791 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_74_in_synpred2212793 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2212797 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_113_in_synpred2212799 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_objectName_in_synpred2212803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_synpred4487695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_synpred4497713 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_178_in_synpred4497715 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_synpred4507739 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_dbObject_in_synpred4507741 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_synpred4507743 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_synpred4527767 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_dbObject_in_synpred4527769 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L,0xC004000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_arithmeticOperator_in_synpred4527772 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_synpred4527776 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_synpred4537801 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_column_in_synpred4537803 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_synpred4547827 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000002000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_expression_in_synpred4547829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dbObject_in_synpred4567866 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000200200007L});
    public static final BitSet FOLLOW_alias1_in_synpred4567869 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_85_in_synpred4567873 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_dbObject_in_synpred4597896 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L,0xC004000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_arithmeticOperator_in_synpred4597899 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_synpred4597903 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_column_in_synpred4617940 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_expression_in_synpred4637963 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_synpred4688132 = new BitSet(new long[]{0xFFFFFFFFFFFFFCD0L,0x0000000000100007L,0xC000000006000000L,0x0000000000000079L});
    public static final BitSet FOLLOW_searchCondition_in_synpred4688134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_86_in_synpred4688136 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_function_in_synpred4848536 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_alias2_in_synpred4878567 = new BitSet(new long[]{0xFFFFFFFFFFFFFC10L,0x0000000000000007L});
    public static final BitSet FOLLOW_dbObject_in_synpred4878571 = new BitSet(new long[]{0x0000000000000002L});

}